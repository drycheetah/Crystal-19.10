#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortSoundCueTemplates

#include "Basic.hpp"

#include "SoundCueTemplates_classes.hpp"


namespace SDK
{

// Class FortSoundCueTemplates.FortSoundCueTemplateBase
// 0x0000 (0x0550 - 0x0550)
class UFortSoundCueTemplateBase : public USoundCueTemplate
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSoundCueTemplateBase">();
	}
	static class UFortSoundCueTemplateBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSoundCueTemplateBase>();
	}
};
static_assert(alignof(UFortSoundCueTemplateBase) == 0x000008, "Wrong alignment on UFortSoundCueTemplateBase");
static_assert(sizeof(UFortSoundCueTemplateBase) == 0x000550, "Wrong size on UFortSoundCueTemplateBase");

// Class FortSoundCueTemplates.EmoteBase
// 0x0000 (0x0550 - 0x0550)
class UEmoteBase : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmoteBase">();
	}
	static class UEmoteBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmoteBase>();
	}
};
static_assert(alignof(UEmoteBase) == 0x000008, "Wrong alignment on UEmoteBase");
static_assert(sizeof(UEmoteBase) == 0x000550, "Wrong size on UEmoteBase");

// Class FortSoundCueTemplates.EmoteFoley
// 0x0000 (0x0550 - 0x0550)
class UEmoteFoley final : public UEmoteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmoteFoley">();
	}
	static class UEmoteFoley* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmoteFoley>();
	}
};
static_assert(alignof(UEmoteFoley) == 0x000008, "Wrong alignment on UEmoteFoley");
static_assert(sizeof(UEmoteFoley) == 0x000550, "Wrong size on UEmoteFoley");

// Class FortSoundCueTemplates.EmoteMusic
// 0x0000 (0x0550 - 0x0550)
class UEmoteMusic final : public UEmoteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmoteMusic">();
	}
	static class UEmoteMusic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmoteMusic>();
	}
};
static_assert(alignof(UEmoteMusic) == 0x000008, "Wrong alignment on UEmoteMusic");
static_assert(sizeof(UEmoteMusic) == 0x000550, "Wrong size on UEmoteMusic");

// Class FortSoundCueTemplates.EmoteMusic3P
// 0x0000 (0x0550 - 0x0550)
class UEmoteMusic3P final : public UEmoteBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EmoteMusic3P">();
	}
	static class UEmoteMusic3P* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEmoteMusic3P>();
	}
};
static_assert(alignof(UEmoteMusic3P) == 0x000008, "Wrong alignment on UEmoteMusic3P");
static_assert(sizeof(UEmoteMusic3P) == 0x000550, "Wrong size on UEmoteMusic3P");

// Class FortSoundCueTemplates.FortSoundCueTemplateSimple
// 0x0000 (0x0550 - 0x0550)
class UFortSoundCueTemplateSimple : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortSoundCueTemplateSimple">();
	}
	static class UFortSoundCueTemplateSimple* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortSoundCueTemplateSimple>();
	}
};
static_assert(alignof(UFortSoundCueTemplateSimple) == 0x000008, "Wrong alignment on UFortSoundCueTemplateSimple");
static_assert(sizeof(UFortSoundCueTemplateSimple) == 0x000550, "Wrong size on UFortSoundCueTemplateSimple");

// Class FortSoundCueTemplates.GliderOpen
// 0x0000 (0x0550 - 0x0550)
class UGliderOpen final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GliderOpen">();
	}
	static class UGliderOpen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGliderOpen>();
	}
};
static_assert(alignof(UGliderOpen) == 0x000008, "Wrong alignment on UGliderOpen");
static_assert(sizeof(UGliderOpen) == 0x000550, "Wrong size on UGliderOpen");

// Class FortSoundCueTemplates.GliderClose
// 0x0000 (0x0550 - 0x0550)
class UGliderClose final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GliderClose">();
	}
	static class UGliderClose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGliderClose>();
	}
};
static_assert(alignof(UGliderClose) == 0x000008, "Wrong alignment on UGliderClose");
static_assert(sizeof(UGliderClose) == 0x000550, "Wrong size on UGliderClose");

// Class FortSoundCueTemplates.GliderThrustLoop
// 0x0000 (0x0550 - 0x0550)
class UGliderThrustLoop final : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GliderThrustLoop">();
	}
	static class UGliderThrustLoop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGliderThrustLoop>();
	}
};
static_assert(alignof(UGliderThrustLoop) == 0x000008, "Wrong alignment on UGliderThrustLoop");
static_assert(sizeof(UGliderThrustLoop) == 0x000550, "Wrong size on UGliderThrustLoop");

// Class FortSoundCueTemplates.GliderThrustStart
// 0x0000 (0x0550 - 0x0550)
class UGliderThrustStart final : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GliderThrustStart">();
	}
	static class UGliderThrustStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGliderThrustStart>();
	}
};
static_assert(alignof(UGliderThrustStart) == 0x000008, "Wrong alignment on UGliderThrustStart");
static_assert(sizeof(UGliderThrustStart) == 0x000550, "Wrong size on UGliderThrustStart");

// Class FortSoundCueTemplates.MusicPack
// 0x0000 (0x0550 - 0x0550)
class UMusicPack final : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MusicPack">();
	}
	static class UMusicPack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMusicPack>();
	}
};
static_assert(alignof(UMusicPack) == 0x000008, "Wrong alignment on UMusicPack");
static_assert(sizeof(UMusicPack) == 0x000550, "Wrong size on UMusicPack");

// Class FortSoundCueTemplates.PhysicsStateLoop
// 0x0000 (0x0550 - 0x0550)
class UPhysicsStateLoop final : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PhysicsStateLoop">();
	}
	static class UPhysicsStateLoop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPhysicsStateLoop>();
	}
};
static_assert(alignof(UPhysicsStateLoop) == 0x000008, "Wrong alignment on UPhysicsStateLoop");
static_assert(sizeof(UPhysicsStateLoop) == 0x000550, "Wrong size on UPhysicsStateLoop");

// Class FortSoundCueTemplates.PhysicsImpact
// 0x0000 (0x0550 - 0x0550)
class UPhysicsImpact final : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PhysicsImpact">();
	}
	static class UPhysicsImpact* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPhysicsImpact>();
	}
};
static_assert(alignof(UPhysicsImpact) == 0x000008, "Wrong alignment on UPhysicsImpact");
static_assert(sizeof(UPhysicsImpact) == 0x000550, "Wrong size on UPhysicsImpact");

// Class FortSoundCueTemplates.PickaxeBase
// 0x0000 (0x0550 - 0x0550)
class UPickaxeBase : public UFortSoundCueTemplateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PickaxeBase">();
	}
	static class UPickaxeBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickaxeBase>();
	}
};
static_assert(alignof(UPickaxeBase) == 0x000008, "Wrong alignment on UPickaxeBase");
static_assert(sizeof(UPickaxeBase) == 0x000550, "Wrong size on UPickaxeBase");

// Class FortSoundCueTemplates.PickaxeImpactEnemy
// 0x0000 (0x0550 - 0x0550)
class UPickaxeImpactEnemy final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PickaxeImpactEnemy">();
	}
	static class UPickaxeImpactEnemy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickaxeImpactEnemy>();
	}
};
static_assert(alignof(UPickaxeImpactEnemy) == 0x000008, "Wrong alignment on UPickaxeImpactEnemy");
static_assert(sizeof(UPickaxeImpactEnemy) == 0x000550, "Wrong size on UPickaxeImpactEnemy");

// Class FortSoundCueTemplates.PickaxeReady
// 0x0000 (0x0550 - 0x0550)
class UPickaxeReady final : public UPickaxeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PickaxeReady">();
	}
	static class UPickaxeReady* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickaxeReady>();
	}
};
static_assert(alignof(UPickaxeReady) == 0x000008, "Wrong alignment on UPickaxeReady");
static_assert(sizeof(UPickaxeReady) == 0x000550, "Wrong size on UPickaxeReady");

// Class FortSoundCueTemplates.PickaxeSwing
// 0x0000 (0x0550 - 0x0550)
class UPickaxeSwing final : public UPickaxeBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PickaxeSwing">();
	}
	static class UPickaxeSwing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPickaxeSwing>();
	}
};
static_assert(alignof(UPickaxeSwing) == 0x000008, "Wrong alignment on UPickaxeSwing");
static_assert(sizeof(UPickaxeSwing) == 0x000550, "Wrong size on UPickaxeSwing");

// Class FortSoundCueTemplates.WeaponLowAmmo
// 0x0000 (0x0550 - 0x0550)
class UWeaponLowAmmo final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponLowAmmo">();
	}
	static class UWeaponLowAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponLowAmmo>();
	}
};
static_assert(alignof(UWeaponLowAmmo) == 0x000008, "Wrong alignment on UWeaponLowAmmo");
static_assert(sizeof(UWeaponLowAmmo) == 0x000550, "Wrong size on UWeaponLowAmmo");

// Class FortSoundCueTemplates.WeaponOutOfAmmo
// 0x0000 (0x0550 - 0x0550)
class UWeaponOutOfAmmo final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponOutOfAmmo">();
	}
	static class UWeaponOutOfAmmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponOutOfAmmo>();
	}
};
static_assert(alignof(UWeaponOutOfAmmo) == 0x000008, "Wrong alignment on UWeaponOutOfAmmo");
static_assert(sizeof(UWeaponOutOfAmmo) == 0x000550, "Wrong size on UWeaponOutOfAmmo");

// Class FortSoundCueTemplates.WeaponReloadStart
// 0x0000 (0x0550 - 0x0550)
class UWeaponReloadStart final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponReloadStart">();
	}
	static class UWeaponReloadStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponReloadStart>();
	}
};
static_assert(alignof(UWeaponReloadStart) == 0x000008, "Wrong alignment on UWeaponReloadStart");
static_assert(sizeof(UWeaponReloadStart) == 0x000550, "Wrong size on UWeaponReloadStart");

// Class FortSoundCueTemplates.WeaponReloadInsert
// 0x0000 (0x0550 - 0x0550)
class UWeaponReloadInsert final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponReloadInsert">();
	}
	static class UWeaponReloadInsert* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponReloadInsert>();
	}
};
static_assert(alignof(UWeaponReloadInsert) == 0x000008, "Wrong alignment on UWeaponReloadInsert");
static_assert(sizeof(UWeaponReloadInsert) == 0x000550, "Wrong size on UWeaponReloadInsert");

// Class FortSoundCueTemplates.WeaponReloadEnd
// 0x0000 (0x0550 - 0x0550)
class UWeaponReloadEnd final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponReloadEnd">();
	}
	static class UWeaponReloadEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponReloadEnd>();
	}
};
static_assert(alignof(UWeaponReloadEnd) == 0x000008, "Wrong alignment on UWeaponReloadEnd");
static_assert(sizeof(UWeaponReloadEnd) == 0x000550, "Wrong size on UWeaponReloadEnd");

// Class FortSoundCueTemplates.WeaponTargetingStart
// 0x0000 (0x0550 - 0x0550)
class UWeaponTargetingStart final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponTargetingStart">();
	}
	static class UWeaponTargetingStart* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTargetingStart>();
	}
};
static_assert(alignof(UWeaponTargetingStart) == 0x000008, "Wrong alignment on UWeaponTargetingStart");
static_assert(sizeof(UWeaponTargetingStart) == 0x000550, "Wrong size on UWeaponTargetingStart");

// Class FortSoundCueTemplates.WeaponTargetingEnd
// 0x0000 (0x0550 - 0x0550)
class UWeaponTargetingEnd final : public UFortSoundCueTemplateSimple
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeaponTargetingEnd">();
	}
	static class UWeaponTargetingEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponTargetingEnd>();
	}
};
static_assert(alignof(UWeaponTargetingEnd) == 0x000008, "Wrong alignment on UWeaponTargetingEnd");
static_assert(sizeof(UWeaponTargetingEnd) == 0x000550, "Wrong size on UWeaponTargetingEnd");

}

