#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "CrewUI_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function CrewUI.BattlePassCrewPurchaseContainer.OnContentStateUpdated
// 0x0002 (0x0002 - 0x0000)
struct BattlePassCrewPurchaseContainer_OnContentStateUpdated final
{
public:
	EBattlePassCrewContentState                   InState;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInScreenOpened;                                   // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BattlePassCrewPurchaseContainer_OnContentStateUpdated) == 0x000001, "Wrong alignment on BattlePassCrewPurchaseContainer_OnContentStateUpdated");
static_assert(sizeof(BattlePassCrewPurchaseContainer_OnContentStateUpdated) == 0x000002, "Wrong size on BattlePassCrewPurchaseContainer_OnContentStateUpdated");
static_assert(offsetof(BattlePassCrewPurchaseContainer_OnContentStateUpdated, InState) == 0x000000, "Member 'BattlePassCrewPurchaseContainer_OnContentStateUpdated::InState' has a wrong offset!");
static_assert(offsetof(BattlePassCrewPurchaseContainer_OnContentStateUpdated, bInScreenOpened) == 0x000001, "Member 'BattlePassCrewPurchaseContainer_OnContentStateUpdated::bInScreenOpened' has a wrong offset!");

// Function CrewUI.BattlePassCrewPurchaseContainer.OnTriggerIntroAnimation
// 0x0001 (0x0001 - 0x0000)
struct BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation final
{
public:
	bool                                          bCanClaimRewards;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation) == 0x000001, "Wrong alignment on BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation");
static_assert(sizeof(BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation) == 0x000001, "Wrong size on BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation");
static_assert(offsetof(BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation, bCanClaimRewards) == 0x000000, "Member 'BattlePassCrewPurchaseContainer_OnTriggerIntroAnimation::bCanClaimRewards' has a wrong offset!");

// Function CrewUI.BattlePassPurchaseScreen.OnPurchaseStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BattlePassPurchaseScreen_OnPurchaseStateChanged final
{
public:
	EBattlePassPurchaseState                      InCurrentState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BattlePassPurchaseScreen_OnPurchaseStateChanged) == 0x000001, "Wrong alignment on BattlePassPurchaseScreen_OnPurchaseStateChanged");
static_assert(sizeof(BattlePassPurchaseScreen_OnPurchaseStateChanged) == 0x000001, "Wrong size on BattlePassPurchaseScreen_OnPurchaseStateChanged");
static_assert(offsetof(BattlePassPurchaseScreen_OnPurchaseStateChanged, InCurrentState) == 0x000000, "Member 'BattlePassPurchaseScreen_OnPurchaseStateChanged::InCurrentState' has a wrong offset!");

// Function CrewUI.BattlePassPurchaseScreen.OnSetScreenInteractable
// 0x0001 (0x0001 - 0x0000)
struct BattlePassPurchaseScreen_OnSetScreenInteractable final
{
public:
	bool                                          bInteractable;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BattlePassPurchaseScreen_OnSetScreenInteractable) == 0x000001, "Wrong alignment on BattlePassPurchaseScreen_OnSetScreenInteractable");
static_assert(sizeof(BattlePassPurchaseScreen_OnSetScreenInteractable) == 0x000001, "Wrong size on BattlePassPurchaseScreen_OnSetScreenInteractable");
static_assert(offsetof(BattlePassPurchaseScreen_OnSetScreenInteractable, bInteractable) == 0x000000, "Member 'BattlePassPurchaseScreen_OnSetScreenInteractable::bInteractable' has a wrong offset!");

// Function CrewUI.CrewPurchaseScreen.BeginProgress
// 0x0018 (0x0018 - 0x0000)
struct CrewPurchaseScreen_BeginProgress final
{
public:
	class FText                                   ProgressLabel;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewPurchaseScreen_BeginProgress) == 0x000008, "Wrong alignment on CrewPurchaseScreen_BeginProgress");
static_assert(sizeof(CrewPurchaseScreen_BeginProgress) == 0x000018, "Wrong size on CrewPurchaseScreen_BeginProgress");
static_assert(offsetof(CrewPurchaseScreen_BeginProgress, ProgressLabel) == 0x000000, "Member 'CrewPurchaseScreen_BeginProgress::ProgressLabel' has a wrong offset!");

// Function CrewUI.CrewPurchaseScreen.OnContainerTabVisibilityUpdated
// 0x0008 (0x0008 - 0x0000)
struct CrewPurchaseScreen_OnContainerTabVisibilityUpdated final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingAdjustmentForTabs;                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewPurchaseScreen_OnContainerTabVisibilityUpdated) == 0x000004, "Wrong alignment on CrewPurchaseScreen_OnContainerTabVisibilityUpdated");
static_assert(sizeof(CrewPurchaseScreen_OnContainerTabVisibilityUpdated) == 0x000008, "Wrong size on CrewPurchaseScreen_OnContainerTabVisibilityUpdated");
static_assert(offsetof(CrewPurchaseScreen_OnContainerTabVisibilityUpdated, bTabsVisible) == 0x000000, "Member 'CrewPurchaseScreen_OnContainerTabVisibilityUpdated::bTabsVisible' has a wrong offset!");
static_assert(offsetof(CrewPurchaseScreen_OnContainerTabVisibilityUpdated, SpacingAdjustmentForTabs) == 0x000004, "Member 'CrewPurchaseScreen_OnContainerTabVisibilityUpdated::SpacingAdjustmentForTabs' has a wrong offset!");

// Function CrewUI.CrewPurchaseScreen.OnUpdatePurchaseButtonState
// 0x0001 (0x0001 - 0x0000)
struct CrewPurchaseScreen_OnUpdatePurchaseButtonState final
{
public:
	ECrewPurchaseButtonState                      ButtonState;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewPurchaseScreen_OnUpdatePurchaseButtonState) == 0x000001, "Wrong alignment on CrewPurchaseScreen_OnUpdatePurchaseButtonState");
static_assert(sizeof(CrewPurchaseScreen_OnUpdatePurchaseButtonState) == 0x000001, "Wrong size on CrewPurchaseScreen_OnUpdatePurchaseButtonState");
static_assert(offsetof(CrewPurchaseScreen_OnUpdatePurchaseButtonState, ButtonState) == 0x000000, "Member 'CrewPurchaseScreen_OnUpdatePurchaseButtonState::ButtonState' has a wrong offset!");

// Function CrewUI.CrewPurchaseScreen.OnUpdateVBuckRefundVisibility
// 0x0001 (0x0001 - 0x0000)
struct CrewPurchaseScreen_OnUpdateVBuckRefundVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewPurchaseScreen_OnUpdateVBuckRefundVisibility) == 0x000001, "Wrong alignment on CrewPurchaseScreen_OnUpdateVBuckRefundVisibility");
static_assert(sizeof(CrewPurchaseScreen_OnUpdateVBuckRefundVisibility) == 0x000001, "Wrong size on CrewPurchaseScreen_OnUpdateVBuckRefundVisibility");
static_assert(offsetof(CrewPurchaseScreen_OnUpdateVBuckRefundVisibility, bVisible) == 0x000000, "Member 'CrewPurchaseScreen_OnUpdateVBuckRefundVisibility::bVisible' has a wrong offset!");

// Function CrewUI.CrewRewardTile.OnDownloadTileImageComplete
// 0x0008 (0x0008 - 0x0000)
struct CrewRewardTile_OnDownloadTileImageComplete final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewRewardTile_OnDownloadTileImageComplete) == 0x000008, "Wrong alignment on CrewRewardTile_OnDownloadTileImageComplete");
static_assert(sizeof(CrewRewardTile_OnDownloadTileImageComplete) == 0x000008, "Wrong size on CrewRewardTile_OnDownloadTileImageComplete");
static_assert(offsetof(CrewRewardTile_OnDownloadTileImageComplete, Texture) == 0x000000, "Member 'CrewRewardTile_OnDownloadTileImageComplete::Texture' has a wrong offset!");

// Function CrewUI.CrewRewardTile.OnUpdateOwnedState
// 0x0001 (0x0001 - 0x0000)
struct CrewRewardTile_OnUpdateOwnedState final
{
public:
	bool                                          bOwned;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewRewardTile_OnUpdateOwnedState) == 0x000001, "Wrong alignment on CrewRewardTile_OnUpdateOwnedState");
static_assert(sizeof(CrewRewardTile_OnUpdateOwnedState) == 0x000001, "Wrong size on CrewRewardTile_OnUpdateOwnedState");
static_assert(offsetof(CrewRewardTile_OnUpdateOwnedState, bOwned) == 0x000000, "Member 'CrewRewardTile_OnUpdateOwnedState::bOwned' has a wrong offset!");

// Function CrewUI.CrewTileDetailsTag.OnTagSetup
// 0x0002 (0x0002 - 0x0000)
struct CrewTileDetailsTag_OnTagSetup final
{
public:
	ECrewDetailsTag                               RewardTag;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsOwnedTag;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CrewTileDetailsTag_OnTagSetup) == 0x000001, "Wrong alignment on CrewTileDetailsTag_OnTagSetup");
static_assert(sizeof(CrewTileDetailsTag_OnTagSetup) == 0x000002, "Wrong size on CrewTileDetailsTag_OnTagSetup");
static_assert(offsetof(CrewTileDetailsTag_OnTagSetup, RewardTag) == 0x000000, "Member 'CrewTileDetailsTag_OnTagSetup::RewardTag' has a wrong offset!");
static_assert(offsetof(CrewTileDetailsTag_OnTagSetup, bIsOwnedTag) == 0x000001, "Member 'CrewTileDetailsTag_OnTagSetup::bIsOwnedTag' has a wrong offset!");

}

