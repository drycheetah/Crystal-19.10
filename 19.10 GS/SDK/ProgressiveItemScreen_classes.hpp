#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveItemScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ProgressiveCosmeticUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProgressiveItemScreen.ProgressiveItemScreen_C
// 0x0078 (0x0808 - 0x0790)
class UProgressiveItemScreen_C final : public UFortProgressiveItemScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0790(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Intro;                                             // 0x0798(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ProgDetailsItemChange;                             // 0x07A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 No_Count_1;                                        // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_ProgressiveStageList;                      // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Spike_Angle_Left;                                  // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Spike_Angle_Right;                                 // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThinSpike_Left;                                    // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ThinSpike_Right;                                   // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color1;                                            // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Color2;                                            // 0x07E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           Color3;                                            // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BP_OnActivated();
	void CustomEvent(class UFortTextButton* NewPipButton);
	void ExecuteUbergraph_ProgressiveItemScreen(int32 EntryPoint);
	void OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs);
	void OnItemSelected();
	void OnPreviewActionButtonUpdated(const class FText& RowDisplayName);
	void UpdateLayoutForTabs(bool bTabsVisible, float SpacingAdjustmentForTabs);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProgressiveItemScreen_C">();
	}
	static class UProgressiveItemScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProgressiveItemScreen_C>();
	}
};
static_assert(alignof(UProgressiveItemScreen_C) == 0x000008, "Wrong alignment on UProgressiveItemScreen_C");
static_assert(sizeof(UProgressiveItemScreen_C) == 0x000808, "Wrong size on UProgressiveItemScreen_C");
static_assert(offsetof(UProgressiveItemScreen_C, UberGraphFrame) == 0x000790, "Member 'UProgressiveItemScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Intro) == 0x000798, "Member 'UProgressiveItemScreen_C::Intro' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, ProgDetailsItemChange) == 0x0007A0, "Member 'UProgressiveItemScreen_C::ProgDetailsItemChange' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, No_Count_1) == 0x0007A8, "Member 'UProgressiveItemScreen_C::No_Count_1' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, SizeBox_ProgressiveStageList) == 0x0007B0, "Member 'UProgressiveItemScreen_C::SizeBox_ProgressiveStageList' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Spike_Angle_Left) == 0x0007B8, "Member 'UProgressiveItemScreen_C::Spike_Angle_Left' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Spike_Angle_Right) == 0x0007C0, "Member 'UProgressiveItemScreen_C::Spike_Angle_Right' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, ThinSpike_Left) == 0x0007C8, "Member 'UProgressiveItemScreen_C::ThinSpike_Left' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, ThinSpike_Right) == 0x0007D0, "Member 'UProgressiveItemScreen_C::ThinSpike_Right' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Color1) == 0x0007D8, "Member 'UProgressiveItemScreen_C::Color1' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Color2) == 0x0007E8, "Member 'UProgressiveItemScreen_C::Color2' has a wrong offset!");
static_assert(offsetof(UProgressiveItemScreen_C, Color3) == 0x0007F8, "Member 'UProgressiveItemScreen_C::Color3' has a wrong offset!");

}

