#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS19_SeasonalDataWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPS19_SeasonalDataWidget.BPS19_SeasonalDataWidget_C
// 0x0068 (0x02D8 - 0x0270)
class UBPS19_SeasonalDataWidget_C final : public UFortSeasonDataWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_392;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BattlePass_Free;                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BattlePass_Owned;                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RaceTrack;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_CurrentLevel;                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_Level;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_BattlePass;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_5stars;                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     Bp_Material;                                       // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              On_Bp_Owned;                                       // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OwnsBattlePass;                                    // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxBPLevelForRewards;                              // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPS19_SeasonalDataWidget(int32 EntryPoint);
	void OnBattlePassOwned();
	void OnLevelChanged();
	void OnProgressUpdated();
	void OnSuperCharged();
	void UpdateText();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS19_SeasonalDataWidget_C">();
	}
	static class UBPS19_SeasonalDataWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS19_SeasonalDataWidget_C>();
	}
};
static_assert(alignof(UBPS19_SeasonalDataWidget_C) == 0x000008, "Wrong alignment on UBPS19_SeasonalDataWidget_C");
static_assert(sizeof(UBPS19_SeasonalDataWidget_C) == 0x0002D8, "Wrong size on UBPS19_SeasonalDataWidget_C");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, UberGraphFrame) == 0x000270, "Member 'UBPS19_SeasonalDataWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Image_392) == 0x000278, "Member 'UBPS19_SeasonalDataWidget_C::Image_392' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Image_BattlePass_Free) == 0x000280, "Member 'UBPS19_SeasonalDataWidget_C::Image_BattlePass_Free' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Image_BattlePass_Owned) == 0x000288, "Member 'UBPS19_SeasonalDataWidget_C::Image_BattlePass_Owned' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Image_RaceTrack) == 0x000290, "Member 'UBPS19_SeasonalDataWidget_C::Image_RaceTrack' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, RichText_CurrentLevel) == 0x000298, "Member 'UBPS19_SeasonalDataWidget_C::RichText_CurrentLevel' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, RichText_Level) == 0x0002A0, "Member 'UBPS19_SeasonalDataWidget_C::RichText_Level' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Text_BattlePass) == 0x0002A8, "Member 'UBPS19_SeasonalDataWidget_C::Text_BattlePass' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, VerticalBox_5stars) == 0x0002B0, "Member 'UBPS19_SeasonalDataWidget_C::VerticalBox_5stars' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, Bp_Material) == 0x0002B8, "Member 'UBPS19_SeasonalDataWidget_C::Bp_Material' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, On_Bp_Owned) == 0x0002C0, "Member 'UBPS19_SeasonalDataWidget_C::On_Bp_Owned' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, OwnsBattlePass) == 0x0002D0, "Member 'UBPS19_SeasonalDataWidget_C::OwnsBattlePass' has a wrong offset!");
static_assert(offsetof(UBPS19_SeasonalDataWidget_C, MaxBPLevelForRewards) == 0x0002D4, "Member 'UBPS19_SeasonalDataWidget_C::MaxBPLevelForRewards' has a wrong offset!");

}

