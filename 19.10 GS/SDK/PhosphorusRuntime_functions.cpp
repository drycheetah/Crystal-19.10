#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhosphorusRuntime

#include "Basic.hpp"

#include "PhosphorusRuntime_classes.hpp"
#include "PhosphorusRuntime_parameters.hpp"


namespace SDK
{

// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.AdvanceRound
// (RequiredAPI, Native, Protected)

void AFortAthenaMutator_Phosphorus::AdvanceRound()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AdvanceRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.AudioFadeChangeEvent
// (Final, RequiredAPI, Native, Protected)
// Parameters:
// bool                                    bFadeOut                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Phosphorus::AudioFadeChangeEvent(bool bFadeOut, float FadeTime)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("AudioFadeChangeEvent");

	Params::FortAthenaMutator_Phosphorus_AudioFadeChangeEvent Parms{};

	Parms.bFadeOut = bFadeOut;
	Parms.FadeTime = FadeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.FadeToFirstRound
// (Final, Native, Private)

void AFortAthenaMutator_Phosphorus::FadeToFirstRound()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("FadeToFirstRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetCachedStormMutator
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAthenaMutator_CustomStormMovement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaMutator_CustomStormMovement* AFortAthenaMutator_Phosphorus::GetCachedStormMutator()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCachedStormMutator");

	Params::FortAthenaMutator_Phosphorus_GetCachedStormMutator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetTeamMVP
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// uint8                                   TeamNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateAthena*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStateAthena* AFortAthenaMutator_Phosphorus::GetTeamMVP(const uint8 TeamNum)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTeamMVP");

	Params::FortAthenaMutator_Phosphorus_GetTeamMVP Parms{};

	Parms.TeamNum = TeamNum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.HandlePawnStormStatusChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInSafeZone                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Phosphorus::HandlePawnStormStatusChanged(class AFortPlayerPawn* PlayerPawn, bool bIsInSafeZone)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePawnStormStatusChanged");

	Params::FortAthenaMutator_Phosphorus_HandlePawnStormStatusChanged Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.bIsInSafeZone = bIsInSafeZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnAllPodsLanded
// (Final, Native, Private)

void AFortAthenaMutator_Phosphorus::OnAllPodsLanded()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAllPodsLanded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnAllPodsLaunched
// (Final, Native, Private)

void AFortAthenaMutator_Phosphorus::OnAllPodsLaunched()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAllPodsLaunched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnPawnEjectedFromPod
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawnAthena*            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Phosphorus::OnPawnEjectedFromPod(class AFortPlayerPawnAthena* Pawn)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPawnEjectedFromPod");

	Params::FortAthenaMutator_Phosphorus_OnPawnEjectedFromPod Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnPrePodLaunch
// (Final, Native, Private)

void AFortAthenaMutator_Phosphorus::OnPrePodLaunch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrePodLaunch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnRep_CurrentRound
// (Final, Native, Private)

void AFortAthenaMutator_Phosphorus::OnRep_CurrentRound()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_CurrentRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.OnRep_PhosphorusPhase
// (RequiredAPI, Native, Protected)

void AFortAthenaMutator_Phosphorus::OnRep_PhosphorusPhase()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_PhosphorusPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetLeadingTeamNums
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<uint8>                           LeadingTeamNums                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Phosphorus::GetLeadingTeamNums(TArray<uint8>* LeadingTeamNums) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLeadingTeamNums");

	Params::FortAthenaMutator_Phosphorus_GetLeadingTeamNums Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeadingTeamNums != nullptr)
		*LeadingTeamNums = std::move(Parms.LeadingTeamNums);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetNumAliveTeams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAthenaMutator_Phosphorus::GetNumAliveTeams() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumAliveTeams");

	Params::FortAthenaMutator_Phosphorus_GetNumAliveTeams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetNumValidTeams
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAthenaMutator_Phosphorus::GetNumValidTeams() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetNumValidTeams");

	Params::FortAthenaMutator_Phosphorus_GetNumValidTeams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetRoundWinningTeamNum
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AFortAthenaMutator_Phosphorus::GetRoundWinningTeamNum() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetRoundWinningTeamNum");

	Params::FortAthenaMutator_Phosphorus_GetRoundWinningTeamNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetTeamDataArray
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FPhosphorusTeamData>      OutTeamDataArray                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bMustBeValid                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMustBeAlive                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSortByScore                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_Phosphorus::GetTeamDataArray(TArray<struct FPhosphorusTeamData>* OutTeamDataArray, const bool bMustBeValid, const bool bMustBeAlive, const bool bSortByScore) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTeamDataArray");

	Params::FortAthenaMutator_Phosphorus_GetTeamDataArray Parms{};

	Parms.bMustBeValid = bMustBeValid;
	Parms.bMustBeAlive = bMustBeAlive;
	Parms.bSortByScore = bSortByScore;

	UObject::ProcessEvent(Func, &Parms);

	if (OutTeamDataArray != nullptr)
		*OutTeamDataArray = std::move(Parms.OutTeamDataArray);
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetTeamDataCopy
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPhosphorusTeamData              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPhosphorusTeamData AFortAthenaMutator_Phosphorus::GetTeamDataCopy(const uint8 TeamNum) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTeamDataCopy");

	Params::FortAthenaMutator_Phosphorus_GetTeamDataCopy Parms{};

	Parms.TeamNum = TeamNum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.GetTeamSize
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAthenaMutator_Phosphorus::GetTeamSize(const uint8 TeamNum) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetTeamSize");

	Params::FortAthenaMutator_Phosphorus_GetTeamSize Parms{};

	Parms.TeamNum = TeamNum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.IsOnWinningTeam
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawnAthena*            Pawn                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaMutator_Phosphorus::IsOnWinningTeam(const class AFortPlayerPawnAthena* Pawn) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsOnWinningTeam");

	Params::FortAthenaMutator_Phosphorus_IsOnWinningTeam Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.IsTeamAlive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaMutator_Phosphorus::IsTeamAlive(const uint8 TeamNum) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsTeamAlive");

	Params::FortAthenaMutator_Phosphorus_IsTeamAlive Parms{};

	Parms.TeamNum = TeamNum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_Phosphorus.IsTeamValid
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   TeamNum                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaMutator_Phosphorus::IsTeamValid(const uint8 TeamNum) const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsTeamValid");

	Params::FortAthenaMutator_Phosphorus_IsTeamValid Parms{};

	Parms.TeamNum = TeamNum;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.GetPodDataForActor
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerSpawnPodData              OutPodData                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           ContextString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaMutator_PlayerSpawnPod::GetPodDataForActor(const class AActor* Actor, struct FPlayerSpawnPodData* OutPodData, const class FString& ContextString)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPodDataForActor");

	Params::FortAthenaMutator_PlayerSpawnPod_GetPodDataForActor Parms{};

	Parms.Actor = Actor;
	Parms.ContextString = std::move(ContextString);

	UObject::ProcessEvent(Func, &Parms);

	if (OutPodData != nullptr)
		*OutPodData = std::move(Parms.OutPodData);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.GetPodDataForID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPlayerSpawnPodData              OutPodData                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           ContextString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaMutator_PlayerSpawnPod::GetPodDataForID(const int32 ID, struct FPlayerSpawnPodData* OutPodData, const class FString& ContextString)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPodDataForID");

	Params::FortAthenaMutator_PlayerSpawnPod_GetPodDataForID Parms{};

	Parms.ID = ID;
	Parms.ContextString = std::move(ContextString);

	UObject::ProcessEvent(Func, &Parms);

	if (OutPodData != nullptr)
		*OutPodData = std::move(Parms.OutPodData);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.HandlePodLanded
// (Final, Native, Private)
// Parameters:
// class UActorComponent*                  InComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_PlayerSpawnPod::HandlePodLanded(class UActorComponent* InComponent)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandlePodLanded");

	Params::FortAthenaMutator_PlayerSpawnPod_HandlePodLanded Parms{};

	Parms.InComponent = InComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.OnAllTeleportComplete
// (Final, Native, Private)

void AFortAthenaMutator_PlayerSpawnPod::OnAllTeleportComplete()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnAllTeleportComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.OnPodDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_PlayerSpawnPod::OnPodDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPodDestroyed");

	Params::FortAthenaMutator_PlayerSpawnPod_OnPodDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.OnRep_BlockedAbilitySystemComponents
// (Final, Native, Private)

void AFortAthenaMutator_PlayerSpawnPod::OnRep_BlockedAbilitySystemComponents()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_BlockedAbilitySystemComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.OnRep_PodDataArray
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FPlayerSpawnPodData>      OldPodDataArray                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortAthenaMutator_PlayerSpawnPod::OnRep_PodDataArray(TArray<struct FPlayerSpawnPodData>* OldPodDataArray)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnRep_PodDataArray");

	Params::FortAthenaMutator_PlayerSpawnPod_OnRep_PodDataArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OldPodDataArray != nullptr)
		*OldPodDataArray = std::move(Parms.OldPodDataArray);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.OnSingleTeleportComplete
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           PlayerState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_PlayerSpawnPod::OnSingleTeleportComplete(class AFortPlayerStateAthena* PlayerState)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnSingleTeleportComplete");

	Params::FortAthenaMutator_PlayerSpawnPod_OnSingleTeleportComplete Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.SetViewTarget
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      Controller                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ViewTarget                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FViewTargetTransitionParams      ViewTargetTransitionParams                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bDestroyOldViewTarget                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAthenaMutator_PlayerSpawnPod::SetViewTarget(class AFortPlayerControllerAthena* Controller, class AActor* ViewTarget, const struct FViewTargetTransitionParams& ViewTargetTransitionParams, const bool bDestroyOldViewTarget)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetViewTarget");

	Params::FortAthenaMutator_PlayerSpawnPod_SetViewTarget Parms{};

	Parms.Controller = Controller;
	Parms.ViewTarget = ViewTarget;
	Parms.ViewTargetTransitionParams = std::move(ViewTargetTransitionParams);
	Parms.bDestroyOldViewTarget = bDestroyOldViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortAthenaMutator_PlayerSpawnPod.GetFallDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAthenaMutator_PlayerSpawnPod::GetFallDuration() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetFallDuration");

	Params::FortAthenaMutator_PlayerSpawnPod_GetFallDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PhosphorusRuntime.FortCheatManager_Phosphorus.PhosphorusDebug
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TextScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Phosphorus::PhosphorusDebug(float TextScale)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PhosphorusDebug");

	Params::FortCheatManager_Phosphorus_PhosphorusDebug Parms{};

	Parms.TextScale = TextScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortCheatManager_Phosphorus.PhosphorusEndMatch
// (Final, Exec, Native, Public)

void UFortCheatManager_Phosphorus::PhosphorusEndMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PhosphorusEndMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortCheatManager_Phosphorus.PhosphorusEndRound
// (Final, Exec, Native, Public)

void UFortCheatManager_Phosphorus::PhosphorusEndRound()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PhosphorusEndRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortCheatManager_Phosphorus.PhosphorusForceStartMatch
// (Final, Exec, Native, Public)

void UFortCheatManager_Phosphorus::PhosphorusForceStartMatch()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PhosphorusForceStartMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortCheatManager_Phosphorus.PhosphorusSetNumRoundsToWin
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumRounds                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_Phosphorus::PhosphorusSetNumRoundsToWin(const int32 NumRounds)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PhosphorusSetNumRoundsToWin");

	Params::FortCheatManager_Phosphorus_PhosphorusSetNumRoundsToWin Parms{};

	Parms.NumRounds = NumRounds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortCheatManager_PlayerSpawnPod.PlayerSpawnPodDebug
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TextScale                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_PlayerSpawnPod::PlayerSpawnPodDebug(float TextScale)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayerSpawnPodDebug");

	Params::FortCheatManager_PlayerSpawnPod_PlayerSpawnPodDebug Parms{};

	Parms.TextScale = TextScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PhosphorusRuntime.FortCheatManager_PlayerSpawnPod.PlayerSpawnPodTest
// (Final, Exec, Native, Public)

void UFortCheatManager_PlayerSpawnPod::PlayerSpawnPodTest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayerSpawnPodTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PhosphorusRuntime.FortCheatManager_PlayerSpawnPod.PlayerSpawnPodTestAllPlayers
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bIndividualPods                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager_PlayerSpawnPod::PlayerSpawnPodTestAllPlayers(const bool bIndividualPods)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("PlayerSpawnPodTestAllPlayers");

	Params::FortCheatManager_PlayerSpawnPod_PlayerSpawnPodTestAllPlayers Parms{};

	Parms.bIndividualPods = bIndividualPods;

	UObject::ProcessEvent(Func, &Parms);
}

}

