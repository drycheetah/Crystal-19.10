#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HermesPlaysetsUI

#include "Basic.hpp"


namespace SDK
{

// Enum HermesPlaysetsUI.EDownloadOnDemandErrorMessage
// NumValues: 0x0004
enum class EDownloadOnDemandErrorMessage : uint8
{
	ProjectLinkCodeFailedToResolve           = 0,
	ProjectLinkCodeAlreadyUsed               = 1,
	ProjectBeaconFailedToDownload            = 2,
	ProjectHasNoPlaysetsDownloadFailed       = 3,
};

// ScriptStruct HermesPlaysetsUI.DownloadProjectInfo
// 0x0080 (0x0080 - 0x0000)
struct FDownloadProjectInfo final
{
public:
	class FString                                 LinkCode;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Version;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisplayName;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                      PreviewTexture;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreviewTextureURL;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ShortDescription;                                  // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   FullDescription;                                   // 0x0060(0x0018)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                          bSelected;                                         // 0x0078(0x0001)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGotBadData;                                       // 0x0079(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGhost;                                            // 0x007A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDownloaded;                                       // 0x007B(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDownloading;                                      // 0x007C(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDownloadProjectInfo) == 0x000008, "Wrong alignment on FDownloadProjectInfo");
static_assert(sizeof(FDownloadProjectInfo) == 0x000080, "Wrong size on FDownloadProjectInfo");
static_assert(offsetof(FDownloadProjectInfo, LinkCode) == 0x000000, "Member 'FDownloadProjectInfo::LinkCode' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, Version) == 0x000010, "Member 'FDownloadProjectInfo::Version' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, DisplayName) == 0x000018, "Member 'FDownloadProjectInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, PreviewTexture) == 0x000030, "Member 'FDownloadProjectInfo::PreviewTexture' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, PreviewTextureURL) == 0x000038, "Member 'FDownloadProjectInfo::PreviewTextureURL' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, ShortDescription) == 0x000048, "Member 'FDownloadProjectInfo::ShortDescription' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, FullDescription) == 0x000060, "Member 'FDownloadProjectInfo::FullDescription' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bSelected) == 0x000078, "Member 'FDownloadProjectInfo::bSelected' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bGotBadData) == 0x000079, "Member 'FDownloadProjectInfo::bGotBadData' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bGhost) == 0x00007A, "Member 'FDownloadProjectInfo::bGhost' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bDownloaded) == 0x00007B, "Member 'FDownloadProjectInfo::bDownloaded' has a wrong offset!");
static_assert(offsetof(FDownloadProjectInfo, bDownloading) == 0x00007C, "Member 'FDownloadProjectInfo::bDownloading' has a wrong offset!");

// ScriptStruct HermesPlaysetsUI.ModuleData
// 0x0010 (0x0010 - 0x0000)
struct FModuleData final
{
public:
	TArray<class UFortItemDefinition*>            DownloadedItems;                                   // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FModuleData) == 0x000008, "Wrong alignment on FModuleData");
static_assert(sizeof(FModuleData) == 0x000010, "Wrong size on FModuleData");
static_assert(offsetof(FModuleData, DownloadedItems) == 0x000000, "Member 'FModuleData::DownloadedItems' has a wrong offset!");

}

