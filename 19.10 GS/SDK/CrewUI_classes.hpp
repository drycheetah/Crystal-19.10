#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "CrewUI_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// Class CrewUI.CrewSeasonLaunchScreen
// 0x00F0 (0x0460 - 0x0370)
class UCrewSeasonLaunchScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_370[0x38];                                     // 0x0370(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ResolveIssueModalClass;                            // 0x03A8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_SeasonInfo;                                // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_Description;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Claim;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ResolveIssue;                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_GiftBattlePass;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Disclaimer;                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_400[0x60];                                     // 0x0400(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewSeasonLaunchScreen">();
	}
	static class UCrewSeasonLaunchScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewSeasonLaunchScreen>();
	}
};
static_assert(alignof(UCrewSeasonLaunchScreen) == 0x000008, "Wrong alignment on UCrewSeasonLaunchScreen");
static_assert(sizeof(UCrewSeasonLaunchScreen) == 0x000460, "Wrong size on UCrewSeasonLaunchScreen");
static_assert(offsetof(UCrewSeasonLaunchScreen, ResolveIssueModalClass) == 0x0003A8, "Member 'UCrewSeasonLaunchScreen::ResolveIssueModalClass' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Heading_SeasonInfo) == 0x0003D0, "Member 'UCrewSeasonLaunchScreen::Heading_SeasonInfo' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Text_Description) == 0x0003D8, "Member 'UCrewSeasonLaunchScreen::Text_Description' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_Claim) == 0x0003E0, "Member 'UCrewSeasonLaunchScreen::Button_Claim' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_ResolveIssue) == 0x0003E8, "Member 'UCrewSeasonLaunchScreen::Button_ResolveIssue' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_GiftBattlePass) == 0x0003F0, "Member 'UCrewSeasonLaunchScreen::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, RichText_Disclaimer) == 0x0003F8, "Member 'UCrewSeasonLaunchScreen::RichText_Disclaimer' has a wrong offset!");

// Class CrewUI.BattlePassCrewContentInterface
// 0x0000 (0x0028 - 0x0028)
class IBattlePassCrewContentInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewContentInterface">();
	}
	static class IBattlePassCrewContentInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBattlePassCrewContentInterface>();
	}
};
static_assert(alignof(IBattlePassCrewContentInterface) == 0x000008, "Wrong alignment on IBattlePassCrewContentInterface");
static_assert(sizeof(IBattlePassCrewContentInterface) == 0x000028, "Wrong size on IBattlePassCrewContentInterface");

// Class CrewUI.BattlePassCrewPurchaseButton
// 0x0020 (0x0ED0 - 0x0EB0)
class UBattlePassCrewPurchaseButton : public UCommonButtonBase
{
public:
	EBattlePassPurchaseButtonCurrencyType         CurrencyType;                                      // 0x0EA8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_EA9[0x7];                                      // 0x0EA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_Label;                                        // 0x0EB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_SecondaryLabel;                               // 0x0EB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_FinalCost;                                    // 0x0EC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Container_SecondaryLabel;                          // 0x0EC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCurrencyUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewPurchaseButton">();
	}
	static class UBattlePassCrewPurchaseButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassCrewPurchaseButton>();
	}
};
static_assert(alignof(UBattlePassCrewPurchaseButton) == 0x000010, "Wrong alignment on UBattlePassCrewPurchaseButton");
static_assert(sizeof(UBattlePassCrewPurchaseButton) == 0x000ED0, "Wrong size on UBattlePassCrewPurchaseButton");
static_assert(offsetof(UBattlePassCrewPurchaseButton, CurrencyType) == 0x000EA8, "Member 'UBattlePassCrewPurchaseButton::CurrencyType' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_Label) == 0x000EB0, "Member 'UBattlePassCrewPurchaseButton::Text_Label' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_SecondaryLabel) == 0x000EB8, "Member 'UBattlePassCrewPurchaseButton::Text_SecondaryLabel' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_FinalCost) == 0x000EC0, "Member 'UBattlePassCrewPurchaseButton::Text_FinalCost' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Container_SecondaryLabel) == 0x000EC8, "Member 'UBattlePassCrewPurchaseButton::Container_SecondaryLabel' has a wrong offset!");

// Class CrewUI.BattlePassCrewPurchaseContainer
// 0x0078 (0x03A8 - 0x0330)
class UBattlePassCrewPurchaseContainer : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_330[0x20];                                     // 0x0330(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrewUpsellTransitionDelayTime;                     // 0x0350(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_354[0xC];                                      // 0x0354(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidgetSwitcher*       Switcher_ContentContainer;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassPurchaseScreen*              BattlePassPurchaseScreen;                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       Intro;                                             // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       QuickIntro;                                        // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       CrewBenefitsIntro;                                 // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x20];                                     // 0x0388(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContentStateUpdated(EBattlePassCrewContentState InState, bool bInScreenOpened);
	void OnTriggerIntroAnimation(bool bCanClaimRewards);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewPurchaseContainer">();
	}
	static class UBattlePassCrewPurchaseContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassCrewPurchaseContainer>();
	}
};
static_assert(alignof(UBattlePassCrewPurchaseContainer) == 0x000008, "Wrong alignment on UBattlePassCrewPurchaseContainer");
static_assert(sizeof(UBattlePassCrewPurchaseContainer) == 0x0003A8, "Wrong size on UBattlePassCrewPurchaseContainer");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, CrewUpsellTransitionDelayTime) == 0x000350, "Member 'UBattlePassCrewPurchaseContainer::CrewUpsellTransitionDelayTime' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, Switcher_ContentContainer) == 0x000360, "Member 'UBattlePassCrewPurchaseContainer::Switcher_ContentContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, BattlePassPurchaseScreen) == 0x000368, "Member 'UBattlePassCrewPurchaseContainer::BattlePassPurchaseScreen' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, Intro) == 0x000370, "Member 'UBattlePassCrewPurchaseContainer::Intro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, QuickIntro) == 0x000378, "Member 'UBattlePassCrewPurchaseContainer::QuickIntro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, CrewBenefitsIntro) == 0x000380, "Member 'UBattlePassCrewPurchaseContainer::CrewBenefitsIntro' has a wrong offset!");

// Class CrewUI.BattlePassSeasonHeading
// 0x0008 (0x0278 - 0x0270)
class UBattlePassSeasonHeading : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Season;                                       // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassSeasonHeading">();
	}
	static class UBattlePassSeasonHeading* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassSeasonHeading>();
	}
};
static_assert(alignof(UBattlePassSeasonHeading) == 0x000008, "Wrong alignment on UBattlePassSeasonHeading");
static_assert(sizeof(UBattlePassSeasonHeading) == 0x000278, "Wrong size on UBattlePassSeasonHeading");
static_assert(offsetof(UBattlePassSeasonHeading, Text_Season) == 0x000270, "Member 'UBattlePassSeasonHeading::Text_Season' has a wrong offset!");

// Class CrewUI.BattlePassPurchaseScreen
// 0x0100 (0x0470 - 0x0370)
class UBattlePassPurchaseScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_370[0xA0];                                     // 0x0370(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonActivatableWidget>   PurchaseCompleteModal;                             // 0x0410(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ToCrew;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Purchase;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MoreInfo;                                   // 0x0428(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_GiftBattlePass;                             // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_ConfirmBase;                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_ConfirmBundle;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_Primary;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_Secondary;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Disclaimer;                               // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*                Switcher_PurchaseState;                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPurchaseConfirmed();
	void OnPurchaseStateChanged(EBattlePassPurchaseState InCurrentState);
	void OnSetScreenInteractable(bool bInteractable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassPurchaseScreen">();
	}
	static class UBattlePassPurchaseScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassPurchaseScreen>();
	}
};
static_assert(alignof(UBattlePassPurchaseScreen) == 0x000008, "Wrong alignment on UBattlePassPurchaseScreen");
static_assert(sizeof(UBattlePassPurchaseScreen) == 0x000470, "Wrong size on UBattlePassPurchaseScreen");
static_assert(offsetof(UBattlePassPurchaseScreen, PurchaseCompleteModal) == 0x000410, "Member 'UBattlePassPurchaseScreen::PurchaseCompleteModal' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ToCrew) == 0x000418, "Member 'UBattlePassPurchaseScreen::Button_ToCrew' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_Purchase) == 0x000420, "Member 'UBattlePassPurchaseScreen::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_MoreInfo) == 0x000428, "Member 'UBattlePassPurchaseScreen::Button_MoreInfo' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_GiftBattlePass) == 0x000430, "Member 'UBattlePassPurchaseScreen::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ConfirmBase) == 0x000438, "Member 'UBattlePassPurchaseScreen::Button_ConfirmBase' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ConfirmBundle) == 0x000440, "Member 'UBattlePassPurchaseScreen::Button_ConfirmBundle' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Heading_Primary) == 0x000448, "Member 'UBattlePassPurchaseScreen::Heading_Primary' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Heading_Secondary) == 0x000450, "Member 'UBattlePassPurchaseScreen::Heading_Secondary' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, RichText_Disclaimer) == 0x000458, "Member 'UBattlePassPurchaseScreen::RichText_Disclaimer' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Text_Description) == 0x000460, "Member 'UBattlePassPurchaseScreen::Text_Description' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Switcher_PurchaseState) == 0x000468, "Member 'UBattlePassPurchaseScreen::Switcher_PurchaseState' has a wrong offset!");

// Class CrewUI.CrewPurchaseScreen
// 0x01B0 (0x0520 - 0x0370)
class UCrewPurchaseScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_370[0x88];                                     // 0x0370(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bManagementModeEnabled;                            // 0x03F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                FocusWidget;                                       // 0x0400(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonGroupBase*                 ButtonGroup_BenefitsTiles;                         // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CancellationInfoModalClass;                        // 0x0410(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   LegalInfoModalClass;                               // 0x0438(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   ResolveIssueModalClass;                            // 0x0460(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   RejoinModalClass;                                  // 0x0488(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ToBattlePass;                               // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Purchase;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Rejoin;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ResolvePayment;                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_WatchTrailer;                               // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Terms;                                      // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_CancellationInfo;                           // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_RecurringRewards;                         // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_LimitedTimeRewards;                       // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCrewTileDetails*                       Details_CurrentCrewTile;                           // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_LimitedTime;                                  // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_UserInformation;                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_UserInformation;                              // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_CrewDisclaimer;                               // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BeginProgress(const class FText& ProgressLabel);
	void EndProgress();
	void OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs);
	void OnUpdatePurchaseButtonState(ECrewPurchaseButtonState ButtonState);
	void OnUpdateVBuckRefundVisibility(bool bVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewPurchaseScreen">();
	}
	static class UCrewPurchaseScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewPurchaseScreen>();
	}
};
static_assert(alignof(UCrewPurchaseScreen) == 0x000008, "Wrong alignment on UCrewPurchaseScreen");
static_assert(sizeof(UCrewPurchaseScreen) == 0x000520, "Wrong size on UCrewPurchaseScreen");
static_assert(offsetof(UCrewPurchaseScreen, bManagementModeEnabled) == 0x0003F8, "Member 'UCrewPurchaseScreen::bManagementModeEnabled' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, FocusWidget) == 0x000400, "Member 'UCrewPurchaseScreen::FocusWidget' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, ButtonGroup_BenefitsTiles) == 0x000408, "Member 'UCrewPurchaseScreen::ButtonGroup_BenefitsTiles' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, CancellationInfoModalClass) == 0x000410, "Member 'UCrewPurchaseScreen::CancellationInfoModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, LegalInfoModalClass) == 0x000438, "Member 'UCrewPurchaseScreen::LegalInfoModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, ResolveIssueModalClass) == 0x000460, "Member 'UCrewPurchaseScreen::ResolveIssueModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, RejoinModalClass) == 0x000488, "Member 'UCrewPurchaseScreen::RejoinModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_ToBattlePass) == 0x0004B0, "Member 'UCrewPurchaseScreen::Button_ToBattlePass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Purchase) == 0x0004B8, "Member 'UCrewPurchaseScreen::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Rejoin) == 0x0004C0, "Member 'UCrewPurchaseScreen::Button_Rejoin' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_ResolvePayment) == 0x0004C8, "Member 'UCrewPurchaseScreen::Button_ResolvePayment' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_WatchTrailer) == 0x0004D0, "Member 'UCrewPurchaseScreen::Button_WatchTrailer' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Terms) == 0x0004D8, "Member 'UCrewPurchaseScreen::Button_Terms' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_CancellationInfo) == 0x0004E0, "Member 'UCrewPurchaseScreen::Button_CancellationInfo' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, EntryBox_RecurringRewards) == 0x0004E8, "Member 'UCrewPurchaseScreen::EntryBox_RecurringRewards' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, EntryBox_LimitedTimeRewards) == 0x0004F0, "Member 'UCrewPurchaseScreen::EntryBox_LimitedTimeRewards' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Details_CurrentCrewTile) == 0x0004F8, "Member 'UCrewPurchaseScreen::Details_CurrentCrewTile' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_LimitedTime) == 0x000500, "Member 'UCrewPurchaseScreen::Text_LimitedTime' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Overlay_UserInformation) == 0x000508, "Member 'UCrewPurchaseScreen::Overlay_UserInformation' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_UserInformation) == 0x000510, "Member 'UCrewPurchaseScreen::Text_UserInformation' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_CrewDisclaimer) == 0x000518, "Member 'UCrewPurchaseScreen::Text_CrewDisclaimer' has a wrong offset!");

// Class CrewUI.CrewRewardTile
// 0x0060 (0x0F10 - 0x0EB0)
class UCrewRewardTile : public UCommonButtonBase
{
public:
	uint8                                         Pad_EA8[0x40];                                     // 0x0EA8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TileImageStreamoutSeconds;                         // 0x0EE8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_EEC[0xC];                                      // 0x0EEC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_TileImage;                                   // 0x0EF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_TileLabel;                                    // 0x0F00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F08[0x8];                                      // 0x0F08(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDownloadTileImageComplete(class UTexture2D* Texture);
	void OnStartingDownloadTileImage();
	void OnUpdateOwnedState(bool bOwned);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewRewardTile">();
	}
	static class UCrewRewardTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewRewardTile>();
	}
};
static_assert(alignof(UCrewRewardTile) == 0x000010, "Wrong alignment on UCrewRewardTile");
static_assert(sizeof(UCrewRewardTile) == 0x000F10, "Wrong size on UCrewRewardTile");
static_assert(offsetof(UCrewRewardTile, TileImageStreamoutSeconds) == 0x000EE8, "Member 'UCrewRewardTile::TileImageStreamoutSeconds' has a wrong offset!");
static_assert(offsetof(UCrewRewardTile, Image_TileImage) == 0x000EF8, "Member 'UCrewRewardTile::Image_TileImage' has a wrong offset!");
static_assert(offsetof(UCrewRewardTile, Text_TileLabel) == 0x000F00, "Member 'UCrewRewardTile::Text_TileLabel' has a wrong offset!");

// Class CrewUI.CrewTileDetails
// 0x0048 (0x02B8 - 0x0270)
class UCrewTileDetails : public UCommonUserWidget
{
public:
	uint8                                         Pad_270[0x28];                                     // 0x0270(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_Title;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Description;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_Tags;                                     // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MobileMoreInfo;                             // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewTileDetails">();
	}
	static class UCrewTileDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewTileDetails>();
	}
};
static_assert(alignof(UCrewTileDetails) == 0x000008, "Wrong alignment on UCrewTileDetails");
static_assert(sizeof(UCrewTileDetails) == 0x0002B8, "Wrong size on UCrewTileDetails");
static_assert(offsetof(UCrewTileDetails, Text_Title) == 0x000298, "Member 'UCrewTileDetails::Text_Title' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, RichText_Description) == 0x0002A0, "Member 'UCrewTileDetails::RichText_Description' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, EntryBox_Tags) == 0x0002A8, "Member 'UCrewTileDetails::EntryBox_Tags' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, Button_MobileMoreInfo) == 0x0002B0, "Member 'UCrewTileDetails::Button_MobileMoreInfo' has a wrong offset!");

// Class CrewUI.CrewTileDetailsTag
// 0x0008 (0x0278 - 0x0270)
class UCrewTileDetailsTag : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Label;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTagSetup(ECrewDetailsTag RewardTag, bool bIsOwnedTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewTileDetailsTag">();
	}
	static class UCrewTileDetailsTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewTileDetailsTag>();
	}
};
static_assert(alignof(UCrewTileDetailsTag) == 0x000008, "Wrong alignment on UCrewTileDetailsTag");
static_assert(sizeof(UCrewTileDetailsTag) == 0x000278, "Wrong size on UCrewTileDetailsTag");
static_assert(offsetof(UCrewTileDetailsTag, Text_Label) == 0x000270, "Member 'UCrewTileDetailsTag::Text_Label' has a wrong offset!");

// Class CrewUI.CrewUIGameFeatureAction
// 0x0050 (0x0078 - 0x0028)
class UCrewUIGameFeatureAction final : public UFortUIGameFeatureAction
{
public:
	TSoftClassPtr<class UClass>                   BattlePassCrewContainerClass;                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CrewContentContainerClass;                         // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewUIGameFeatureAction">();
	}
	static class UCrewUIGameFeatureAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewUIGameFeatureAction>();
	}
};
static_assert(alignof(UCrewUIGameFeatureAction) == 0x000008, "Wrong alignment on UCrewUIGameFeatureAction");
static_assert(sizeof(UCrewUIGameFeatureAction) == 0x000078, "Wrong size on UCrewUIGameFeatureAction");
static_assert(offsetof(UCrewUIGameFeatureAction, BattlePassCrewContainerClass) == 0x000028, "Member 'UCrewUIGameFeatureAction::BattlePassCrewContainerClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, CrewContentContainerClass) == 0x000050, "Member 'UCrewUIGameFeatureAction::CrewContentContainerClass' has a wrong offset!");

}

