#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoundLibrary

#include "Basic.hpp"

#include "SoundLibrary_structs.hpp"


namespace SDK::Params
{

// Function SoundLibrary.SoundLibraryAnimContext.ConfigureContext
// 0x0038 (0x0038 - 0x0000)
struct SoundLibraryAnimContext_ConfigureContext final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                      InAnimation;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundLibraryAnimContextSettings       InSettings;                                        // 0x0010(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibraryAnimContext_ConfigureContext) == 0x000008, "Wrong alignment on SoundLibraryAnimContext_ConfigureContext");
static_assert(sizeof(SoundLibraryAnimContext_ConfigureContext) == 0x000038, "Wrong size on SoundLibraryAnimContext_ConfigureContext");
static_assert(offsetof(SoundLibraryAnimContext_ConfigureContext, OwningActor) == 0x000000, "Member 'SoundLibraryAnimContext_ConfigureContext::OwningActor' has a wrong offset!");
static_assert(offsetof(SoundLibraryAnimContext_ConfigureContext, InAnimation) == 0x000008, "Member 'SoundLibraryAnimContext_ConfigureContext::InAnimation' has a wrong offset!");
static_assert(offsetof(SoundLibraryAnimContext_ConfigureContext, InSettings) == 0x000010, "Member 'SoundLibraryAnimContext_ConfigureContext::InSettings' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.AddLibraries
// 0x0018 (0x0018 - 0x0000)
struct SoundLibrarySubsystem_AddLibraries final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class USoundLibrary>>      Libraries;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_AddLibraries) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_AddLibraries");
static_assert(sizeof(SoundLibrarySubsystem_AddLibraries) == 0x000018, "Wrong size on SoundLibrarySubsystem_AddLibraries");
static_assert(offsetof(SoundLibrarySubsystem_AddLibraries, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_AddLibraries::Actor' has a wrong offset!");
static_assert(offsetof(SoundLibrarySubsystem_AddLibraries, Libraries) == 0x000008, "Member 'SoundLibrarySubsystem_AddLibraries::Libraries' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.AddLibrary
// 0x0010 (0x0010 - 0x0000)
struct SoundLibrarySubsystem_AddLibrary final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USoundLibrary>              Library;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_AddLibrary) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_AddLibrary");
static_assert(sizeof(SoundLibrarySubsystem_AddLibrary) == 0x000010, "Wrong size on SoundLibrarySubsystem_AddLibrary");
static_assert(offsetof(SoundLibrarySubsystem_AddLibrary, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_AddLibrary::Actor' has a wrong offset!");
static_assert(offsetof(SoundLibrarySubsystem_AddLibrary, Library) == 0x000008, "Member 'SoundLibrarySubsystem_AddLibrary::Library' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.DisableEventsForActor
// 0x0008 (0x0008 - 0x0000)
struct SoundLibrarySubsystem_DisableEventsForActor final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_DisableEventsForActor) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_DisableEventsForActor");
static_assert(sizeof(SoundLibrarySubsystem_DisableEventsForActor) == 0x000008, "Wrong size on SoundLibrarySubsystem_DisableEventsForActor");
static_assert(offsetof(SoundLibrarySubsystem_DisableEventsForActor, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_DisableEventsForActor::Actor' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.EnableEventsForActor
// 0x0008 (0x0008 - 0x0000)
struct SoundLibrarySubsystem_EnableEventsForActor final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_EnableEventsForActor) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_EnableEventsForActor");
static_assert(sizeof(SoundLibrarySubsystem_EnableEventsForActor) == 0x000008, "Wrong size on SoundLibrarySubsystem_EnableEventsForActor");
static_assert(offsetof(SoundLibrarySubsystem_EnableEventsForActor, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_EnableEventsForActor::Actor' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.PlaySound
// 0x0038 (0x0038 - 0x0000)
struct SoundLibrarySubsystem_PlaySound final
{
public:
	const class USoundLibraryContext*             Context;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoundLibraryPlaySoundResult           OutResults;                                        // 0x0008(0x0030)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_PlaySound) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_PlaySound");
static_assert(sizeof(SoundLibrarySubsystem_PlaySound) == 0x000038, "Wrong size on SoundLibrarySubsystem_PlaySound");
static_assert(offsetof(SoundLibrarySubsystem_PlaySound, Context) == 0x000000, "Member 'SoundLibrarySubsystem_PlaySound::Context' has a wrong offset!");
static_assert(offsetof(SoundLibrarySubsystem_PlaySound, OutResults) == 0x000008, "Member 'SoundLibrarySubsystem_PlaySound::OutResults' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.RemoveLibraries
// 0x0018 (0x0018 - 0x0000)
struct SoundLibrarySubsystem_RemoveLibraries final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class USoundLibrary>>      Libraries;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_RemoveLibraries) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_RemoveLibraries");
static_assert(sizeof(SoundLibrarySubsystem_RemoveLibraries) == 0x000018, "Wrong size on SoundLibrarySubsystem_RemoveLibraries");
static_assert(offsetof(SoundLibrarySubsystem_RemoveLibraries, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_RemoveLibraries::Actor' has a wrong offset!");
static_assert(offsetof(SoundLibrarySubsystem_RemoveLibraries, Libraries) == 0x000008, "Member 'SoundLibrarySubsystem_RemoveLibraries::Libraries' has a wrong offset!");

// Function SoundLibrary.SoundLibrarySubsystem.RemoveLibrary
// 0x0010 (0x0010 - 0x0000)
struct SoundLibrarySubsystem_RemoveLibrary final
{
public:
	const class AActor*                           Actor;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USoundLibrary>              Library;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SoundLibrarySubsystem_RemoveLibrary) == 0x000008, "Wrong alignment on SoundLibrarySubsystem_RemoveLibrary");
static_assert(sizeof(SoundLibrarySubsystem_RemoveLibrary) == 0x000010, "Wrong size on SoundLibrarySubsystem_RemoveLibrary");
static_assert(offsetof(SoundLibrarySubsystem_RemoveLibrary, Actor) == 0x000000, "Member 'SoundLibrarySubsystem_RemoveLibrary::Actor' has a wrong offset!");
static_assert(offsetof(SoundLibrarySubsystem_RemoveLibrary, Library) == 0x000008, "Member 'SoundLibrarySubsystem_RemoveLibrary::Library' has a wrong offset!");

// Function SoundLibrary.SimpleSoundLibraryContext.ConfigureContext
// 0x0030 (0x0030 - 0x0000)
struct SimpleSoundLibraryContext_ConfigureContext final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSimpleSoundLibraryContextSettings     InSettings;                                        // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SimpleSoundLibraryContext_ConfigureContext) == 0x000008, "Wrong alignment on SimpleSoundLibraryContext_ConfigureContext");
static_assert(sizeof(SimpleSoundLibraryContext_ConfigureContext) == 0x000030, "Wrong size on SimpleSoundLibraryContext_ConfigureContext");
static_assert(offsetof(SimpleSoundLibraryContext_ConfigureContext, OwningActor) == 0x000000, "Member 'SimpleSoundLibraryContext_ConfigureContext::OwningActor' has a wrong offset!");
static_assert(offsetof(SimpleSoundLibraryContext_ConfigureContext, InSettings) == 0x000008, "Member 'SimpleSoundLibraryContext_ConfigureContext::InSettings' has a wrong offset!");

// Function SoundLibrary.AttachedSoundLibraryContext.ConfigureContext
// 0x0050 (0x0050 - 0x0000)
struct AttachedSoundLibraryContext_ConfigureContext final
{
public:
	class AActor*                                 OwningActor;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttachedSoundLibraryContextSettings   InSettings;                                        // 0x0008(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AttachedSoundLibraryContext_ConfigureContext) == 0x000008, "Wrong alignment on AttachedSoundLibraryContext_ConfigureContext");
static_assert(sizeof(AttachedSoundLibraryContext_ConfigureContext) == 0x000050, "Wrong size on AttachedSoundLibraryContext_ConfigureContext");
static_assert(offsetof(AttachedSoundLibraryContext_ConfigureContext, OwningActor) == 0x000000, "Member 'AttachedSoundLibraryContext_ConfigureContext::OwningActor' has a wrong offset!");
static_assert(offsetof(AttachedSoundLibraryContext_ConfigureContext, InSettings) == 0x000008, "Member 'AttachedSoundLibraryContext_ConfigureContext::InSettings' has a wrong offset!");

}

