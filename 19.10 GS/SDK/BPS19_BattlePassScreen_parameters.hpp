#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS19_BattlePassScreen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.ExecuteUbergraph_BPS19_BattlePassScreen
// 0x0A10 (0x0A10 - 0x0000)
struct BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	EBattlePassCurrencyType                       Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	EBattlePassCurrencyType                       Temp_byte_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C8(0x0018)()
	EBattlePassView                               Temp_byte_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_4;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       Temp_byte_Variable_5;                              // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       Temp_byte_Variable_6;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0108(0x0018)()
	bool                                          Temp_bool_Variable_6;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_10;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0148(0x0018)()
	bool                                          Temp_bool_Variable_10;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_12;                             // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0180(0x0018)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentIndex;                         // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalNumVariants;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01B8(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0200(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0250(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_17;                             // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               K2Node_Event_NewView;                              // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVaultWorld_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0270(0x0010)(ReferenceParm)
	TArray<class AFrontendCamera_VaultRotator_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0280(0x0010)(ReferenceParm)
	class AVaultWorld_C*                          CallFunc_Array_Get_Item;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayBPVideo_ReturnValue;            // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A6[0x2];                                      // 0x02A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x02B8(0x0018)(ConstParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    K2Node_Event_Rarity;                               // 0x02E8(0x0080)()
	bool                                          K2Node_Event_bNoReward;                            // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              K2Node_Event_RewardItem;                           // 0x0370(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFrontendCamera_VaultRotator_C*         CallFunc_Array_Get_Item_1;                         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x0388(0x0018)(ConstParm)
	int32                                         K2Node_Event_OwnedRewards_1;                       // 0x03A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededRewards;                        // 0x03A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowPrerequisiteLock;                // 0x03A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03C0(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0408(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0450(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0468(0x0018)()
	EBattlePassView                               Temp_byte_Variable_23;                             // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x0483(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_26;                             // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0486(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0487(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OwnedRewards;                         // 0x0488(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards;                         // 0x048C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0490(0x0040)(HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x04E0(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0528(0x0010)(ReferenceParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0540(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_27;                             // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x055A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x055B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Cost;                                 // 0x055C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_CurrencyType_1;                       // 0x0560(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0568(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0580(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x05C0(0x0040)(HasGetValueTypeHash)
	EBattlePassCurrencyType                       K2Node_Event_CurrencyType;                         // 0x0600(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0608(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0618(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0630(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x064A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_32;                             // 0x064B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_33;                             // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTransitionForward;                   // 0x0650(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0658(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_5;                           // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x3];                                      // 0x0661(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0664(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0674(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0688(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_6;                           // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x06A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x06C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_7;                           // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x06F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x0700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_8;                           // 0x0714(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x0724(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x0734(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_9;                           // 0x0744(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754[0x4];                                      // 0x0754(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x0758(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_Event_Delay;                                // 0x0760(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0768(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0780(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x07C0(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable_36;                             // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x07D8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_37;                             // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_10;                          // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_11;                          // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_38;                             // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80D[0x3];                                      // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassInputs                             K2Node_Event_InputType;                            // 0x0818(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x7];                                      // 0x0819(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             K2Node_Event_InputData;                            // 0x0820(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassBulkBuyInputData*            K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data; // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPS19_GetAllButton_C*                  K2Node_DynamicCast_AsBPS19_Get_All_Button;         // 0x0838(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetData_IsPageCompleted;                  // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_842[0x2];                                      // 0x0842(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetData_StartingPage;                     // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_EndingPage;                       // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_PurchaseCost;                     // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_39;                             // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x6];                                      // 0x0852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetQuestPageDelay_ReturnValue;            // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_1;          // 0x0860(0x0018)()
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0880(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x08C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x08D8(0x0018)()
	class FText                                   K2Node_Select_Default_12;                          // 0x08F0(0x0018)()
	class FText                                   K2Node_Select_Default_13;                          // 0x0908(0x0018)()
	int32                                         K2Node_Event_Level;                                // 0x0920(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_40;                             // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_925[0x3];                                      // 0x0925(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetQuestPageDelay_ReturnValue_1;          // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue_1;            // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0935(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_41;                             // 0x0936(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BattlePassRequiredVisible;      // 0x0937(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ComingSoonVisible;              // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CustomizationSkinRequiredVisible; // 0x0939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_14;                          // 0x093A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_15;                          // 0x093B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_16;                          // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_42;                             // 0x093D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue; // 0x093E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x093F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_17;                          // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1; // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_942[0x6];                                      // 0x0942(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetQuestPageDelay_ReturnValue_2;          // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_2;          // 0x0950(0x0018)()
	float                                         CallFunc_GetTotalSeconds_ReturnValue_2;            // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0970(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x09B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x09C8(0x0018)()
	class FText                                   K2Node_Select_Default_18;                          // 0x09E0(0x0018)()
	class FText                                   K2Node_Select_Default_19;                          // 0x09F8(0x0018)()
};
static_assert(alignof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen");
static_assert(sizeof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen) == 0x000A10, "Wrong size on BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, EntryPoint) == 0x000000, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable) == 0x00000C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable) == 0x000010, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_1) == 0x000028, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable) == 0x000040, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_2) == 0x000048, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_3) == 0x000060, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_4) == 0x000078, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_1) == 0x000090, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_5) == 0x000098, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_6) == 0x0000B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_7) == 0x0000C8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_2) == 0x0000E0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_1) == 0x0000E1, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_3) == 0x0000E2, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_4) == 0x0000E3, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_2) == 0x0000E4, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_3) == 0x0000E5, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_5) == 0x0000E6, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_6) == 0x0000E7, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_4) == 0x0000E8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_7) == 0x0000E9, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_8) == 0x0000EA, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_5) == 0x0000EB, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_8) == 0x0000F0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_9) == 0x000108, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_6) == 0x000120, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_9) == 0x000121, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_10) == 0x000122, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_7) == 0x000123, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_11) == 0x000124, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_12) == 0x000125, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_8) == 0x000126, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_13) == 0x000127, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_14) == 0x000128, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_9) == 0x000129, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_10) == 0x000130, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_11) == 0x000148, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_Variable_10) == 0x000160, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_12) == 0x000168, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_text_Variable_13) == 0x000180, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable) == 0x000198, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_int_Array_Index_Variable) == 0x00019C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue) == 0x0001A0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_15) == 0x0001A1, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_CurrentIndex) == 0x0001A4, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_TotalNumVariants) == 0x0001A8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_TotalNumVariants' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue) == 0x0001B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData) == 0x0001B8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x000200, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array) == 0x000240, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue) == 0x000250, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_16) == 0x000268, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_17) == 0x000269, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_NewView) == 0x00026A, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_NewView' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000270, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000280, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Array_Get_Item) == 0x000290, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Array_Length_ReturnValue) == 0x000298, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue) == 0x00029C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue) == 0x00029D, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Array_Length_ReturnValue_1) == 0x0002A0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_18) == 0x0002A4, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_ShouldPlayBPVideo_ReturnValue) == 0x0002A5, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_ShouldPlayBPVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_AsIcon_Text_Button) == 0x0002A8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_RowDisplayName) == 0x0002B8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_int_Loop_Counter_Variable_1) == 0x0002D0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D4, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002D8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_BooleanAND_ReturnValue) == 0x0002DC, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_int_Array_Index_Variable_1) == 0x0002E0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_Rarity) == 0x0002E8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_bNoReward) == 0x000368, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_bNoReward' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_RewardItem) == 0x000370, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_RewardItem' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Array_Get_Item_1) == 0x000378, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue_1) == 0x000380, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_19) == 0x000381, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_20) == 0x000382, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_21) == 0x000383, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_22) == 0x000384, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_IsDesignTime) == 0x000385, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_Description) == 0x000388, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_OwnedRewards_1) == 0x0003A0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_OwnedRewards_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_NeededRewards) == 0x0003A4, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_bShowPrerequisiteLock) == 0x0003A8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_bShowPrerequisiteLock' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0003B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default) == 0x0003B8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003C0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000400, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_3) == 0x000408, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000448, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_1) == 0x000450, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000460, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_1) == 0x000468, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_23) == 0x000480, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_24) == 0x000481, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_1) == 0x000482, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_25) == 0x000483, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_26) == 0x000484, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000485, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000486, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_1) == 0x000487, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_OwnedRewards) == 0x000488, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_TotalRewards) == 0x00048C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_4) == 0x000490, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0004D0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0004D8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0004DC, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_5) == 0x0004E0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000520, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_2) == 0x000528, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000538, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_2) == 0x000540, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_27) == 0x000558, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_28) == 0x000559, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x00055A, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_29) == 0x00055B, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_Cost) == 0x00055C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_Cost' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_CurrencyType_1) == 0x000560, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_CurrencyType_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_2) == 0x000568, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_6) == 0x000580, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_7) == 0x0005C0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_CurrencyType) == 0x000600, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_CurrencyType' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_3) == 0x000608, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_3) == 0x000618, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_3) == 0x000630, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_30) == 0x000648, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue) == 0x000649, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_31) == 0x00064A, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_32) == 0x00064B, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_33) == 0x00064C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_4) == 0x00064D, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_34) == 0x00064E, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_35) == 0x00064F, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_bTransitionForward) == 0x000650, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_bTransitionForward' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000658, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_5) == 0x000660, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin) == 0x000664, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_1) == 0x000674, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000688, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_6) == 0x000690, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_2) == 0x0006A0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetEndTime_ReturnValue) == 0x0006B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x0006B8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_3) == 0x0006C0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_7) == 0x0006D0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_1) == 0x0006E0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x0006E8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_4) == 0x0006F0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_5) == 0x000700, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_2) == 0x000710, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_8) == 0x000714, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_6) == 0x000724, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_Margin_7) == 0x000734, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_9) == 0x000744, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x000758, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_Delay) == 0x000760, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue) == 0x000768, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_8) == 0x000780, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_4) == 0x0007C0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_36) == 0x0007D0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_4) == 0x0007D8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_37) == 0x0007F0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_10) == 0x0007F8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_11) == 0x000800, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_SelectInt_ReturnValue) == 0x000808, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_38) == 0x00080C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x000810, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_InputType) == 0x000818, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_InputData) == 0x000820, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_InputData' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data) == 0x000828, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_bSuccess_1) == 0x000830, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_AsBPS19_Get_All_Button) == 0x000838, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_AsBPS19_Get_All_Button' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_DynamicCast_bSuccess_2) == 0x000840, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetData_IsPageCompleted) == 0x000841, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetData_IsPageCompleted' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetData_StartingPage) == 0x000844, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetData_StartingPage' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetData_EndingPage) == 0x000848, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetData_EndingPage' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetData_PurchaseCost) == 0x00084C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetData_PurchaseCost' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_SwitchEnum_CmpSuccess) == 0x000850, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_39) == 0x000851, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetQuestPageDelay_ReturnValue) == 0x000858, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetQuestPageDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_1) == 0x000860, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue) == 0x000878, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_9) == 0x000880, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0008C0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_5) == 0x0008C8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_5) == 0x0008D8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_12) == 0x0008F0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_13) == 0x000908, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Event_Level) == 0x000920, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_40) == 0x000924, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetQuestPageDelay_ReturnValue_1) == 0x000928, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetQuestPageDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue_1) == 0x000930, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_3) == 0x000934, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000935, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_41) == 0x000936, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_CustomEvent_BattlePassRequiredVisible) == 0x000937, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_CustomEvent_BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_CustomEvent_ComingSoonVisible) == 0x000938, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_CustomEvent_ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_CustomEvent_CustomizationSkinRequiredVisible) == 0x000939, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_CustomEvent_CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_14) == 0x00093A, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_15) == 0x00093B, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_16) == 0x00093C, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, Temp_byte_Variable_42) == 0x00093D, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue) == 0x00093E, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_4) == 0x00093F, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_17) == 0x000940, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1) == 0x000941, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_IsSeasonalCustomizationItemOwned_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetQuestPageDelay_ReturnValue_2) == 0x000948, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetQuestPageDelay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_2) == 0x000950, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue_2) == 0x000968, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_10) == 0x000970, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0009B0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_MakeArray_Array_6) == 0x0009B8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, CallFunc_Format_ReturnValue_6) == 0x0009C8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_18) == 0x0009E0, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen, K2Node_Select_Default_19) == 0x0009F8, "Member 'BPS19_BattlePassScreen_C_ExecuteUbergraph_BPS19_BattlePassScreen::K2Node_Select_Default_19' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.HandleRewardTimelineAnimation
// 0x0018 (0x0018 - 0x0000)
struct BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation final
{
public:
	bool                                          bAnimateRewardTimeline;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(sizeof(BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000018, "Wrong size on BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation, bAnimateRewardTimeline) == 0x000000, "Member 'BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation::bAnimateRewardTimeline' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'BPS19_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.HandleViewReward
// 0x000C (0x000C - 0x0000)
struct BPS19_BattlePassScreen_C_HandleViewReward final
{
public:
	bool                                          bInNoReward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InNumRewardsToPurchase;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_HandleViewReward) == 0x000004, "Wrong alignment on BPS19_BattlePassScreen_C_HandleViewReward");
static_assert(sizeof(BPS19_BattlePassScreen_C_HandleViewReward) == 0x00000C, "Wrong size on BPS19_BattlePassScreen_C_HandleViewReward");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, bInNoReward) == 0x000000, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::bInNoReward' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, InNumRewardsToPurchase) == 0x000004, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::InNumRewardsToPurchase' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, Temp_bool_Variable) == 0x000008, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable) == 0x000009, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable_1) == 0x00000A, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleViewReward, K2Node_Select_Default) == 0x00000B, "Member 'BPS19_BattlePassScreen_C_HandleViewReward::K2Node_Select_Default' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.HandleWatchVideoRequest
// 0x00B0 (0x00B0 - 0x0000)
struct BPS19_BattlePassScreen_C_HandleWatchVideoRequest final
{
public:
	bool                                          PlayFromDisc;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 StreamSource;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRuntimeOptions*                    CallFunc_GetRuntimeOptions_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVideoWidgetConfig                     K2Node_MakeStruct_VideoWidgetConfig;               // 0x0020(0x0080)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortActivatableMovieWidget_C*          CallFunc_Create_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(sizeof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest) == 0x0000B0, "Wrong size on BPS19_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, PlayFromDisc) == 0x000000, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::PlayFromDisc' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, StreamSource) == 0x000008, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::StreamSource' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue) == 0x000010, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_UseElectraForWatchBattlePassMovie_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_GetRuntimeOptions_ReturnValue) == 0x000018, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_GetRuntimeOptions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, K2Node_MakeStruct_VideoWidgetConfig) == 0x000020, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::K2Node_MakeStruct_VideoWidgetConfig' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_HandleWatchVideoRequest, CallFunc_Create_ReturnValue) == 0x0000A8, "Member 'BPS19_BattlePassScreen_C_HandleWatchVideoRequest::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnBattlePassViewChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS19_BattlePassScreen_C_OnBattlePassViewChanged final
{
public:
	EBattlePassView                               NewView;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong alignment on BPS19_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong size on BPS19_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnBattlePassViewChanged, NewView) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnBattlePassViewChanged::NewView' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnInsufficientFunds
// 0x0001 (0x0001 - 0x0000)
struct BPS19_BattlePassScreen_C_OnInsufficientFunds final
{
public:
	EBattlePassCurrencyType                       CurrencyType;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnInsufficientFunds) == 0x000001, "Wrong alignment on BPS19_BattlePassScreen_C_OnInsufficientFunds");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnInsufficientFunds) == 0x000001, "Wrong size on BPS19_BattlePassScreen_C_OnInsufficientFunds");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnInsufficientFunds, CurrencyType) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnInsufficientFunds::CurrencyType' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnItemDelayed
// 0x0008 (0x0008 - 0x0000)
struct BPS19_BattlePassScreen_C_OnItemDelayed final
{
public:
	struct FTimespan                              Delay;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_OnItemDelayed");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong size on BPS19_BattlePassScreen_C_OnItemDelayed");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnItemDelayed, Delay) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnItemDelayed::Delay' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnLevelChanged
// 0x0004 (0x0004 - 0x0000)
struct BPS19_BattlePassScreen_C_OnLevelChanged final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong alignment on BPS19_BattlePassScreen_C_OnLevelChanged");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong size on BPS19_BattlePassScreen_C_OnLevelChanged");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnLevelChanged, Level) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnLevelChanged::Level' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnPreviewActionButtonUpdated
// 0x0018 (0x0018 - 0x0000)
struct BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000018, "Wrong size on BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnSetClaimedRewardInfo
// 0x0008 (0x0008 - 0x0000)
struct BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo final
{
public:
	int32                                         OwnedRewards;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000004, "Wrong alignment on BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000008, "Wrong size on BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo, OwnedRewards) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo, TotalRewards) == 0x000004, "Member 'BPS19_BattlePassScreen_C_OnSetClaimedRewardInfo::TotalRewards' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnSetDynamicInput
// 0x0010 (0x0010 - 0x0000)
struct BPS19_BattlePassScreen_C_OnSetDynamicInput final
{
public:
	EBattlePassInputs                             InputType;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             InputData;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnSetDynamicInput) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_OnSetDynamicInput");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnSetDynamicInput) == 0x000010, "Wrong size on BPS19_BattlePassScreen_C_OnSetDynamicInput");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetDynamicInput, InputType) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnSetDynamicInput::InputType' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetDynamicInput, InputData) == 0x000008, "Member 'BPS19_BattlePassScreen_C_OnSetDynamicInput::InputData' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnSetItemPrice
// 0x0008 (0x0008 - 0x0000)
struct BPS19_BattlePassScreen_C_OnSetItemPrice final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassCurrencyType                       CurrencyType;                                      // 0x0004(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnSetItemPrice) == 0x000004, "Wrong alignment on BPS19_BattlePassScreen_C_OnSetItemPrice");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnSetItemPrice) == 0x000008, "Wrong size on BPS19_BattlePassScreen_C_OnSetItemPrice");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetItemPrice, Cost) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnSetItemPrice::Cost' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetItemPrice, CurrencyType) == 0x000004, "Member 'BPS19_BattlePassScreen_C_OnSetItemPrice::CurrencyType' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnSetPrerequisiteInfo
// 0x0028 (0x0028 - 0x0000)
struct BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         OwnedRewards;                                      // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededRewards;                                     // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowPrerequisiteLock;                             // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000028, "Wrong size on BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo, Description) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo::Description' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo, OwnedRewards) == 0x000018, "Member 'BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo, NeededRewards) == 0x00001C, "Member 'BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo::NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo, bShowPrerequisiteLock) == 0x000020, "Member 'BPS19_BattlePassScreen_C_OnSetPrerequisiteInfo::bShowPrerequisiteLock' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct BPS19_BattlePassScreen_C_OnTransitionItemDetails final
{
public:
	bool                                          bTransitionForward;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on BPS19_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong size on BPS19_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnTransitionItemDetails, bTransitionForward) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnTransitionItemDetails::bTransitionForward' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnVariantUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPS19_BattlePassScreen_C_OnVariantUpdate final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumVariants;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnVariantUpdate) == 0x000004, "Wrong alignment on BPS19_BattlePassScreen_C_OnVariantUpdate");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnVariantUpdate) == 0x000008, "Wrong size on BPS19_BattlePassScreen_C_OnVariantUpdate");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnVariantUpdate, CurrentIndex) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnVariantUpdate::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnVariantUpdate, TotalNumVariants) == 0x000004, "Member 'BPS19_BattlePassScreen_C_OnVariantUpdate::TotalNumVariants' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.OnViewReward
// 0x0090 (0x0090 - 0x0000)
struct BPS19_BattlePassScreen_C_OnViewReward final
{
public:
	struct FFortRarityItemData                    Rarity;                                            // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNoReward;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              RewardItem;                                        // 0x0088(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_OnViewReward) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_OnViewReward");
static_assert(sizeof(BPS19_BattlePassScreen_C_OnViewReward) == 0x000090, "Wrong size on BPS19_BattlePassScreen_C_OnViewReward");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnViewReward, Rarity) == 0x000000, "Member 'BPS19_BattlePassScreen_C_OnViewReward::Rarity' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnViewReward, bNoReward) == 0x000080, "Member 'BPS19_BattlePassScreen_C_OnViewReward::bNoReward' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_OnViewReward, RewardItem) == 0x000088, "Member 'BPS19_BattlePassScreen_C_OnViewReward::RewardItem' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS19_BattlePassScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong alignment on BPS19_BattlePassScreen_C_PreConstruct");
static_assert(sizeof(BPS19_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong size on BPS19_BattlePassScreen_C_PreConstruct");
static_assert(offsetof(BPS19_BattlePassScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS19_BattlePassScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.Set landing Page text
// 0x0038 (0x0038 - 0x0000)
struct BPS19_BattlePassScreen_C_Set_landing_Page_text final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         State_Index;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_Set_landing_Page_text) == 0x000008, "Wrong alignment on BPS19_BattlePassScreen_C_Set_landing_Page_text");
static_assert(sizeof(BPS19_BattlePassScreen_C_Set_landing_Page_text) == 0x000038, "Wrong size on BPS19_BattlePassScreen_C_Set_landing_Page_text");
static_assert(offsetof(BPS19_BattlePassScreen_C_Set_landing_Page_text, Title) == 0x000000, "Member 'BPS19_BattlePassScreen_C_Set_landing_Page_text::Title' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_Set_landing_Page_text, Description) == 0x000018, "Member 'BPS19_BattlePassScreen_C_Set_landing_Page_text::Description' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_Set_landing_Page_text, State_Index) == 0x000030, "Member 'BPS19_BattlePassScreen_C_Set_landing_Page_text::State_Index' has a wrong offset!");

// Function BPS19_BattlePassScreen.BPS19_BattlePassScreen_C.SetTagVisibility
// 0x0003 (0x0003 - 0x0000)
struct BPS19_BattlePassScreen_C_SetTagVisibility final
{
public:
	bool                                          BattlePassRequiredVisible;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ComingSoonVisible;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomizationSkinRequiredVisible;                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS19_BattlePassScreen_C_SetTagVisibility) == 0x000001, "Wrong alignment on BPS19_BattlePassScreen_C_SetTagVisibility");
static_assert(sizeof(BPS19_BattlePassScreen_C_SetTagVisibility) == 0x000003, "Wrong size on BPS19_BattlePassScreen_C_SetTagVisibility");
static_assert(offsetof(BPS19_BattlePassScreen_C_SetTagVisibility, BattlePassRequiredVisible) == 0x000000, "Member 'BPS19_BattlePassScreen_C_SetTagVisibility::BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_SetTagVisibility, ComingSoonVisible) == 0x000001, "Member 'BPS19_BattlePassScreen_C_SetTagVisibility::ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS19_BattlePassScreen_C_SetTagVisibility, CustomizationSkinRequiredVisible) == 0x000002, "Member 'BPS19_BattlePassScreen_C_SetTagVisibility::CustomizationSkinRequiredVisible' has a wrong offset!");

}

