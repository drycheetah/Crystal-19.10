#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PageNavigatorButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PageNavigatorButton.PageNavigatorButton_C.ExecuteUbergraph_PageNavigatorButton
// 0x0128 (0x0128 - 0x0000)
struct PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            Temp_byte_Variable_1;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_2;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVerticalAlignment                            K2Node_Select_Default_3;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color1;                         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color2;                         // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color3;                         // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color4;                         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color5;                         // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_4;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_5;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton) == 0x000008, "Wrong alignment on PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton");
static_assert(sizeof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton) == 0x000128, "Wrong size on PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, EntryPoint) == 0x000000, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable) == 0x000004, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_struct_Variable) == 0x000008, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_struct_Variable_1) == 0x000010, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable_1) == 0x000018, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable_2) == 0x000019, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_struct_Variable_2) == 0x00001C, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_struct_Variable_3) == 0x000024, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable_3) == 0x00002C, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_byte_Variable) == 0x00002D, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_byte_Variable_1) == 0x00002E, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Event_IsDesignTime) == 0x00002F, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000030, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default) == 0x000040, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000048, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationReverse_ReturnValue_2) == 0x000050, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationReverse_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000058, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x000060, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable_4) == 0x000068, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default_1) == 0x00006C, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default_2) == 0x000074, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_object_Variable) == 0x000080, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default_3) == 0x000088, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000090, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000098, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_CustomEvent_Color1) == 0x0000A0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_CustomEvent_Color1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_CustomEvent_Color2) == 0x0000B0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_CustomEvent_Color2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_CustomEvent_Color3) == 0x0000C0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_CustomEvent_Color3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_CustomEvent_Color4) == 0x0000D0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_CustomEvent_Color4' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_CustomEvent_Color5) == 0x0000E0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_CustomEvent_Color5' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_object_Variable_1) == 0x0000F0, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_bool_Variable_5) == 0x0000F8, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_object_Variable_2) == 0x000100, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default_4) == 0x000108, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, Temp_object_Variable_3) == 0x000110, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, K2Node_Select_Default_5) == 0x000118, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000120, "Member 'PageNavigatorButton_C_ExecuteUbergraph_PageNavigatorButton::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");

// Function PageNavigatorButton.PageNavigatorButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PageNavigatorButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorButton_C_PreConstruct) == 0x000001, "Wrong alignment on PageNavigatorButton_C_PreConstruct");
static_assert(sizeof(PageNavigatorButton_C_PreConstruct) == 0x000001, "Wrong size on PageNavigatorButton_C_PreConstruct");
static_assert(offsetof(PageNavigatorButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PageNavigatorButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PageNavigatorButton.PageNavigatorButton_C.Set Button colors
// 0x0050 (0x0050 - 0x0000)
struct PageNavigatorButton_C_Set_Button_colors final
{
public:
	struct FLinearColor                           Color1;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color2;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color3;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color4;                                            // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color5;                                            // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PageNavigatorButton_C_Set_Button_colors) == 0x000004, "Wrong alignment on PageNavigatorButton_C_Set_Button_colors");
static_assert(sizeof(PageNavigatorButton_C_Set_Button_colors) == 0x000050, "Wrong size on PageNavigatorButton_C_Set_Button_colors");
static_assert(offsetof(PageNavigatorButton_C_Set_Button_colors, Color1) == 0x000000, "Member 'PageNavigatorButton_C_Set_Button_colors::Color1' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_Set_Button_colors, Color2) == 0x000010, "Member 'PageNavigatorButton_C_Set_Button_colors::Color2' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_Set_Button_colors, Color3) == 0x000020, "Member 'PageNavigatorButton_C_Set_Button_colors::Color3' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_Set_Button_colors, Color4) == 0x000030, "Member 'PageNavigatorButton_C_Set_Button_colors::Color4' has a wrong offset!");
static_assert(offsetof(PageNavigatorButton_C_Set_Button_colors, Color5) == 0x000040, "Member 'PageNavigatorButton_C_Set_Button_colors::Color5' has a wrong offset!");

}

