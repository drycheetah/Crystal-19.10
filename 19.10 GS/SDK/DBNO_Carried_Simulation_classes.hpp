#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DBNO_Carried_Simulation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DBNO_Carried_Simulation_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass DBNO_Carried_Simulation.DBNO_Carried_Simulation_C
// 0x08D0 (0x0BF0 - 0x0320)
class UDBNO_Carried_Simulation_C final : public UAnimInstance
{
public:
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct DBNO_Carried_Simulation::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0328(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0338(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0340(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0348(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x0368(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x0388(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0450(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0470(0x0088)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x04F8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0600(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0628(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x0730(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x0750(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0770(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0798(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x07B8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x07D8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0800(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0828(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x0848(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0868(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0890(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x08B0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x08D0(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x08F8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0918(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0938(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x0960(0x0088)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x09E8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0AF0(0x0028)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x0B18(0x0088)()
	class APlayerPawn_Athena_C*                   CarrierPawn;                                       // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                CarrierAnimBP;                                     // 0x0BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LHandIKLocation;                                   // 0x0BB0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LHandIKRotation;                                   // 0x0BBC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TempAttachLocation;                                // 0x0BC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TempAttachRotation;                                // 0x0BD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortCustomGender                             my_gender;                                         // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x0BE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortPlayerAnimBodyType                       my_animbodytype;                                   // 0x0BE2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE3[0x1];                                      // 0x0BE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         bodytype_int;                                      // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_DBNO_Carried_Simulation(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DBNO_Carried_Simulation_C">();
	}
	static class UDBNO_Carried_Simulation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDBNO_Carried_Simulation_C>();
	}
};
static_assert(alignof(UDBNO_Carried_Simulation_C) == 0x000010, "Wrong alignment on UDBNO_Carried_Simulation_C");
static_assert(sizeof(UDBNO_Carried_Simulation_C) == 0x000BF0, "Wrong size on UDBNO_Carried_Simulation_C");
static_assert(offsetof(UDBNO_Carried_Simulation_C, UberGraphFrame) == 0x000320, "Member 'UDBNO_Carried_Simulation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, __AnimBlueprintMutables) == 0x000328, "Member 'UDBNO_Carried_Simulation_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimBlueprintExtension_PropertyAccess) == 0x000338, "Member 'UDBNO_Carried_Simulation_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimBlueprintExtension_Base) == 0x000340, "Member 'UDBNO_Carried_Simulation_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_Root) == 0x000348, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x000368, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SubInput) == 0x000388, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000450, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByBool) == 0x000470, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose_2) == 0x0004F8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_7) == 0x000600, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose_1) == 0x000628, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x000730, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_4) == 0x000750, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_6) == 0x000770, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000798, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_3) == 0x0007B8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_5) == 0x0007D8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_4) == 0x000800, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000828, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_2) == 0x000848, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_3) == 0x000868, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000890, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0008B0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_2) == 0x0008D0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_ComponentToLocalSpace) == 0x0008F8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_LocalToComponentSpace) == 0x000918, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose_1) == 0x000938, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByInt_1) == 0x000960, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_SaveCachedPose) == 0x0009E8, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_UseCachedPose) == 0x000AF0, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, AnimGraphNode_BlendListByInt) == 0x000B18, "Member 'UDBNO_Carried_Simulation_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, CarrierPawn) == 0x000BA0, "Member 'UDBNO_Carried_Simulation_C::CarrierPawn' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, CarrierAnimBP) == 0x000BA8, "Member 'UDBNO_Carried_Simulation_C::CarrierAnimBP' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, LHandIKLocation) == 0x000BB0, "Member 'UDBNO_Carried_Simulation_C::LHandIKLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, LHandIKRotation) == 0x000BBC, "Member 'UDBNO_Carried_Simulation_C::LHandIKRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, TempAttachLocation) == 0x000BC8, "Member 'UDBNO_Carried_Simulation_C::TempAttachLocation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, TempAttachRotation) == 0x000BD4, "Member 'UDBNO_Carried_Simulation_C::TempAttachRotation' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, my_gender) == 0x000BE0, "Member 'UDBNO_Carried_Simulation_C::my_gender' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, IsMale) == 0x000BE1, "Member 'UDBNO_Carried_Simulation_C::IsMale' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, my_animbodytype) == 0x000BE2, "Member 'UDBNO_Carried_Simulation_C::my_animbodytype' has a wrong offset!");
static_assert(offsetof(UDBNO_Carried_Simulation_C, bodytype_int) == 0x000BE4, "Member 'UDBNO_Carried_Simulation_C::bodytype_int' has a wrong offset!");

}

