#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventLeaderboardScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventLeaderboardScreen.EventLeaderboardScreen_C
// 0x0260 (0x06A0 - 0x0440)
class UEventLeaderboardScreen_C final : public UFortEventLeaderboardScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0440(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEventsSimpleButton_C*                  Button_Back;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCloseButton_C*                         CloseButton;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardEntryDetails_C*        EntryDetails;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardEventDetails_C*        EventLeaderboardEventDetails;                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Tab;                                 // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_EntryDetailsVisibility;                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         DebugLeaderboardEntry1;                            // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         DebugLeaderboardEntry2;                            // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         DebugLeaderboardEntry3;                            // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortEventLeaderboardEntryData*         DebugLeaderboardEntry4;                            // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortEventLeaderboardEntryData*> DebugLeaderboardEntries;                           // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              EventCloseButton;                                  // 0x04B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              EventViewLiveGames;                                // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FFortTournamentDisplayInfo             CurrentDisplayInfo;                                // 0x04D0(0x01D0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__Button_Back2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void BndEvt__LiveGames_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButtonLegacy* Button);
	void Construct();
	void Event_Leaderboard_Screen_On_Activated();
	void EventColorize(const struct FFortTournamentDisplayInfo& TournamentDisplayInfo);
	void EventIntro();
	void ExecuteUbergraph_EventLeaderboardScreen(int32 EntryPoint);
	void Init(const class FString& EventWindowId, const class FString& TournamentSeriesId);
	void InitializeTabButton(class UCommonButtonLegacy* TabButton, const class FText& TabText);
	void Item_Double_Clicked(class UObject* Item);
	void OnDetailsPanelUpdate(bool bShowDetailsPanel);
	void OnLeaderboardEntrySelected(const class UFortEventLeaderboardEntryData* EntryData);
	void OnTabVisibilityChange(bool bIsVisible);
	void ShowMyStats(class UCommonButtonLegacy* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventLeaderboardScreen_C">();
	}
	static class UEventLeaderboardScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventLeaderboardScreen_C>();
	}
};
static_assert(alignof(UEventLeaderboardScreen_C) == 0x000008, "Wrong alignment on UEventLeaderboardScreen_C");
static_assert(sizeof(UEventLeaderboardScreen_C) == 0x0006A0, "Wrong size on UEventLeaderboardScreen_C");
static_assert(offsetof(UEventLeaderboardScreen_C, UberGraphFrame) == 0x000440, "Member 'UEventLeaderboardScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, Button_Back) == 0x000448, "Member 'UEventLeaderboardScreen_C::Button_Back' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, CloseButton) == 0x000450, "Member 'UEventLeaderboardScreen_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, EntryDetails) == 0x000458, "Member 'UEventLeaderboardScreen_C::EntryDetails' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, EventLeaderboardEventDetails) == 0x000460, "Member 'UEventLeaderboardScreen_C::EventLeaderboardEventDetails' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, HorizontalBox_Tab) == 0x000468, "Member 'UEventLeaderboardScreen_C::HorizontalBox_Tab' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, Overlay_EntryDetailsVisibility) == 0x000470, "Member 'UEventLeaderboardScreen_C::Overlay_EntryDetailsVisibility' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, SafeZone_0) == 0x000478, "Member 'UEventLeaderboardScreen_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, DebugLeaderboardEntry1) == 0x000480, "Member 'UEventLeaderboardScreen_C::DebugLeaderboardEntry1' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, DebugLeaderboardEntry2) == 0x000488, "Member 'UEventLeaderboardScreen_C::DebugLeaderboardEntry2' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, DebugLeaderboardEntry3) == 0x000490, "Member 'UEventLeaderboardScreen_C::DebugLeaderboardEntry3' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, DebugLeaderboardEntry4) == 0x000498, "Member 'UEventLeaderboardScreen_C::DebugLeaderboardEntry4' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, DebugLeaderboardEntries) == 0x0004A0, "Member 'UEventLeaderboardScreen_C::DebugLeaderboardEntries' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, EventCloseButton) == 0x0004B0, "Member 'UEventLeaderboardScreen_C::EventCloseButton' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, EventViewLiveGames) == 0x0004C0, "Member 'UEventLeaderboardScreen_C::EventViewLiveGames' has a wrong offset!");
static_assert(offsetof(UEventLeaderboardScreen_C, CurrentDisplayInfo) == 0x0004D0, "Member 'UEventLeaderboardScreen_C::CurrentDisplayInfo' has a wrong offset!");

}

