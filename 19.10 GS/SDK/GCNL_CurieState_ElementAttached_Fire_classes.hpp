#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_CurieState_ElementAttached_Fire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Enum_PlayerFireStates_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_CurieState_ElementAttached_Fire.GCNL_CurieState_ElementAttached_Fire_C
// 0x0048 (0x0850 - 0x0808)
class AGCNL_CurieState_ElementAttached_Fire_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0808(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        OnFireAudioComponent;                              // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnPlayerLoop;                                 // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PawnSkeletalMesh;                                  // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   Pawn;                                              // 0x0828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FadeBodyFXTimerHandle;                             // 0x0830(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInDuration;                                    // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      PlayerFireState;                                   // 0x083C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83D[0x3];                                      // 0x083D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      BodyFXParticleSystem;                              // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutDuration;                                   // 0x0848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      PreviousPlayerFireState;                           // 0x084C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateBodyFX();
	void ClearAllHandles();
	void DeactivateBodyFX();
	void ExecuteUbergraph_GCNL_CurieState_ElementAttached_Fire(int32 EntryPoint);
	void FadeBodyFXOut();
	void FadeOnFireAudioComponent();
	void GetPlayerFireState(EB_Enum_PlayerFireStates* Player_State);
	void OnApplication(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnCurieStateChanged(class UObject* Owner_0, const struct FCurieContainerHandle& ContainerHandle, const struct FGameplayTag& StateIdentifier);
	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UParticleSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void SetBodyFXParameters(EB_Enum_PlayerFireStates PreviousPlayerFireState_0);
	void UpdatePlayerVisualsByState(EB_Enum_PlayerFireStates PlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_CurieState_ElementAttached_Fire_C">();
	}
	static class AGCNL_CurieState_ElementAttached_Fire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_CurieState_ElementAttached_Fire_C>();
	}
};
static_assert(alignof(AGCNL_CurieState_ElementAttached_Fire_C) == 0x000008, "Wrong alignment on AGCNL_CurieState_ElementAttached_Fire_C");
static_assert(sizeof(AGCNL_CurieState_ElementAttached_Fire_C) == 0x000850, "Wrong size on AGCNL_CurieState_ElementAttached_Fire_C");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, UberGraphFrame) == 0x000808, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, OnFireAudioComponent) == 0x000810, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::OnFireAudioComponent' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, SoundOnPlayerLoop) == 0x000818, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::SoundOnPlayerLoop' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, PawnSkeletalMesh) == 0x000820, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::PawnSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, Pawn) == 0x000828, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::Pawn' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, FadeBodyFXTimerHandle) == 0x000830, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::FadeBodyFXTimerHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, FadeInDuration) == 0x000838, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::FadeInDuration' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, PlayerFireState) == 0x00083C, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::PlayerFireState' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, BodyFXParticleSystem) == 0x000840, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::BodyFXParticleSystem' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, FadeOutDuration) == 0x000848, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(AGCNL_CurieState_ElementAttached_Fire_C, PreviousPlayerFireState) == 0x00084C, "Member 'AGCNL_CurieState_ElementAttached_Fire_C::PreviousPlayerFireState' has a wrong offset!");

}

