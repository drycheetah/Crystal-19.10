#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SubscriptionDetailsWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.AddBulletPoint
// 0x0058 (0x0058 - 0x0000)
struct SubscriptionDetailsWidget_C_AddBulletPoint final
{
public:
	struct FSubscriptionBulletPoint               BulletPointInfo;                                   // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USubscriptionBulletPointWidget_C*       CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_AddBulletPoint) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_AddBulletPoint");
static_assert(sizeof(SubscriptionDetailsWidget_C_AddBulletPoint) == 0x000058, "Wrong size on SubscriptionDetailsWidget_C_AddBulletPoint");
static_assert(offsetof(SubscriptionDetailsWidget_C_AddBulletPoint, BulletPointInfo) == 0x000000, "Member 'SubscriptionDetailsWidget_C_AddBulletPoint::BulletPointInfo' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_AddBulletPoint, CallFunc_Create_ReturnValue) == 0x000050, "Member 'SubscriptionDetailsWidget_C_AddBulletPoint::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.Configure Bullet Point Widget
// 0x0088 (0x0088 - 0x0000)
struct SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget final
{
public:
	class USubscriptionBulletPointWidget_C*       BulletPointWidget;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSubscriptionBulletPoint               BulletPointInfo;                                   // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget");
static_assert(sizeof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget) == 0x000088, "Wrong size on SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, BulletPointWidget) == 0x000000, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::BulletPointWidget' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, BulletPointInfo) == 0x000008, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::BulletPointInfo' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, K2Node_MakeStruct_Margin) == 0x000058, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, CallFunc_AddChild_ReturnValue) == 0x000068, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000070, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00007C, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'SubscriptionDetailsWidget_C_Configure_Bullet_Point_Widget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.EndBulletPointIntro
// 0x0020 (0x0020 - 0x0000)
struct SubscriptionDetailsWidget_C_EndBulletPointIntro final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubscriptionBulletPointWidget_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_EndBulletPointIntro) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_EndBulletPointIntro");
static_assert(sizeof(SubscriptionDetailsWidget_C_EndBulletPointIntro) == 0x000020, "Wrong size on SubscriptionDetailsWidget_C_EndBulletPointIntro");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, CallFunc_Array_Get_Item) == 0x000010, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_EndBulletPointIntro, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'SubscriptionDetailsWidget_C_EndBulletPointIntro::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.ExecuteUbergraph_SubscriptionDetailsWidget
// 0x0040 (0x0040 - 0x0000)
struct SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMcpSubscriptionState                         K2Node_Event_NewState;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Event_SkinImage_1;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_SkinImage;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget");
static_assert(sizeof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget) == 0x000040, "Wrong size on SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, EntryPoint) == 0x000000, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, K2Node_Event_NewState) == 0x000004, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, K2Node_Event_SkinImage_1) == 0x000008, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::K2Node_Event_SkinImage_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, K2Node_Event_SkinImage) == 0x000020, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::K2Node_Event_SkinImage' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000030, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'SubscriptionDetailsWidget_C_ExecuteUbergraph_SubscriptionDetailsWidget::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.HandleTransitionToSubsScreenAnim
// 0x0008 (0x0008 - 0x0000)
struct SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim");
static_assert(sizeof(SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim) == 0x000008, "Wrong size on SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim");
static_assert(offsetof(SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'SubscriptionDetailsWidget_C_HandleTransitionToSubsScreenAnim::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnBattlepassDisclaimerStateUpdated
// 0x0002 (0x0002 - 0x0000)
struct SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated final
{
public:
	ESubscriptionDisclaimerState                  DisclaimerState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated) == 0x000001, "Wrong alignment on SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated) == 0x000002, "Wrong size on SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated, DisclaimerState) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated::DisclaimerState' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'SubscriptionDetailsWidget_C_OnBattlepassDisclaimerStateUpdated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnBattlepassImageLoaded
// 0x0008 (0x0008 - 0x0000)
struct SubscriptionDetailsWidget_C_OnBattlepassImageLoaded final
{
public:
	class UTexture2D*                             SkinImage;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnBattlepassImageLoaded) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_OnBattlepassImageLoaded");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnBattlepassImageLoaded) == 0x000008, "Wrong size on SubscriptionDetailsWidget_C_OnBattlepassImageLoaded");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnBattlepassImageLoaded, SkinImage) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnBattlepassImageLoaded::SkinImage' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnScreenStateSet
// 0x0001 (0x0001 - 0x0000)
struct SubscriptionDetailsWidget_C_OnScreenStateSet final
{
public:
	EMcpSubscriptionState                         NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnScreenStateSet) == 0x000001, "Wrong alignment on SubscriptionDetailsWidget_C_OnScreenStateSet");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnScreenStateSet) == 0x000001, "Wrong size on SubscriptionDetailsWidget_C_OnScreenStateSet");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnScreenStateSet, NewState) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnScreenStateSet::NewState' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnSkinDisclaimerStateUpdated
// 0x0002 (0x0002 - 0x0000)
struct SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated final
{
public:
	ESubscriptionDisclaimerState                  DisclaimerState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated) == 0x000001, "Wrong alignment on SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated) == 0x000002, "Wrong size on SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated, DisclaimerState) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated::DisclaimerState' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'SubscriptionDetailsWidget_C_OnSkinDisclaimerStateUpdated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnSkinImageLoaded
// 0x0008 (0x0008 - 0x0000)
struct SubscriptionDetailsWidget_C_OnSkinImageLoaded final
{
public:
	class UTexture2D*                             SkinImage;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnSkinImageLoaded) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_OnSkinImageLoaded");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnSkinImageLoaded) == 0x000008, "Wrong size on SubscriptionDetailsWidget_C_OnSkinImageLoaded");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageLoaded, SkinImage) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnSkinImageLoaded::SkinImage' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnSkinImageTakeOver
// 0x0050 (0x0050 - 0x0000)
struct SubscriptionDetailsWidget_C_OnSkinImageTakeOver final
{
public:
	bool                                          bTakeOver;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          K2Node_Select_Default_1;                           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_OnSkinImageTakeOver");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver) == 0x000050, "Wrong size on SubscriptionDetailsWidget_C_OnSkinImageTakeOver");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, bTakeOver) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::bTakeOver' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_bool_Variable) == 0x000001, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_bool_Variable_1) == 0x000002, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable) == 0x000003, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable_1) == 0x000004, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_bool_Variable_2) == 0x000005, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable_2) == 0x000006, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable_3) == 0x000007, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_bool_Variable_3) == 0x000008, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable_4) == 0x000009, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, Temp_byte_Variable_5) == 0x00000A, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_MakeStruct_Margin) == 0x00000C, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_MakeStruct_Margin_1) == 0x00001C, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_Select_Default) == 0x00002C, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_Select_Default_1) == 0x00003C, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000040, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_Select_Default_2) == 0x000048, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnSkinImageTakeOver, K2Node_Select_Default_3) == 0x000049, "Member 'SubscriptionDetailsWidget_C_OnSkinImageTakeOver::K2Node_Select_Default_3' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.OnVbucksDisclaimerStateUpdated
// 0x0002 (0x0002 - 0x0000)
struct SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated final
{
public:
	ESubscriptionDisclaimerState                  DisclaimerState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated) == 0x000001, "Wrong alignment on SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated");
static_assert(sizeof(SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated) == 0x000002, "Wrong size on SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated, DisclaimerState) == 0x000000, "Member 'SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated::DisclaimerState' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'SubscriptionDetailsWidget_C_OnVbucksDisclaimerStateUpdated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.ResetBulletPointsIntro
// 0x0020 (0x0020 - 0x0000)
struct SubscriptionDetailsWidget_C_ResetBulletPointsIntro final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubscriptionBulletPointWidget_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_ResetBulletPointsIntro");
static_assert(sizeof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro) == 0x000020, "Wrong size on SubscriptionDetailsWidget_C_ResetBulletPointsIntro");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, CallFunc_Array_Get_Item) == 0x000010, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_ResetBulletPointsIntro, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'SubscriptionDetailsWidget_C_ResetBulletPointsIntro::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetMaterialColors
// 0x01A0 (0x01A0 - 0x0000)
struct SubscriptionDetailsWidget_C_SetMaterialColors final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_3;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_4;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_5;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_6;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_7;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_8;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_9;    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_10;   // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_11;   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_12;   // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_13;   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_3;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_SetMaterialColors) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_SetMaterialColors");
static_assert(sizeof(SubscriptionDetailsWidget_C_SetMaterialColors) == 0x0001A0, "Wrong size on SubscriptionDetailsWidget_C_SetMaterialColors");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, Temp_int_Array_Index_Variable) == 0x000008, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000010, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_LinearColorLerp_ReturnValue) == 0x000020, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000030, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x000040, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000050, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_3) == 0x000060, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000070, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_4) == 0x000080, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_5) == 0x000090, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_6) == 0x0000A0, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x0000B0, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000B8, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_7) == 0x0000C0, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000D0, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_8) == 0x0000D8, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_9) == 0x0000E8, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_10) == 0x0000F8, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, K2Node_MakeArray_Array) == 0x000110, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Array_Get_Item) == 0x000120, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x000130, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_11) == 0x000140, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_12) == 0x000150, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Conv_ColorToLinearColor_ReturnValue_13) == 0x000160, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Conv_ColorToLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, K2Node_MakeArray_Array_1) == 0x000170, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetMaterialColors, CallFunc_GetDynamicMaterial_ReturnValue_3) == 0x000198, "Member 'SubscriptionDetailsWidget_C_SetMaterialColors::CallFunc_GetDynamicMaterial_ReturnValue_3' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetRandomFlareTime
// 0x0018 (0x0018 - 0x0000)
struct SubscriptionDetailsWidget_C_SetRandomFlareTime final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_SetRandomFlareTime) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_SetRandomFlareTime");
static_assert(sizeof(SubscriptionDetailsWidget_C_SetRandomFlareTime) == 0x000018, "Wrong size on SubscriptionDetailsWidget_C_SetRandomFlareTime");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetRandomFlareTime, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'SubscriptionDetailsWidget_C_SetRandomFlareTime::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetRandomFlareTime, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000008, "Member 'SubscriptionDetailsWidget_C_SetRandomFlareTime::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetRandomFlareTime, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'SubscriptionDetailsWidget_C_SetRandomFlareTime::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenCompletedAnimState
// 0x0010 (0x0010 - 0x0000)
struct SubscriptionDetailsWidget_C_SetScreenCompletedAnimState final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_SetScreenCompletedAnimState) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_SetScreenCompletedAnimState");
static_assert(sizeof(SubscriptionDetailsWidget_C_SetScreenCompletedAnimState) == 0x000010, "Wrong size on SubscriptionDetailsWidget_C_SetScreenCompletedAnimState");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenCompletedAnimState, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'SubscriptionDetailsWidget_C_SetScreenCompletedAnimState::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenCompletedAnimState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'SubscriptionDetailsWidget_C_SetScreenCompletedAnimState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenForResetState
// 0x0010 (0x0010 - 0x0000)
struct SubscriptionDetailsWidget_C_SetScreenForResetState final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_SetScreenForResetState) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_SetScreenForResetState");
static_assert(sizeof(SubscriptionDetailsWidget_C_SetScreenForResetState) == 0x000010, "Wrong size on SubscriptionDetailsWidget_C_SetScreenForResetState");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenForResetState, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'SubscriptionDetailsWidget_C_SetScreenForResetState::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenForResetState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'SubscriptionDetailsWidget_C_SetScreenForResetState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.SetScreenForTransitionAnim
// 0x0010 (0x0010 - 0x0000)
struct SubscriptionDetailsWidget_C_SetScreenForTransitionAnim final
{
public:
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_SetScreenForTransitionAnim) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_SetScreenForTransitionAnim");
static_assert(sizeof(SubscriptionDetailsWidget_C_SetScreenForTransitionAnim) == 0x000010, "Wrong size on SubscriptionDetailsWidget_C_SetScreenForTransitionAnim");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenForTransitionAnim, CallFunc_GetEndTime_ReturnValue) == 0x000000, "Member 'SubscriptionDetailsWidget_C_SetScreenForTransitionAnim::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_SetScreenForTransitionAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'SubscriptionDetailsWidget_C_SetScreenForTransitionAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function SubscriptionDetailsWidget.SubscriptionDetailsWidget_C.StartBulletPointIntro
// 0x0018 (0x0018 - 0x0000)
struct SubscriptionDetailsWidget_C_StartBulletPointIntro final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USubscriptionBulletPointWidget_C*       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SubscriptionDetailsWidget_C_StartBulletPointIntro) == 0x000008, "Wrong alignment on SubscriptionDetailsWidget_C_StartBulletPointIntro");
static_assert(sizeof(SubscriptionDetailsWidget_C_StartBulletPointIntro) == 0x000018, "Wrong size on SubscriptionDetailsWidget_C_StartBulletPointIntro");
static_assert(offsetof(SubscriptionDetailsWidget_C_StartBulletPointIntro, Index_0) == 0x000000, "Member 'SubscriptionDetailsWidget_C_StartBulletPointIntro::Index_0' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_StartBulletPointIntro, CallFunc_Array_Get_Item) == 0x000008, "Member 'SubscriptionDetailsWidget_C_StartBulletPointIntro::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SubscriptionDetailsWidget_C_StartBulletPointIntro, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'SubscriptionDetailsWidget_C_StartBulletPointIntro::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

