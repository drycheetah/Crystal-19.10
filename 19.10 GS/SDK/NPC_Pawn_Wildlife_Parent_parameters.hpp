#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Wildlife_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SoundLibrary_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Enum_NPC_AlertLevel_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.AsyncLinkAnimationLayer
// 0x0028 (0x0028 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer final
{
public:
	TSoftClassPtr<class UClass>                   AnimationLayer;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer) == 0x000028, "Wrong size on NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer, AnimationLayer) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_AsyncLinkAnimationLayer::AnimationLayer' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.AttachAndApplyVocalFX
// 0x0060 (0x0060 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX final
{
public:
	struct FSoundLibraryPlaySoundResult           SoundLibraryResult;                                // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX) == 0x000060, "Wrong size on NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, SoundLibraryResult) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::SoundLibraryResult' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, Temp_int_Array_Index_Variable) == 0x000030, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_Array_Get_Item) == 0x000038, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_MatchesTag_ReturnValue) == 0x000045, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000050, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'NPC_Pawn_Wildlife_Parent_C_AttachAndApplyVocalFX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature final
{
public:
	class AFortPawn*                              InstigatorPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature) == 0x000008, "Wrong size on NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature, InstigatorPawn) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature::InstigatorPawn' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature final
{
public:
	struct FSoundLibraryPlaySoundResult           Results;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	const class USoundLibraryContext*             Context;                                           // 0x0030(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature) == 0x000038, "Wrong size on NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature, Results) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature::Results' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature, Context) == 0x000030, "Member 'NPC_Pawn_Wildlife_Parent_C_BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature::Context' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.CanBeInteractedWithWhenTamed
// 0x0010 (0x0010 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed final
{
public:
	bool                                          bCanInteract_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_GetScalableFloatHotfixValue_AsBool;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed) == 0x000004, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed) == 0x000010, "Wrong size on NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed, bCanInteract_0) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed::bCanInteract_0' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed, CallFunc_NPC_GetScalableFloatHotfixValue_AsBool) == 0x000001, "Member 'NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed::CallFunc_NPC_GetScalableFloatHotfixValue_AsBool' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed, CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded) == 0x000004, "Member 'NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed::CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed, CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed::CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'NPC_Pawn_Wildlife_Parent_C_CanBeInteractedWithWhenTamed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.ExecuteUbergraph_NPC_Pawn_Wildlife_Parent
// 0x01F0 (0x01F0 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeInteractedWithWhenTamed_bCanInteract; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   K2Node_CustomEvent_AnimationLayer;                 // 0x0008(0x0028)(HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_AIPawn;                               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_Event_InteractingPlayerPawn;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_ComponentBoundEvent_InstigatorPawn;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_AlertLevel                           K2Node_Event_NPCAlertLevel;                        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Damage;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x0078(0x0020)(ConstParm)
	struct FVector                                K2Node_Event_Momentum;                             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x00A4(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x0150(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Success_;                             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Leader;                               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundLibraryPlaySoundResult           K2Node_ComponentBoundEvent_Results;                // 0x0188(0x0030)(ConstParm, ContainsInstancedReference)
	const class USoundLibraryContext*             K2Node_ComponentBoundEvent_Context;                // 0x01B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bControlled;                          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_CanBeInteractedWith_CanInteract;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_UpdateInteract_EnabledInteract;       // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent) == 0x0001F0, "Wrong size on NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, EntryPoint) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_CanBeInteractedWithWhenTamed_bCanInteract) == 0x000004, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_CanBeInteractedWithWhenTamed_bCanInteract' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_CustomEvent_AnimationLayer) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_CustomEvent_AnimationLayer' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000040, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_AIPawn) == 0x000048, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_AIPawn' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_InteractingPlayerPawn) == 0x000050, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_InteractingPlayerPawn' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_DynamicCast_AsFort_Pawn) == 0x000058, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_ComponentBoundEvent_InstigatorPawn) == 0x000068, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_ComponentBoundEvent_InstigatorPawn' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_GetActorTeam_ReturnValue) == 0x000070, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_NPCAlertLevel) == 0x000071, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_NPCAlertLevel' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_SwitchEnum_CmpSuccess) == 0x000072, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_Damage) == 0x000074, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_DamageTags) == 0x000078, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_Momentum) == 0x000098, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_HitInfo) == 0x0000A4, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_InstigatedBy) == 0x000140, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_DamageCauser) == 0x000148, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_EffectContext) == 0x000150, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000168, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_Success_) == 0x000174, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_Success_' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_Leader) == 0x000178, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_Leader' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000180, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_HasAuthority_ReturnValue) == 0x000184, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000185, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_ComponentBoundEvent_Results) == 0x000188, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_ComponentBoundEvent_Results' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_ComponentBoundEvent_Context) == 0x0001B8, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_ComponentBoundEvent_Context' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_Event_bControlled) == 0x0001C0, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_Event_bControlled' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, Temp_class_Variable) == 0x0001C8, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x0001D0, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_ClassDynamicCast_bSuccess) == 0x0001D8, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_Not_PreBool_ReturnValue) == 0x0001D9, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, K2Node_CustomEvent_Loaded) == 0x0001E0, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_NPC_CanBeInteractedWith_CanInteract) == 0x0001E8, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_NPC_CanBeInteractedWith_CanInteract' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent, CallFunc_NPC_UpdateInteract_EnabledInteract) == 0x0001E9, "Member 'NPC_Pawn_Wildlife_Parent_C_ExecuteUbergraph_NPC_Pawn_Wildlife_Parent::CallFunc_NPC_UpdateInteract_EnabledInteract' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC AlertLevelChangedServer
// 0x0001 (0x0001 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer final
{
public:
	Enum_NPC_AlertLevel                           NPCAlertLevel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer) == 0x000001, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer) == 0x000001, "Wrong size on NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer, NPCAlertLevel) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_AlertLevelChangedServer::NPCAlertLevel' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC CanBeInteractedWith
// 0x0003 (0x0003 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_CanBeInteractedWith_CanInteract;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith) == 0x000001, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith) == 0x000003, "Wrong size on NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith, CanInteract) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith::CanInteract' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith, CallFunc_NPC_CanBeInteractedWith_CanInteract) == 0x000001, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith::CallFunc_NPC_CanBeInteractedWith_CanInteract' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_CanBeInteractedWith::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC LeaderSet
// 0x0010 (0x0010 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Leader;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet) == 0x000010, "Wrong size on NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet, Success_) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet::Success_' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet, Leader) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_LeaderSet::Leader' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.NPC PickupGrabbed_Destroyed
// 0x0008 (0x0008 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed final
{
public:
	class AActor*                                 ActorGrabbed;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed) == 0x000008, "Wrong size on NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed, ActorGrabbed) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_NPC_PickupGrabbed_Destroyed::ActorGrabbed' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.On NPC PawnInteractedWith
// 0x0010 (0x0010 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith final
{
public:
	class AActor*                                 AIPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        InteractingPlayerPawn;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith) == 0x000010, "Wrong size on NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith, AIPawn) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith::AIPawn' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith, InteractingPlayerPawn) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_On_NPC_PawnInteractedWith::InteractingPlayerPawn' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnBeingControlledChanged
// 0x0001 (0x0001 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged final
{
public:
	bool                                          bControlled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged) == 0x000001, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged) == 0x000001, "Wrong size on NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged, bControlled) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_OnBeingControlledChanged::bControlled' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnDeathServer
// 0x00F8 (0x00F8 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_OnDeathServer final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitInfo;                                           // 0x0034(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            InstigatedBy;                                      // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00E0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_OnDeathServer");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer) == 0x0000F8, "Wrong size on NPC_Pawn_Wildlife_Parent_C_OnDeathServer");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, Damage) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::Damage' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, DamageTags) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::DamageTags' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, Momentum) == 0x000028, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::Momentum' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, HitInfo) == 0x000034, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::HitInfo' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, InstigatedBy) == 0x0000D0, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::InstigatedBy' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, DamageCauser) == 0x0000D8, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::DamageCauser' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnDeathServer, EffectContext) == 0x0000E0, "Member 'NPC_Pawn_Wildlife_Parent_C_OnDeathServer::EffectContext' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06
// 0x0008 (0x0008 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06) == 0x000008, "Wrong size on NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06, Loaded) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06::Loaded' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.Play Sound Lib
// 0x0078 (0x0078 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib final
{
public:
	struct FGameplayTag                           Event_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FSimpleSoundLibraryContextSettings     K2Node_MakeStruct_SimpleSoundLibraryContextSettings; // 0x0008(0x0028)(NoDestructor)
	class USimpleSoundLibraryContext*             CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundLibrarySubsystem*                 CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundLibraryPlaySoundResult           CallFunc_PlaySound_OutResults;                     // 0x0040(0x0030)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib) == 0x000078, "Wrong size on NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, Event_Name) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::Event_Name' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, K2Node_MakeStruct_SimpleSoundLibraryContextSettings) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::K2Node_MakeStruct_SimpleSoundLibraryContextSettings' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000038, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, CallFunc_PlaySound_OutResults) == 0x000040, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::CallFunc_PlaySound_OutResults' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Sound_Lib::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.Play Water Splash at Water Surface
// 0x0010 (0x0010 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface final
{
public:
	class AFortWaterBodyActor*                    Water_Body;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enter_Water_0;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface) == 0x000010, "Wrong size on NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface, Water_Body) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface::Water_Body' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface, Enter_Water_0) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_Play_Water_Splash_at_Water_Surface::Enter_Water_0' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.SetTamingEnabled
// 0x0018 (0x0018 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled final
{
public:
	bool                                          EnableTaming;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NPC_CanBeInteractedWith_CanInteract;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortPawnComponent_Convert*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled) == 0x000018, "Wrong size on NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled, EnableTaming) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled::EnableTaming' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled, CallFunc_NPC_CanBeInteractedWith_CanInteract) == 0x000001, "Member 'NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled::CallFunc_NPC_CanBeInteractedWith_CanInteract' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NPC_Pawn_Wildlife_Parent_C_SetTamingEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.UpdateTamingIndicator
// 0x0018 (0x0018 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator) == 0x000018, "Wrong size on NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator, CallFunc_GetActorTeam_ReturnValue) == 0x000010, "Member 'NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'NPC_Pawn_Wildlife_Parent_C_UpdateTamingIndicator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C.IsValidAutoFireTarget
// 0x0028 (0x0028 - 0x0000)
struct NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget final
{
public:
	const class AActor*                           Attacker;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetActorTeam_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortTeamAffiliation                          CallFunc_GetTeamAffiliationBetweenTeams_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget) == 0x000008, "Wrong alignment on NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget");
static_assert(sizeof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget) == 0x000028, "Wrong size on NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, Attacker) == 0x000000, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::Attacker' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, ReturnValue) == 0x000008, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_GetActorTeam_ReturnValue) == 0x000009, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_GetMaxHealth_ReturnValue) == 0x00000C, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_GetTeamAffiliationBetweenTeams_ReturnValue) == 0x000010, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_GetTeamAffiliationBetweenTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_GetHealth_ReturnValue) == 0x000014, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000022, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget, CallFunc_BooleanOR_ReturnValue_1) == 0x000025, "Member 'NPC_Pawn_Wildlife_Parent_C_IsValidAutoFireTarget::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

