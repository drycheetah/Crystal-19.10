#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonUILegacy

#include "Basic.hpp"

#include "CommonUI_structs.hpp"


namespace SDK
{

// Enum CommonUILegacy.EOperation
// NumValues: 0x0005
enum class EOperation : uint8
{
	Intro                                    = 0,
	Outro                                    = 1,
	Push                                     = 2,
	Pop                                      = 3,
	Invalid                                  = 4,
};

// Enum CommonUILegacy.ECommonPlatformType
// NumValues: 0x000A
enum class ECommonPlatformType : uint8
{
	PC                                       = 0,
	Mac                                      = 1,
	PS4                                      = 2,
	XBox                                     = 3,
	IOS                                      = 4,
	Android                                  = 5,
	Switch                                   = 6,
	XSX                                      = 7,
	PS5                                      = 8,
	Count                                    = 9,
};

// Enum CommonUILegacy.ECommonGamepadType
// NumValues: 0x0007
enum class ECommonGamepadType : uint8
{
	XboxOneController                        = 0,
	PS4Controller                            = 1,
	SwitchController                         = 2,
	GenericController                        = 3,
	XboxSeriesXController                    = 4,
	PS5Controller                            = 5,
	Count                                    = 6,
};

// ScriptStruct CommonUILegacy.Operation
// 0x0028 (0x0028 - 0x0000)
struct FOperation final
{
public:
	EOperation                                    Operation;                                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatablePanelLegacy*          Panel;                                             // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIntroPanel;                                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bActivatePanel;                                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutroPanelBelow;                                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13[0x15];                                      // 0x0013(0x0015)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOperation) == 0x000008, "Wrong alignment on FOperation");
static_assert(sizeof(FOperation) == 0x000028, "Wrong size on FOperation");
static_assert(offsetof(FOperation, Operation) == 0x000000, "Member 'FOperation::Operation' has a wrong offset!");
static_assert(offsetof(FOperation, Panel) == 0x000008, "Member 'FOperation::Panel' has a wrong offset!");
static_assert(offsetof(FOperation, bIntroPanel) == 0x000010, "Member 'FOperation::bIntroPanel' has a wrong offset!");
static_assert(offsetof(FOperation, bActivatePanel) == 0x000011, "Member 'FOperation::bActivatePanel' has a wrong offset!");
static_assert(offsetof(FOperation, bOutroPanelBelow) == 0x000012, "Member 'FOperation::bOutroPanelBelow' has a wrong offset!");

// ScriptStruct CommonUILegacy.CommonInputActionData
// 0x0530 (0x0830 - 0x0300)
struct FCommonInputActionData final : public FCommonInputActionDataBase
{
public:
	TMap<ECommonGamepadType, struct FCommonInputTypeInfo> GamepadInputTypeInfoOverrides;                     // 0x0300(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FCommonInputTypeInfo                   GamepadInputTypeInfos[0x6];                        // 0x0350(0x00D0)(Deprecated, Protected, NativeAccessSpecifierProtected)
};
static_assert(alignof(FCommonInputActionData) == 0x000010, "Wrong alignment on FCommonInputActionData");
static_assert(sizeof(FCommonInputActionData) == 0x000830, "Wrong size on FCommonInputActionData");
static_assert(offsetof(FCommonInputActionData, GamepadInputTypeInfoOverrides) == 0x000300, "Member 'FCommonInputActionData::GamepadInputTypeInfoOverrides' has a wrong offset!");
static_assert(offsetof(FCommonInputActionData, GamepadInputTypeInfos) == 0x000350, "Member 'FCommonInputActionData::GamepadInputTypeInfos' has a wrong offset!");

}

