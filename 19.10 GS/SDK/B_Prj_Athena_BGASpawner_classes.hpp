#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_BGASpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_BGASpawner.B_Prj_Athena_BGASpawner_C
// 0x0088 (0x0950 - 0x08C8)
class AB_Prj_Athena_BGASpawner_C : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         FoundBuildingOnDied;                               // 0x08D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          bResumeSimulation;                                 // 0x08E0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistanceToKnock;                                // 0x08E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLaunchPower;                                    // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EC[0x4];                                      // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        BeatAudioComponent;                                // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatMultiplierForStart;                            // 0x08F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BeatsPerLoop;                                      // 0x08FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBeatInTheLoop;                              // 0x0900(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinLaunchPower;                                    // 0x0904(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BGAToSpawn;                                        // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundActivate;                                     // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnScale;                                        // 0x0918(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosOffsetAlongNormal;                         // 0x0924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosZOffsetInWater;                            // 0x0928(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x092C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnOnCollision;                                  // 0x092D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92E[0x2];                                      // 0x092E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDotWithUp;                                      // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DontSpawnOnVehicles;                               // 0x0934(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_935[0x3];                                      // 0x0935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Splash_Sound;                                      // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedBGA;                                        // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnPosAdditionalZOffset;                         // 0x0948(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseImpactNormalForBGASpawnRotation;                // 0x094C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_1_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent_0, bool bIsFirstBody);
	void CheckForWater_(const struct FVector& CurrPos, class AActor* HitActor, struct FVector* PosAboveWater);
	void ExecuteUbergraph_B_Prj_Athena_BGASpawner(int32 EntryPoint);
	void GetClosestPoint(class UPrimitiveComponent* Component, const struct FVector& StartingPoint, struct FVector* Point);
	void Held_Water_Impact();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	class AActor* SpawnBGA_(const struct FVector& Normal, class AActor* HitActor, class UPrimitiveComponent* HitComp, const struct FVector& Pos, bool FromWater, const struct FHitResult& Hit);
	bool WillBounceOffTarget(const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_BGASpawner_C">();
	}
	static class AB_Prj_Athena_BGASpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_BGASpawner_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_BGASpawner_C) == 0x000008, "Wrong alignment on AB_Prj_Athena_BGASpawner_C");
static_assert(sizeof(AB_Prj_Athena_BGASpawner_C) == 0x000950, "Wrong size on AB_Prj_Athena_BGASpawner_C");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, UberGraphFrame) == 0x0008C8, "Member 'AB_Prj_Athena_BGASpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, FoundBuildingOnDied) == 0x0008D0, "Member 'AB_Prj_Athena_BGASpawner_C::FoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, bResumeSimulation) == 0x0008E0, "Member 'AB_Prj_Athena_BGASpawner_C::bResumeSimulation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDistanceToKnock) == 0x0008E4, "Member 'AB_Prj_Athena_BGASpawner_C::MinDistanceToKnock' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MaxLaunchPower) == 0x0008E8, "Member 'AB_Prj_Athena_BGASpawner_C::MaxLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatAudioComponent) == 0x0008F0, "Member 'AB_Prj_Athena_BGASpawner_C::BeatAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatMultiplierForStart) == 0x0008F8, "Member 'AB_Prj_Athena_BGASpawner_C::BeatMultiplierForStart' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BeatsPerLoop) == 0x0008FC, "Member 'AB_Prj_Athena_BGASpawner_C::BeatsPerLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, CurrentBeatInTheLoop) == 0x000900, "Member 'AB_Prj_Athena_BGASpawner_C::CurrentBeatInTheLoop' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinLaunchPower) == 0x000904, "Member 'AB_Prj_Athena_BGASpawner_C::MinLaunchPower' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, BGAToSpawn) == 0x000908, "Member 'AB_Prj_Athena_BGASpawner_C::BGAToSpawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SoundActivate) == 0x000910, "Member 'AB_Prj_Athena_BGASpawner_C::SoundActivate' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnScale) == 0x000918, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosOffsetAlongNormal) == 0x000924, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosOffsetAlongNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosZOffsetInWater) == 0x000928, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosZOffsetInWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Spawned) == 0x00092C, "Member 'AB_Prj_Athena_BGASpawner_C::Spawned' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnOnCollision) == 0x00092D, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnOnCollision' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, MinDotWithUp) == 0x000930, "Member 'AB_Prj_Athena_BGASpawner_C::MinDotWithUp' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, DontSpawnOnVehicles) == 0x000934, "Member 'AB_Prj_Athena_BGASpawner_C::DontSpawnOnVehicles' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, Splash_Sound) == 0x000938, "Member 'AB_Prj_Athena_BGASpawner_C::Splash_Sound' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnedBGA) == 0x000940, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnedBGA' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, SpawnPosAdditionalZOffset) == 0x000948, "Member 'AB_Prj_Athena_BGASpawner_C::SpawnPosAdditionalZOffset' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_BGASpawner_C, UseImpactNormalForBGASpawnRotation) == 0x00094C, "Member 'AB_Prj_Athena_BGASpawner_C::UseImpactNormalForBGASpawnRotation' has a wrong offset!");

}

