#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PictureInPictureCore

#include "Basic.hpp"

#include "PictureInPictureCore_classes.hpp"
#include "PictureInPictureCore_parameters.hpp"


namespace SDK
{

// Function PictureInPictureCore.PictureInPictureSubsystem.GetAutoEnableSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureSubsystem::GetAutoEnableSetting()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAutoEnableSetting");

	Params::PictureInPictureSubsystem_GetAutoEnableSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetCurrentPartnerClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPictureInPictureClient*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPictureClient* UPictureInPictureSubsystem::GetCurrentPartnerClient()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPartnerClient");

	Params::PictureInPictureSubsystem_GetCurrentPartnerClient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetCurrentPartnerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPictureInPictureMediaController* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPictureMediaController* UPictureInPictureSubsystem::GetCurrentPartnerController()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPartnerController");

	Params::PictureInPictureSubsystem_GetCurrentPartnerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetCurrentPartnerControls
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPictureInPicturePartnerControls* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPicturePartnerControls* UPictureInPictureSubsystem::GetCurrentPartnerControls()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPartnerControls");

	Params::PictureInPictureSubsystem_GetCurrentPartnerControls Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetCurrentPartnerItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPictureInPicturePartnerDataAsset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPicturePartnerDataAsset* UPictureInPictureSubsystem::GetCurrentPartnerItem()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentPartnerItem");

	Params::PictureInPictureSubsystem_GetCurrentPartnerItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetLastUsedPartner
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OutPartnerName                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::GetLastUsedPartner(class FString* OutPartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLastUsedPartner");

	Params::PictureInPictureSubsystem_GetLastUsedPartner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartnerName != nullptr)
		*OutPartnerName = std::move(Parms.OutPartnerName);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetLastUsedSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OutPartnerSourceName                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::GetLastUsedSource(class FString* OutPartnerSourceName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLastUsedSource");

	Params::PictureInPictureSubsystem_GetLastUsedSource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutPartnerSourceName != nullptr)
		*OutPartnerSourceName = std::move(Parms.OutPartnerSourceName);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetPartnerClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PartnerName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPictureInPictureClient*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPictureClient* UPictureInPictureSubsystem::GetPartnerClient(const class FString& PartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartnerClient");

	Params::PictureInPictureSubsystem_GetPartnerClient Parms{};

	Parms.PartnerName = std::move(PartnerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetPartnerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PartnerName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPictureInPictureMediaController* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPictureMediaController* UPictureInPictureSubsystem::GetPartnerController(const class FString& PartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartnerController");

	Params::PictureInPictureSubsystem_GetPartnerController Parms{};

	Parms.PartnerName = std::move(PartnerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetPartnerControls
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PartnerName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPictureInPicturePartnerControls* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPicturePartnerControls* UPictureInPictureSubsystem::GetPartnerControls(const class FString& PartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartnerControls");

	Params::PictureInPictureSubsystem_GetPartnerControls Parms{};

	Parms.PartnerName = std::move(PartnerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetPartnerItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PartnerName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPictureInPicturePartnerDataAsset*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPicturePartnerDataAsset* UPictureInPictureSubsystem::GetPartnerItem(const class FString& PartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartnerItem");

	Params::PictureInPictureSubsystem_GetPartnerItem Parms{};

	Parms.PartnerName = std::move(PartnerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.GetPartnerItemList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UPictureInPicturePartnerDataAsset*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPictureInPicturePartnerDataAsset*> UPictureInPictureSubsystem::GetPartnerItemList()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPartnerItemList");

	Params::PictureInPictureSubsystem_GetPartnerItemList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.HandleMediaSourceRequest
// (Final, Native, Private)

void UPictureInPictureSubsystem::HandleMediaSourceRequest()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleMediaSourceRequest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.IsPartnerListUpdated
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureSubsystem::IsPartnerListUpdated()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPartnerListUpdated");

	Params::PictureInPictureSubsystem_IsPartnerListUpdated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureSubsystem.OnCurrentPartnerSourceSelected
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FPiPPartnerSource                SelectedSource                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::OnCurrentPartnerSourceSelected(const struct FPiPPartnerSource& SelectedSource)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnCurrentPartnerSourceSelected");

	Params::PictureInPictureSubsystem_OnCurrentPartnerSourceSelected Parms{};

	Parms.SelectedSource = std::move(SelectedSource);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.ResumeCurrentMediaController
// (Final, Native, Public)

void UPictureInPictureSubsystem::ResumeCurrentMediaController()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResumeCurrentMediaController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.SetCurrentMediaControllerEnabled
// (Final, Native, Private)
// Parameters:
// bool                                    InEnabled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::SetCurrentMediaControllerEnabled(bool InEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentMediaControllerEnabled");

	Params::PictureInPictureSubsystem_SetCurrentMediaControllerEnabled Parms{};

	Parms.InEnabled = InEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.ShutdownAllPartners
// (Final, Native, Public, BlueprintCallable)

void UPictureInPictureSubsystem::ShutdownAllPartners()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ShutdownAllPartners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.StoreAutoEnableSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InUserEnabled                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::StoreAutoEnableSetting(bool InUserEnabled)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StoreAutoEnableSetting");

	Params::PictureInPictureSubsystem_StoreAutoEnableSetting Parms{};

	Parms.InUserEnabled = InUserEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.StoreLastUsedPartner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InPartnerName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::StoreLastUsedPartner(const class FString& InPartnerName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StoreLastUsedPartner");

	Params::PictureInPictureSubsystem_StoreLastUsedPartner Parms{};

	Parms.InPartnerName = std::move(InPartnerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.StoreLastUsedSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InPartnerSourceName                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::StoreLastUsedSource(const class FString& InPartnerSourceName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StoreLastUsedSource");

	Params::PictureInPictureSubsystem_StoreLastUsedSource Parms{};

	Parms.InPartnerSourceName = std::move(InPartnerSourceName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.SuspendCurrentMediaController
// (Final, Native, Public)

void UPictureInPictureSubsystem::SuspendCurrentMediaController()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SuspendCurrentMediaController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureSubsystem.UpdatePartnerItemList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureSubsystem::UpdatePartnerItemList(class UObject* InWorldContext, bool bForce)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdatePartnerItemList");

	Params::PictureInPictureSubsystem_UpdatePartnerItemList Parms{};

	Parms.InWorldContext = InWorldContext;
	Parms.bForce = bForce;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureCheatManager.CanEnablePartnerPiP
// (Final, Exec, Native, Public, BlueprintCallable)

void UPictureInPictureCheatManager::CanEnablePartnerPiP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CanEnablePartnerPiP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureCheatManager.DisablePiP
// (Final, Exec, Native, Public, BlueprintCallable)

void UPictureInPictureCheatManager::DisablePiP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("DisablePiP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureCheatManager.EnablePiP
// (Final, Exec, Native, Public, BlueprintCallable)

void UPictureInPictureCheatManager::EnablePiP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EnablePiP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureCheatManager.ResumePiP
// (Final, Exec, Native, Public, BlueprintCallable)

void UPictureInPictureCheatManager::ResumePiP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResumePiP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureCheatManager.SuspendPiP
// (Final, Exec, Native, Public, BlueprintCallable)

void UPictureInPictureCheatManager::SuspendPiP()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SuspendPiP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.Exit
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bStop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::Exit(bool bStop)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Exit");

	Params::PictureInPictureMediaController_Exit Parms{};

	Parms.bStop = bStop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UPictureInPictureActionData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UPictureInPictureActionData*> UPictureInPictureMediaController::GetActions()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetActions");

	Params::PictureInPictureMediaController_GetActions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetCurrentSource
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPiPPartnerSource                ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FPiPPartnerSource UPictureInPictureMediaController::GetCurrentSource()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetCurrentSource");

	Params::PictureInPictureMediaController_GetCurrentSource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetSources
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPiPPartnerSource>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FPiPPartnerSource> UPictureInPictureMediaController::GetSources()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetSources");

	Params::PictureInPictureMediaController_GetSources Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetValidSources
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPiPPartnerSource>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FPiPPartnerSource> UPictureInPictureMediaController::GetValidSources()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetValidSources");

	Params::PictureInPictureMediaController_GetValidSources Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.HandleSourceSelectedEvent
// (Native, Protected)
// Parameters:
// class FString                           SelectedSource                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::HandleSourceSelectedEvent(const class FString& SelectedSource)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleSourceSelectedEvent");

	Params::PictureInPictureMediaController_HandleSourceSelectedEvent Parms{};

	Parms.SelectedSource = std::move(SelectedSource);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.IsMultiSourceSupported
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureMediaController::IsMultiSourceSupported()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsMultiSourceSupported");

	Params::PictureInPictureMediaController_IsMultiSourceSupported Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.IsPaused
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureMediaController::IsPaused()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPaused");

	Params::PictureInPictureMediaController_IsPaused Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.IsPlaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureMediaController::IsPlaying()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsPlaying");

	Params::PictureInPictureMediaController_IsPlaying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnMediaClosedAnalytics
// (Final, Native, Private)

void UPictureInPictureMediaController::OnMediaClosedAnalytics()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMediaClosedAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnMediaPausedAnalytics
// (Final, Native, Private)

void UPictureInPictureMediaController::OnMediaPausedAnalytics()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMediaPausedAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnMediaResumedAnalytics
// (Final, Native, Private)

void UPictureInPictureMediaController::OnMediaResumedAnalytics()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMediaResumedAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnMediaStartedAnalytics
// (Final, Native, Private)

void UPictureInPictureMediaController::OnMediaStartedAnalytics()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnMediaStartedAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnNextThumbnailReceived
// (Final, Native, Private)
// Parameters:
// class UTexture2DDynamic*                InTexture                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::OnNextThumbnailReceived(class UTexture2DDynamic* InTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnNextThumbnailReceived");

	Params::PictureInPictureMediaController_OnNextThumbnailReceived Parms{};

	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.OnPrevThumbnailReceived
// (Final, Native, Private)
// Parameters:
// class UTexture2DDynamic*                InTexture                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::OnPrevThumbnailReceived(class UTexture2DDynamic* InTexture)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("OnPrevThumbnailReceived");

	Params::PictureInPictureMediaController_OnPrevThumbnailReceived Parms{};

	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.Pause
// (Native, Public, BlueprintCallable)

void UPictureInPictureMediaController::Pause()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Pause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.Play
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForcePlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::Play(bool bForcePlay)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Play");

	Params::PictureInPictureMediaController_Play Parms{};

	Parms.bForcePlay = bForcePlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.SetCurrentSource
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPiPPartnerSource                SelectedSource                                         (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::SetCurrentSource(const struct FPiPPartnerSource& SelectedSource)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetCurrentSource");

	Params::PictureInPictureMediaController_SetCurrentSource Parms{};

	Parms.SelectedSource = std::move(SelectedSource);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromUser                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureMediaController::SetEnabled(bool bIsEnabled, bool bIsFromUser)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetEnabled");

	Params::PictureInPictureMediaController_SetEnabled Parms{};

	Parms.bIsEnabled = bIsEnabled;
	Parms.bIsFromUser = bIsFromUser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureMediaController.Stop
// (Native, Public, BlueprintCallable)

void UPictureInPictureMediaController::Stop()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetDefaultPlayerAssetConfig
// (Final, Native, Public, Const)
// Parameters:
// const struct FPIPVideoPlayerAssetConfig ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FPIPVideoPlayerAssetConfig UPictureInPictureMediaController::GetDefaultPlayerAssetConfig() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetDefaultPlayerAssetConfig");

	Params::PictureInPictureMediaController_GetDefaultPlayerAssetConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetMediaPlayerWidget
// (Final, Native, Public, Const)
// Parameters:
// class UPictureInPicturePlayer*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPictureInPicturePlayer* UPictureInPictureMediaController::GetMediaPlayerWidget() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetMediaPlayerWidget");

	Params::PictureInPictureMediaController_GetMediaPlayerWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.GetPlayerAssetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPIPVideoPlayerAssetConfig ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

const struct FPIPVideoPlayerAssetConfig UPictureInPictureMediaController::GetPlayerAssetConfig() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetPlayerAssetConfig");

	Params::PictureInPictureMediaController_GetPlayerAssetConfig Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureMediaController.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureMediaController::IsEnabled() const
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsEnabled");

	Params::PictureInPictureMediaController_IsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPicturePlayer.HandleUCPAudioChanged
// (Final, Native, Private)
// Parameters:
// class UFortClientSettingsRecord*        Settings                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePlayer::HandleUCPAudioChanged(class UFortClientSettingsRecord* Settings)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("HandleUCPAudioChanged");

	Params::PictureInPicturePlayer_HandleUCPAudioChanged Parms{};

	Parms.Settings = Settings;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPicturePlayer.IsAssetConfigSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPicturePlayer::IsAssetConfigSet()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsAssetConfigSet");

	Params::PictureInPicturePlayer_IsAssetConfigSet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPicturePlayer.SetPlayerAssetConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPIPVideoPlayerAssetConfig       InAssetConfig                                          (Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bFlush                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePlayer::SetPlayerAssetConfig(struct FPIPVideoPlayerAssetConfig& InAssetConfig, bool bFlush)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetPlayerAssetConfig");

	Params::PictureInPicturePlayer_SetPlayerAssetConfig Parms{};

	Parms.InAssetConfig = std::move(InAssetConfig);
	Parms.bFlush = bFlush;

	UObject::ProcessEvent(Func, &Parms);

	InAssetConfig = std::move(Parms.InAssetConfig);
}


// Function PictureInPictureCore.PictureInPicturePlayer.StreamedVideoOnUrlFailure
// (Final, Native, Private)
// Parameters:
// class FString                           URL                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePlayer::StreamedVideoOnUrlFailure(const class FString& URL)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StreamedVideoOnUrlFailure");

	Params::PictureInPicturePlayer_StreamedVideoOnUrlFailure Parms{};

	Parms.URL = std::move(URL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPicturePlayer.StreamedVideoOnUrlSuccess
// (Final, Native, Private)
// Parameters:
// class FString                           URL                                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePlayer::StreamedVideoOnUrlSuccess(const class FString& URL)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("StreamedVideoOnUrlSuccess");

	Params::PictureInPicturePlayer_StreamedVideoOnUrlSuccess Parms{};

	Parms.URL = std::move(URL);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPicturePlayer.UpdateStreamingPlayerSize
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InVector                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPicturePlayer::UpdateStreamingPlayerSize(const struct FVector2D& InVector)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("UpdateStreamingPlayerSize");

	Params::PictureInPicturePlayer_UpdateStreamingPlayerSize Parms{};

	Parms.InVector = std::move(InVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureClient.BeginLogin
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureClient::BeginLogin(class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("BeginLogin");

	Params::PictureInPictureClient_BeginLogin Parms{};

	Parms.InWorldContext = InWorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureClient.CheckLogin
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureClient::CheckLogin(class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("CheckLogin");

	Params::PictureInPictureClient_CheckLogin Parms{};

	Parms.InWorldContext = InWorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureClient.EndLogin
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPictureInPictureClient::EndLogin(class UObject* InWorldContext)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("EndLogin");

	Params::PictureInPictureClient_EndLogin Parms{};

	Parms.InWorldContext = InWorldContext;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PictureInPictureCore.PictureInPictureClient.GetAvatarImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UEpicCMSImage*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEpicCMSImage* UPictureInPictureClient::GetAvatarImage()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetAvatarImage");

	Params::PictureInPictureClient_GetAvatarImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureClient.GetLoginState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const EPictureInPictureAuthState        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EPictureInPictureAuthState UPictureInPictureClient::GetLoginState()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetLoginState");

	Params::PictureInPictureClient_GetLoginState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureClient.GetQRCodeTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2DDynamic*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2DDynamic* UPictureInPictureClient::GetQRCodeTexture()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("GetQRCodeTexture");

	Params::PictureInPictureClient_GetQRCodeTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureClient.IsLoggedIn
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPictureInPictureClient::IsLoggedIn()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("IsLoggedIn");

	Params::PictureInPictureClient_IsLoggedIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PictureInPictureCore.PictureInPictureClient.Logout
// (Native, Public, BlueprintCallable)

void UPictureInPictureClient::Logout()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("Logout");

	UObject::ProcessEvent(Func, nullptr);
}

}

