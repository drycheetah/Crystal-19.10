#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArgonUI

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct ArgonUI.ArgonLeaderboardData
// 0x0028 (0x0028 - 0x0000)
struct FArgonLeaderboardData final
{
public:
	int32                                         Placement;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Team;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TeamLeaderPlayerName;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TicketCount;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TicketsRequired;                                   // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasAllTickets;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasFinished;                                      // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FinishedTime;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FArgonLeaderboardData) == 0x000008, "Wrong alignment on FArgonLeaderboardData");
static_assert(sizeof(FArgonLeaderboardData) == 0x000028, "Wrong size on FArgonLeaderboardData");
static_assert(offsetof(FArgonLeaderboardData, Placement) == 0x000000, "Member 'FArgonLeaderboardData::Placement' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, Team) == 0x000004, "Member 'FArgonLeaderboardData::Team' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, TeamLeaderPlayerName) == 0x000008, "Member 'FArgonLeaderboardData::TeamLeaderPlayerName' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, TicketCount) == 0x000018, "Member 'FArgonLeaderboardData::TicketCount' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, TicketsRequired) == 0x00001C, "Member 'FArgonLeaderboardData::TicketsRequired' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, bHasAllTickets) == 0x000020, "Member 'FArgonLeaderboardData::bHasAllTickets' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, bHasFinished) == 0x000021, "Member 'FArgonLeaderboardData::bHasFinished' has a wrong offset!");
static_assert(offsetof(FArgonLeaderboardData, FinishedTime) == 0x000024, "Member 'FArgonLeaderboardData::FinishedTime' has a wrong offset!");

}

