#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS19_BattlePassRewardGridHeader

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "BattlePassBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPS19_BattlePassRewardGridHeader.BPS19_BattlePassRewardGridHeader_C
// 0x0098 (0x02E8 - 0x0250)
class UBPS19_BattlePassRewardGridHeader_C final : public UFortBattlePassRewardGridHeader
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       burst;                                             // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Locked;                                     // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_122;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Progress;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   PageNumberText;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   RichText_LockDescription;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonVisibilitySwitcher*              Switcher_PageState;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_BattlePass;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Text_Progress;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Unlocked;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Plural_Items;                                      // 0x02B0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Complete_text;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasCustomText;                                     // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardPageType                               Page_Type;                                         // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPS19_BattlePassRewardGridHeader(int32 EntryPoint);
	void OnPageLocked(const int32 RequiredLevel, const int32 RequiredRewards);
	void OnPageNumberSet(const int32 InPageNumber);
	void OnPageUnlocked(const int32 PurchasedRewards, const int32 TotalRewards);
	void OnSetPageCustomName(const class FText& CustomName);
	void OnSetPageType(const ERewardPageType PageType);
	void UpdateLockedHeaderText(const int32 RequiredLevel, const int32 RequiredRewards);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPS19_BattlePassRewardGridHeader_C">();
	}
	static class UBPS19_BattlePassRewardGridHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPS19_BattlePassRewardGridHeader_C>();
	}
};
static_assert(alignof(UBPS19_BattlePassRewardGridHeader_C) == 0x000008, "Wrong alignment on UBPS19_BattlePassRewardGridHeader_C");
static_assert(sizeof(UBPS19_BattlePassRewardGridHeader_C) == 0x0002E8, "Wrong size on UBPS19_BattlePassRewardGridHeader_C");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, UberGraphFrame) == 0x000250, "Member 'UBPS19_BattlePassRewardGridHeader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, burst) == 0x000258, "Member 'UBPS19_BattlePassRewardGridHeader_C::burst' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Border_Locked) == 0x000260, "Member 'UBPS19_BattlePassRewardGridHeader_C::Border_Locked' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Image) == 0x000268, "Member 'UBPS19_BattlePassRewardGridHeader_C::Image' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Image_122) == 0x000270, "Member 'UBPS19_BattlePassRewardGridHeader_C::Image_122' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Image_Progress) == 0x000278, "Member 'UBPS19_BattlePassRewardGridHeader_C::Image_Progress' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, PageNumberText) == 0x000280, "Member 'UBPS19_BattlePassRewardGridHeader_C::PageNumberText' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, RichText_LockDescription) == 0x000288, "Member 'UBPS19_BattlePassRewardGridHeader_C::RichText_LockDescription' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Switcher_PageState) == 0x000290, "Member 'UBPS19_BattlePassRewardGridHeader_C::Switcher_PageState' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Text_BattlePass) == 0x000298, "Member 'UBPS19_BattlePassRewardGridHeader_C::Text_BattlePass' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Text_Progress) == 0x0002A0, "Member 'UBPS19_BattlePassRewardGridHeader_C::Text_Progress' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, VerticalBox_Unlocked) == 0x0002A8, "Member 'UBPS19_BattlePassRewardGridHeader_C::VerticalBox_Unlocked' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Plural_Items) == 0x0002B0, "Member 'UBPS19_BattlePassRewardGridHeader_C::Plural_Items' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Complete_text) == 0x0002C8, "Member 'UBPS19_BattlePassRewardGridHeader_C::Complete_text' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, HasCustomText) == 0x0002E0, "Member 'UBPS19_BattlePassRewardGridHeader_C::HasCustomText' has a wrong offset!");
static_assert(offsetof(UBPS19_BattlePassRewardGridHeader_C, Page_Type) == 0x0002E1, "Member 'UBPS19_BattlePassRewardGridHeader_C::Page_Type' has a wrong offset!");

}

