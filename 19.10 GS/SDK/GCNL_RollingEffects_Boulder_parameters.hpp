#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_RollingEffects_Boulder

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GCNL_RollingEffects_Boulder.GCNL_RollingEffects_Boulder_C.ExecuteUbergraph_GCNL_RollingEffects_Boulder
// 0x01D8 (0x01D8 - 0x0000)
struct GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0010(0x00C0)(ConstParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              K2Node_Event_ParticleComponents;                   // 0x00D0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGA_Athena_Boulder_Prop_C*             K2Node_DynamicCast_AsBGA_Athena_Boulder_Prop;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0104(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMovingStateData_OutInstigator;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetMovingStateData_OutHitResult;          // 0x0130(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetMovingStateData_OutLinearSpeed;        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortPhysicsObjectMovementState               CallFunc_GetMovingStateData_OutMovementState;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder) == 0x000008, "Wrong alignment on GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder");
static_assert(sizeof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder) == 0x0001D8, "Wrong size on GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, EntryPoint) == 0x000000, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_Event_MyTarget) == 0x000008, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_Event_Parameters) == 0x000010, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_Event_ParticleComponents) == 0x0000D0, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_Event_AudioComponents) == 0x0000E0, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_DynamicCast_AsBGA_Athena_Boulder_Prop) == 0x0000F8, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_DynamicCast_AsBGA_Athena_Boulder_Prop' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_GetBounds_ReturnValue) == 0x000104, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_GetMovingStateData_OutInstigator) == 0x000128, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_GetMovingStateData_OutInstigator' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_GetMovingStateData_OutHitResult) == 0x000130, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_GetMovingStateData_OutHitResult' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_GetMovingStateData_OutLinearSpeed) == 0x0001CC, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_GetMovingStateData_OutLinearSpeed' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_GetMovingStateData_OutMovementState) == 0x0001D0, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_GetMovingStateData_OutMovementState' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D1, "Member 'GCNL_RollingEffects_Boulder_C_ExecuteUbergraph_GCNL_RollingEffects_Boulder::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GCNL_RollingEffects_Boulder.GCNL_RollingEffects_Boulder_C.OnLoopingStartNiagara
// 0x00E8 (0x00E8 - 0x0000)
struct GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00C0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              ParticleComponents;                                // 0x00C8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara) == 0x000008, "Wrong alignment on GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara");
static_assert(sizeof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara) == 0x0000E8, "Wrong size on GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara, MyTarget) == 0x000000, "Member 'GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara, Parameters) == 0x000008, "Member 'GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara, ParticleComponents) == 0x0000C8, "Member 'GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara, AudioComponents) == 0x0000D8, "Member 'GCNL_RollingEffects_Boulder_C_OnLoopingStartNiagara::AudioComponents' has a wrong offset!");

// Function GCNL_RollingEffects_Boulder.GCNL_RollingEffects_Boulder_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GCNL_RollingEffects_Boulder_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_RollingEffects_Boulder_C_ReceiveTick) == 0x000004, "Wrong alignment on GCNL_RollingEffects_Boulder_C_ReceiveTick");
static_assert(sizeof(GCNL_RollingEffects_Boulder_C_ReceiveTick) == 0x000004, "Wrong size on GCNL_RollingEffects_Boulder_C_ReceiveTick");
static_assert(offsetof(GCNL_RollingEffects_Boulder_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GCNL_RollingEffects_Boulder_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

