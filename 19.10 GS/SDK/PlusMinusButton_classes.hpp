#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlusMinusButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlusMinusButton.PlusMinusButton_C
// 0x0050 (0x0F00 - 0x0EB0)
class UPlusMinusButton_C final : public UCommonButtonBase
{
public:
	uint8                                         Pad_EA8[0x8];                                      // 0x0EA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0EB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0EB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundColor;                                   // 0x0EC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ButtonText;                                        // 0x0EC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ButtonPrompt;                              // 0x0ED0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   In_Text;                                           // 0x0ED8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Font_Size;                                         // 0x0EF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          isLeft;                                            // 0x0EF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsBottom;                                          // 0x0EF5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BP_OnHovered();
	void BP_OnUnhovered();
	void ExecuteUbergraph_PlusMinusButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlusMinusButton_C">();
	}
	static class UPlusMinusButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlusMinusButton_C>();
	}
};
static_assert(alignof(UPlusMinusButton_C) == 0x000010, "Wrong alignment on UPlusMinusButton_C");
static_assert(sizeof(UPlusMinusButton_C) == 0x000F00, "Wrong size on UPlusMinusButton_C");
static_assert(offsetof(UPlusMinusButton_C, UberGraphFrame) == 0x000EB0, "Member 'UPlusMinusButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, HoverAnim) == 0x000EB8, "Member 'UPlusMinusButton_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, BackgroundColor) == 0x000EC0, "Member 'UPlusMinusButton_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, ButtonText) == 0x000EC8, "Member 'UPlusMinusButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, Overlay_ButtonPrompt) == 0x000ED0, "Member 'UPlusMinusButton_C::Overlay_ButtonPrompt' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, In_Text) == 0x000ED8, "Member 'UPlusMinusButton_C::In_Text' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, Font_Size) == 0x000EF0, "Member 'UPlusMinusButton_C::Font_Size' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, isLeft) == 0x000EF4, "Member 'UPlusMinusButton_C::isLeft' has a wrong offset!");
static_assert(offsetof(UPlusMinusButton_C, IsBottom) == 0x000EF5, "Member 'UPlusMinusButton_C::IsBottom' has a wrong offset!");

}

