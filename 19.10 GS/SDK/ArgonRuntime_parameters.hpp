#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArgonRuntime

#include "Basic.hpp"

#include "ArgonRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ArgonRuntime.ArgonPlayerComponent.OnRacePhaseChanged
// 0x0001 (0x0001 - 0x0000)
struct ArgonPlayerComponent_OnRacePhaseChanged final
{
public:
	EArgonRacePhase                               NewRacePhase;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ArgonPlayerComponent_OnRacePhaseChanged) == 0x000001, "Wrong alignment on ArgonPlayerComponent_OnRacePhaseChanged");
static_assert(sizeof(ArgonPlayerComponent_OnRacePhaseChanged) == 0x000001, "Wrong size on ArgonPlayerComponent_OnRacePhaseChanged");
static_assert(offsetof(ArgonPlayerComponent_OnRacePhaseChanged, NewRacePhase) == 0x000000, "Member 'ArgonPlayerComponent_OnRacePhaseChanged::NewRacePhase' has a wrong offset!");

// Function ArgonRuntime.ArgonTicketComponent.GetArgonMutator
// 0x0008 (0x0008 - 0x0000)
struct ArgonTicketComponent_GetArgonMutator final
{
public:
	class AFortAthenaMutator_Argon*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ArgonTicketComponent_GetArgonMutator) == 0x000008, "Wrong alignment on ArgonTicketComponent_GetArgonMutator");
static_assert(sizeof(ArgonTicketComponent_GetArgonMutator) == 0x000008, "Wrong size on ArgonTicketComponent_GetArgonMutator");
static_assert(offsetof(ArgonTicketComponent_GetArgonMutator, ReturnValue) == 0x000000, "Member 'ArgonTicketComponent_GetArgonMutator::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.ArgonTicketComponent.IsNearToPlayer
// 0x0001 (0x0001 - 0x0000)
struct ArgonTicketComponent_IsNearToPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ArgonTicketComponent_IsNearToPlayer) == 0x000001, "Wrong alignment on ArgonTicketComponent_IsNearToPlayer");
static_assert(sizeof(ArgonTicketComponent_IsNearToPlayer) == 0x000001, "Wrong size on ArgonTicketComponent_IsNearToPlayer");
static_assert(offsetof(ArgonTicketComponent_IsNearToPlayer, ReturnValue) == 0x000000, "Member 'ArgonTicketComponent_IsNearToPlayer::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.ArgonTraversePoint.ClientSpawnMarkerActor
// 0x0030 (0x0030 - 0x0000)
struct ArgonTraversePoint_ClientSpawnMarkerActor final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ArgonTraversePoint_ClientSpawnMarkerActor) == 0x000010, "Wrong alignment on ArgonTraversePoint_ClientSpawnMarkerActor");
static_assert(sizeof(ArgonTraversePoint_ClientSpawnMarkerActor) == 0x000030, "Wrong size on ArgonTraversePoint_ClientSpawnMarkerActor");
static_assert(offsetof(ArgonTraversePoint_ClientSpawnMarkerActor, Transform) == 0x000000, "Member 'ArgonTraversePoint_ClientSpawnMarkerActor::Transform' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetProgressBarUIInfo
// 0x0030 (0x0030 - 0x0000)
struct FortAthenaMutator_Argon_GetProgressBarUIInfo final
{
public:
	float                                         OutMyPercent;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 OutSquadmatePcts;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         OutNumSquadTickets;                                // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FArgonTeamProgressBarInfo>      OutEnemyProgressInfos;                             // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetProgressBarUIInfo) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_GetProgressBarUIInfo");
static_assert(sizeof(FortAthenaMutator_Argon_GetProgressBarUIInfo) == 0x000030, "Wrong size on FortAthenaMutator_Argon_GetProgressBarUIInfo");
static_assert(offsetof(FortAthenaMutator_Argon_GetProgressBarUIInfo, OutMyPercent) == 0x000000, "Member 'FortAthenaMutator_Argon_GetProgressBarUIInfo::OutMyPercent' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_GetProgressBarUIInfo, OutSquadmatePcts) == 0x000008, "Member 'FortAthenaMutator_Argon_GetProgressBarUIInfo::OutSquadmatePcts' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_GetProgressBarUIInfo, OutNumSquadTickets) == 0x000018, "Member 'FortAthenaMutator_Argon_GetProgressBarUIInfo::OutNumSquadTickets' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_GetProgressBarUIInfo, OutEnemyProgressInfos) == 0x000020, "Member 'FortAthenaMutator_Argon_GetProgressBarUIInfo::OutEnemyProgressInfos' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.HandlePlayerTeleportComplete
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Argon_HandlePlayerTeleportComplete final
{
public:
	class AFortPlayerStateAthena*                 PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_HandlePlayerTeleportComplete) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_HandlePlayerTeleportComplete");
static_assert(sizeof(FortAthenaMutator_Argon_HandlePlayerTeleportComplete) == 0x000008, "Wrong size on FortAthenaMutator_Argon_HandlePlayerTeleportComplete");
static_assert(offsetof(FortAthenaMutator_Argon_HandlePlayerTeleportComplete, PlayerState) == 0x000000, "Member 'FortAthenaMutator_Argon_HandlePlayerTeleportComplete::PlayerState' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.OnEndTraversePointTouched
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Argon_OnEndTraversePointTouched final
{
public:
	class AAthenaTraversePoint*                   PointActor;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerStateAthena*                 TouchingPlayer;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_OnEndTraversePointTouched) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_OnEndTraversePointTouched");
static_assert(sizeof(FortAthenaMutator_Argon_OnEndTraversePointTouched) == 0x000010, "Wrong size on FortAthenaMutator_Argon_OnEndTraversePointTouched");
static_assert(offsetof(FortAthenaMutator_Argon_OnEndTraversePointTouched, PointActor) == 0x000000, "Member 'FortAthenaMutator_Argon_OnEndTraversePointTouched::PointActor' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_OnEndTraversePointTouched, TouchingPlayer) == 0x000008, "Member 'FortAthenaMutator_Argon_OnEndTraversePointTouched::TouchingPlayer' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.DidPlayerCrossFinishLine
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Argon_DidPlayerCrossFinishLine final
{
public:
	const class AFortPlayerStateAthena*           PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaMutator_Argon_DidPlayerCrossFinishLine) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_DidPlayerCrossFinishLine");
static_assert(sizeof(FortAthenaMutator_Argon_DidPlayerCrossFinishLine) == 0x000010, "Wrong size on FortAthenaMutator_Argon_DidPlayerCrossFinishLine");
static_assert(offsetof(FortAthenaMutator_Argon_DidPlayerCrossFinishLine, PlayerState) == 0x000000, "Member 'FortAthenaMutator_Argon_DidPlayerCrossFinishLine::PlayerState' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_DidPlayerCrossFinishLine, ReturnValue) == 0x000008, "Member 'FortAthenaMutator_Argon_DidPlayerCrossFinishLine::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.FindSpawnLocationInSafeZone
// 0x000C (0x000C - 0x0000)
struct FortAthenaMutator_Argon_FindSpawnLocationInSafeZone final
{
public:
	struct FVector                                InOutSpawnLocation;                                // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_FindSpawnLocationInSafeZone) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_FindSpawnLocationInSafeZone");
static_assert(sizeof(FortAthenaMutator_Argon_FindSpawnLocationInSafeZone) == 0x00000C, "Wrong size on FortAthenaMutator_Argon_FindSpawnLocationInSafeZone");
static_assert(offsetof(FortAthenaMutator_Argon_FindSpawnLocationInSafeZone, InOutSpawnLocation) == 0x000000, "Member 'FortAthenaMutator_Argon_FindSpawnLocationInSafeZone::InOutSpawnLocation' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetEndTraversePoint
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Argon_GetEndTraversePoint final
{
public:
	class AArgonTraversePoint*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetEndTraversePoint) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_GetEndTraversePoint");
static_assert(sizeof(FortAthenaMutator_Argon_GetEndTraversePoint) == 0x000008, "Wrong size on FortAthenaMutator_Argon_GetEndTraversePoint");
static_assert(offsetof(FortAthenaMutator_Argon_GetEndTraversePoint, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_GetEndTraversePoint::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetNumberOfTicketsNeededToFinishRace
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace");
static_assert(sizeof(FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace) == 0x000004, "Wrong size on FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace");
static_assert(offsetof(FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_GetNumberOfTicketsNeededToFinishRace::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetNumberOfTicketsTeamHasAcquired
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired");
static_assert(sizeof(FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired) == 0x000008, "Wrong size on FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired");
static_assert(offsetof(FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired, Team) == 0x000000, "Member 'FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired::Team' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired, ReturnValue) == 0x000004, "Member 'FortAthenaMutator_Argon_GetNumberOfTicketsTeamHasAcquired::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetPlayerTeamPlacement
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Argon_GetPlayerTeamPlacement final
{
public:
	class AFortPlayerStateAthena*                 Player;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaMutator_Argon_GetPlayerTeamPlacement) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_GetPlayerTeamPlacement");
static_assert(sizeof(FortAthenaMutator_Argon_GetPlayerTeamPlacement) == 0x000010, "Wrong size on FortAthenaMutator_Argon_GetPlayerTeamPlacement");
static_assert(offsetof(FortAthenaMutator_Argon_GetPlayerTeamPlacement, Player) == 0x000000, "Member 'FortAthenaMutator_Argon_GetPlayerTeamPlacement::Player' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_GetPlayerTeamPlacement, ReturnValue) == 0x000008, "Member 'FortAthenaMutator_Argon_GetPlayerTeamPlacement::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetRaceTimeElapsed
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Argon_GetRaceTimeElapsed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetRaceTimeElapsed) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_GetRaceTimeElapsed");
static_assert(sizeof(FortAthenaMutator_Argon_GetRaceTimeElapsed) == 0x000004, "Wrong size on FortAthenaMutator_Argon_GetRaceTimeElapsed");
static_assert(offsetof(FortAthenaMutator_Argon_GetRaceTimeElapsed, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_GetRaceTimeElapsed::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetRandomStartingLineEmotePlayRate
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate");
static_assert(sizeof(FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate) == 0x000004, "Wrong size on FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate");
static_assert(offsetof(FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_GetRandomStartingLineEmotePlayRate::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.GetTicketItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortAthenaMutator_Argon_GetTicketItemDefinition final
{
public:
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_GetTicketItemDefinition) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_GetTicketItemDefinition");
static_assert(sizeof(FortAthenaMutator_Argon_GetTicketItemDefinition) == 0x000008, "Wrong size on FortAthenaMutator_Argon_GetTicketItemDefinition");
static_assert(offsetof(FortAthenaMutator_Argon_GetTicketItemDefinition, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_GetTicketItemDefinition::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.HasPlayerFinishedRace
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Argon_HasPlayerFinishedRace final
{
public:
	const class AFortPlayerStateAthena*           PlayerState;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaMutator_Argon_HasPlayerFinishedRace) == 0x000008, "Wrong alignment on FortAthenaMutator_Argon_HasPlayerFinishedRace");
static_assert(sizeof(FortAthenaMutator_Argon_HasPlayerFinishedRace) == 0x000010, "Wrong size on FortAthenaMutator_Argon_HasPlayerFinishedRace");
static_assert(offsetof(FortAthenaMutator_Argon_HasPlayerFinishedRace, PlayerState) == 0x000000, "Member 'FortAthenaMutator_Argon_HasPlayerFinishedRace::PlayerState' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_HasPlayerFinishedRace, ReturnValue) == 0x000008, "Member 'FortAthenaMutator_Argon_HasPlayerFinishedRace::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.HasTeamFinishedRace
// 0x0002 (0x0002 - 0x0000)
struct FortAthenaMutator_Argon_HasTeamFinishedRace final
{
public:
	uint8                                         Team;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_HasTeamFinishedRace) == 0x000001, "Wrong alignment on FortAthenaMutator_Argon_HasTeamFinishedRace");
static_assert(sizeof(FortAthenaMutator_Argon_HasTeamFinishedRace) == 0x000002, "Wrong size on FortAthenaMutator_Argon_HasTeamFinishedRace");
static_assert(offsetof(FortAthenaMutator_Argon_HasTeamFinishedRace, Team) == 0x000000, "Member 'FortAthenaMutator_Argon_HasTeamFinishedRace::Team' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_HasTeamFinishedRace, ReturnValue) == 0x000001, "Member 'FortAthenaMutator_Argon_HasTeamFinishedRace::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.IsInSafeZone
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMutator_Argon_IsInSafeZone final
{
public:
	struct FVector                                TestLocation;                                      // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaMutator_Argon_IsInSafeZone) == 0x000004, "Wrong alignment on FortAthenaMutator_Argon_IsInSafeZone");
static_assert(sizeof(FortAthenaMutator_Argon_IsInSafeZone) == 0x000010, "Wrong size on FortAthenaMutator_Argon_IsInSafeZone");
static_assert(offsetof(FortAthenaMutator_Argon_IsInSafeZone, TestLocation) == 0x000000, "Member 'FortAthenaMutator_Argon_IsInSafeZone::TestLocation' has a wrong offset!");
static_assert(offsetof(FortAthenaMutator_Argon_IsInSafeZone, ReturnValue) == 0x00000C, "Member 'FortAthenaMutator_Argon_IsInSafeZone::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.IsUsingRespawnAndSpectateSelectMutator
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator) == 0x000001, "Wrong alignment on FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator");
static_assert(sizeof(FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator) == 0x000001, "Wrong size on FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator");
static_assert(offsetof(FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_IsUsingRespawnAndSpectateSelectMutator::ReturnValue' has a wrong offset!");

// Function ArgonRuntime.FortAthenaMutator_Argon.ShouldShowNearbyTicketIndicators
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators) == 0x000001, "Wrong alignment on FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators");
static_assert(sizeof(FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators) == 0x000001, "Wrong size on FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators");
static_assert(offsetof(FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators, ReturnValue) == 0x000000, "Member 'FortAthenaMutator_Argon_ShouldShowNearbyTicketIndicators::ReturnValue' has a wrong offset!");

}

