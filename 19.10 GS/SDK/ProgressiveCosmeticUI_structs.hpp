#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveCosmeticUI

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct ProgressiveCosmeticUI.FortProgressiveVariant
// 0x0058 (0x0058 - 0x0000)
struct FFortProgressiveVariant final
{
public:
	TSoftObjectPtr<class UObject>                 TileMaterial;                                      // 0x0000(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidden;                                           // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFortVariantTokenType>   VariantToken;                                      // 0x0030(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FFortProgressiveVariant) == 0x000008, "Wrong alignment on FFortProgressiveVariant");
static_assert(sizeof(FFortProgressiveVariant) == 0x000058, "Wrong size on FFortProgressiveVariant");
static_assert(offsetof(FFortProgressiveVariant, TileMaterial) == 0x000000, "Member 'FFortProgressiveVariant::TileMaterial' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, bHidden) == 0x000028, "Member 'FFortProgressiveVariant::bHidden' has a wrong offset!");
static_assert(offsetof(FFortProgressiveVariant, VariantToken) == 0x000030, "Member 'FFortProgressiveVariant::VariantToken' has a wrong offset!");

// ScriptStruct ProgressiveCosmeticUI.FortProgressiveUIStage
// 0x0010 (0x0010 - 0x0000)
struct FFortProgressiveUIStage final
{
public:
	TArray<struct FFortProgressiveVariant>        Variants;                                          // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFortProgressiveUIStage) == 0x000008, "Wrong alignment on FFortProgressiveUIStage");
static_assert(sizeof(FFortProgressiveUIStage) == 0x000010, "Wrong size on FFortProgressiveUIStage");
static_assert(offsetof(FFortProgressiveUIStage, Variants) == 0x000000, "Member 'FFortProgressiveUIStage::Variants' has a wrong offset!");

}

