#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RebirthUI

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// Class RebirthUI.RebirthLimitedLivesWidgetBase
// 0x0018 (0x0320 - 0x0308)
class URebirthLimitedLivesWidgetBase final : public ULTMWidgetBase
{
public:
	TWeakObjectPtr<class AFortAthenaMutator_Rebirth> RebirthMutator;                                    // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerStateAthena>  ViewedPlayerState;                                 // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EFortRarity                                   CurrentRarity;                                     // 0x0318(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentLivesRemaining;                             // 0x031C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HandleLastLife();
	void HandlePawnChanged();
	void HandlePlayerRaritiesUpdated();
	void UpdateWidgetRarity(bool bPlayAnimations);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RebirthLimitedLivesWidgetBase">();
	}
	static class URebirthLimitedLivesWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<URebirthLimitedLivesWidgetBase>();
	}
};
static_assert(alignof(URebirthLimitedLivesWidgetBase) == 0x000008, "Wrong alignment on URebirthLimitedLivesWidgetBase");
static_assert(sizeof(URebirthLimitedLivesWidgetBase) == 0x000320, "Wrong size on URebirthLimitedLivesWidgetBase");
static_assert(offsetof(URebirthLimitedLivesWidgetBase, RebirthMutator) == 0x000308, "Member 'URebirthLimitedLivesWidgetBase::RebirthMutator' has a wrong offset!");
static_assert(offsetof(URebirthLimitedLivesWidgetBase, ViewedPlayerState) == 0x000310, "Member 'URebirthLimitedLivesWidgetBase::ViewedPlayerState' has a wrong offset!");
static_assert(offsetof(URebirthLimitedLivesWidgetBase, CurrentRarity) == 0x000318, "Member 'URebirthLimitedLivesWidgetBase::CurrentRarity' has a wrong offset!");
static_assert(offsetof(URebirthLimitedLivesWidgetBase, CurrentLivesRemaining) == 0x00031C, "Member 'URebirthLimitedLivesWidgetBase::CurrentLivesRemaining' has a wrong offset!");

}

