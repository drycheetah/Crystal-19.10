#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Athena_Galileo_Lobster_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "B_Melee_Generic_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Athena_Galileo_Lobster_Parent.B_Athena_Galileo_Lobster_Parent_C
// 0x0138 (0x1708 - 0x15D0)
class AB_Athena_Galileo_Lobster_Parent_C final : public AB_Melee_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Athena_Galileo_Lobster_Parent_C;  // 0x15D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Galileo_Lobster_BlockBreakWarning;               // 0x15D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_; // 0x15E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Galileo_Lobster_Blade;                          // 0x15E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        IdleAudio;                                         // 0x15F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x15F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F; // 0x1600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F; // 0x1604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1605[0x3];                                     // 0x1605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x1608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BladeVisibility;                                   // 0x1610(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1611[0x7];                                     // 0x1611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerCharacter;                                   // 0x1618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ImpactDecal;                                       // 0x1620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactTipLocation;                                 // 0x1628(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlashImpactColor;                                  // 0x1634(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               MeleeImpact;                                       // 0x1640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OpenSound;                                         // 0x1648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CloseSound;                                        // 0x1650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeHueColorShift;                                // 0x1658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeRedBlueSwitch;                                // 0x165C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BladeEmissiveIntensity;                            // 0x1660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlockingImpactColor;                               // 0x1664(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSkeletalAudioComponent*            SkeletalAudioComponent;                            // 0x1670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_MeleeAttackAbility;                              // 0x1678(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_HudElementToHide;                                // 0x1698(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           Timer_ShowReticleStatus;                           // 0x16B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           BlockBreakWarningLensFX;                           // 0x16C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPoise;                                      // 0x16C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16CC[0x4];                                     // 0x16CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_BlockBreakWarning;                           // 0x16D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_ActionsThatHideBlade;                           // 0x16D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TScriptInterface<class ICameraLensEffectInterface> LensEffectInterface_BlockBreakWarning;             // 0x16F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void BlockBreak();
	void CreateSkeletalAudioComp(class UFortSkeletalAudioComponent** Component);
	void CurrentPoiseChanged(float CurrentPoise_0);
	void DeactivateBlockBreakWarning();
	void DoBulletBlockEffect(const struct FVector& ImpactLocation);
	void ExecuteUbergraph_B_Athena_Galileo_Lobster_Parent(int32 EntryPoint);
	void Holstered();
	void K2_OnUnEquip();
	void OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UFXSystemComponent* SpawnedPSC);
	void OnRep_BladeVisibility();
	void OnWeaponAttached();
	void OnWeaponVisibilityChanged(bool bVisible, bool bSetForLocalControllerOnly);
	void ReceiveBeginPlay();
	void ReticleStatusDisplay(bool Hide);
	void RPCUnequip();
	void SetBladeVisibility(bool Visible);
	void ShowReticleStatusDisplay();
	void StartIdleFX();
	void Timeline_1__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void ToggleDodgePrompt(bool Visible);
	void ToggleDynamicAudio(bool CanPlayIdleAudio);
	void TurnOnLobster();
	void Unholstered();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Athena_Galileo_Lobster_Parent_C">();
	}
	static class AB_Athena_Galileo_Lobster_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Athena_Galileo_Lobster_Parent_C>();
	}
};
static_assert(alignof(AB_Athena_Galileo_Lobster_Parent_C) == 0x000008, "Wrong alignment on AB_Athena_Galileo_Lobster_Parent_C");
static_assert(sizeof(AB_Athena_Galileo_Lobster_Parent_C) == 0x001708, "Wrong size on AB_Athena_Galileo_Lobster_Parent_C");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, UberGraphFrame_B_Athena_Galileo_Lobster_Parent_C) == 0x0015D0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::UberGraphFrame_B_Athena_Galileo_Lobster_Parent_C' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, P_Galileo_Lobster_BlockBreakWarning) == 0x0015D8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::P_Galileo_Lobster_BlockBreakWarning' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_) == 0x0015E0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SM_Galileo_Lobster_Blade_Masked_VisibleUnderwater_' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SM_Galileo_Lobster_Blade) == 0x0015E8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SM_Galileo_Lobster_Blade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, IdleAudio) == 0x0015F0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::IdleAudio' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Scene) == 0x0015F8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F) == 0x001600, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1_Activation_A485AC534A744AA4695BBF8F84A8850F' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F) == 0x001604, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1__Direction_A485AC534A744AA4695BBF8F84A8850F' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timeline_1) == 0x001608, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeVisibility) == 0x001610, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeVisibility' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, PlayerCharacter) == 0x001618, "Member 'AB_Athena_Galileo_Lobster_Parent_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, ImpactDecal) == 0x001620, "Member 'AB_Athena_Galileo_Lobster_Parent_C::ImpactDecal' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, ImpactTipLocation) == 0x001628, "Member 'AB_Athena_Galileo_Lobster_Parent_C::ImpactTipLocation' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SlashImpactColor) == 0x001634, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SlashImpactColor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, MeleeImpact) == 0x001640, "Member 'AB_Athena_Galileo_Lobster_Parent_C::MeleeImpact' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, OpenSound) == 0x001648, "Member 'AB_Athena_Galileo_Lobster_Parent_C::OpenSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, CloseSound) == 0x001650, "Member 'AB_Athena_Galileo_Lobster_Parent_C::CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeHueColorShift) == 0x001658, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeHueColorShift' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeRedBlueSwitch) == 0x00165C, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeRedBlueSwitch' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BladeEmissiveIntensity) == 0x001660, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BladeEmissiveIntensity' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BlockingImpactColor) == 0x001664, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BlockingImpactColor' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, SkeletalAudioComponent) == 0x001670, "Member 'AB_Athena_Galileo_Lobster_Parent_C::SkeletalAudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, T_MeleeAttackAbility) == 0x001678, "Member 'AB_Athena_Galileo_Lobster_Parent_C::T_MeleeAttackAbility' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, T_HudElementToHide) == 0x001698, "Member 'AB_Athena_Galileo_Lobster_Parent_C::T_HudElementToHide' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timer_ShowReticleStatus) == 0x0016B8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timer_ShowReticleStatus' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, BlockBreakWarningLensFX) == 0x0016C0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::BlockBreakWarningLensFX' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, CurrentPoise) == 0x0016C8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::CurrentPoise' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, Timer_BlockBreakWarning) == 0x0016D0, "Member 'AB_Athena_Galileo_Lobster_Parent_C::Timer_BlockBreakWarning' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, TC_ActionsThatHideBlade) == 0x0016D8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::TC_ActionsThatHideBlade' has a wrong offset!");
static_assert(offsetof(AB_Athena_Galileo_Lobster_Parent_C, LensEffectInterface_BlockBreakWarning) == 0x0016F8, "Member 'AB_Athena_Galileo_Lobster_Parent_C::LensEffectInterface_BlockBreakWarning' has a wrong offset!");

}

