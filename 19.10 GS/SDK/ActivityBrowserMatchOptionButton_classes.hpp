#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserMatchOptionButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "FortTextButton_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserMatchOptionButton.ActivityBrowserMatchOptionButton_C
// 0x00C0 (0x1050 - 0x0F90)
class UActivityBrowserMatchOptionButton_C final : public UFortTextButton_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0F98(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0FA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                ButtonMaterialBorder;                              // 0x0FA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ContentHB;                                         // 0x0FB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                DynamicPaddingBorder;                              // 0x0FB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MinSizesSB;                                        // 0x0FC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_Label;                                        // 0x0FC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonLabel;                                       // 0x0FD0(0x0018)(Edit, BlueprintVisible)
	float                                         TextShearX;                                        // 0x0FE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextShearY;                                        // 0x0FEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                TextPadding;                                       // 0x0FF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDisabled;                                        // 0x1000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1001[0x7];                                     // 0x1001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ButtonMaterial;                                    // 0x1008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonSharpnessX;                                  // 0x1010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonSharpnessY;                                  // 0x1014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseBoxScalingX;                                    // 0x1018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseBoxScalingY;                                    // 0x101C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonBoxScaleSizeX;                               // 0x1020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonBoxScaleSizeY;                               // 0x1024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DisabledParamName;                                 // 0x1028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SharpnessVParamName;                               // 0x1030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SharpnessUParamName;                               // 0x1038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseBoxScaleUParamName;                             // 0x1040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   UseBoxScaleVParamName;                             // 0x1048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnClicked();
	void BP_OnDeselected();
	void BP_OnDisabled();
	void BP_OnEnabled();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_ActivityBrowserMatchOptionButton(int32 EntryPoint);
	void Finished_F1DA84B649D830CB5B9AD6B478C16EC5();
	void PreConstruct(bool IsDesignTime);
	void SetButtonMaterial();
	void SetFontMaterial();
	void SetPublicState(bool IsPublic);
	void SetText(const class FText& Text);
	void SetTextStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserMatchOptionButton_C">();
	}
	static class UActivityBrowserMatchOptionButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserMatchOptionButton_C>();
	}
};
static_assert(alignof(UActivityBrowserMatchOptionButton_C) == 0x000010, "Wrong alignment on UActivityBrowserMatchOptionButton_C");
static_assert(sizeof(UActivityBrowserMatchOptionButton_C) == 0x001050, "Wrong size on UActivityBrowserMatchOptionButton_C");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, UberGraphFrame) == 0x000F90, "Member 'UActivityBrowserMatchOptionButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, Pressed) == 0x000F98, "Member 'UActivityBrowserMatchOptionButton_C::Pressed' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, Hover) == 0x000FA0, "Member 'UActivityBrowserMatchOptionButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonMaterialBorder) == 0x000FA8, "Member 'UActivityBrowserMatchOptionButton_C::ButtonMaterialBorder' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ContentHB) == 0x000FB0, "Member 'UActivityBrowserMatchOptionButton_C::ContentHB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, DynamicPaddingBorder) == 0x000FB8, "Member 'UActivityBrowserMatchOptionButton_C::DynamicPaddingBorder' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, MinSizesSB) == 0x000FC0, "Member 'UActivityBrowserMatchOptionButton_C::MinSizesSB' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, Text_Label) == 0x000FC8, "Member 'UActivityBrowserMatchOptionButton_C::Text_Label' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonLabel) == 0x000FD0, "Member 'UActivityBrowserMatchOptionButton_C::ButtonLabel' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, TextShearX) == 0x000FE8, "Member 'UActivityBrowserMatchOptionButton_C::TextShearX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, TextShearY) == 0x000FEC, "Member 'UActivityBrowserMatchOptionButton_C::TextShearY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, TextPadding) == 0x000FF0, "Member 'UActivityBrowserMatchOptionButton_C::TextPadding' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, IsDisabled) == 0x001000, "Member 'UActivityBrowserMatchOptionButton_C::IsDisabled' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonMaterial) == 0x001008, "Member 'UActivityBrowserMatchOptionButton_C::ButtonMaterial' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonSharpnessX) == 0x001010, "Member 'UActivityBrowserMatchOptionButton_C::ButtonSharpnessX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonSharpnessY) == 0x001014, "Member 'UActivityBrowserMatchOptionButton_C::ButtonSharpnessY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, UseBoxScalingX) == 0x001018, "Member 'UActivityBrowserMatchOptionButton_C::UseBoxScalingX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, UseBoxScalingY) == 0x00101C, "Member 'UActivityBrowserMatchOptionButton_C::UseBoxScalingY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonBoxScaleSizeX) == 0x001020, "Member 'UActivityBrowserMatchOptionButton_C::ButtonBoxScaleSizeX' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, ButtonBoxScaleSizeY) == 0x001024, "Member 'UActivityBrowserMatchOptionButton_C::ButtonBoxScaleSizeY' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, DisabledParamName) == 0x001028, "Member 'UActivityBrowserMatchOptionButton_C::DisabledParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, SharpnessVParamName) == 0x001030, "Member 'UActivityBrowserMatchOptionButton_C::SharpnessVParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, SharpnessUParamName) == 0x001038, "Member 'UActivityBrowserMatchOptionButton_C::SharpnessUParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, UseBoxScaleUParamName) == 0x001040, "Member 'UActivityBrowserMatchOptionButton_C::UseBoxScaleUParamName' has a wrong offset!");
static_assert(offsetof(UActivityBrowserMatchOptionButton_C, UseBoxScaleVParamName) == 0x001048, "Member 'UActivityBrowserMatchOptionButton_C::UseBoxScaleVParamName' has a wrong offset!");

}

