#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_RollingEffects_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_RollingEffects_Parent.GCNL_RollingEffects_Parent_C
// 0x0028 (0x08E8 - 0x08C0)
class AGCNL_RollingEffects_Parent_C : public AFortGameplayCueNotifyLoop_PhysicsObjectRolling
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USoundBase*                             SoundAssetDefault;                                 // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundAssetSmall;                                   // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundAssetMedium;                                  // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundAssetLarge;                                   // 0x08E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_RollingEffects_Parent(int32 EntryPoint);
	void GetObjectSizeParam(class AActor* PhysicsObject_0, int32* Size);
	void GetSoundAsset(class AActor* PhysicsObject_0, class USoundBase** Asset);
	void OnApplicationGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_RollingEffects_Parent_C">();
	}
	static class AGCNL_RollingEffects_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_RollingEffects_Parent_C>();
	}
};
static_assert(alignof(AGCNL_RollingEffects_Parent_C) == 0x000008, "Wrong alignment on AGCNL_RollingEffects_Parent_C");
static_assert(sizeof(AGCNL_RollingEffects_Parent_C) == 0x0008E8, "Wrong size on AGCNL_RollingEffects_Parent_C");
static_assert(offsetof(AGCNL_RollingEffects_Parent_C, UberGraphFrame) == 0x0008C0, "Member 'AGCNL_RollingEffects_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_RollingEffects_Parent_C, SoundAssetDefault) == 0x0008C8, "Member 'AGCNL_RollingEffects_Parent_C::SoundAssetDefault' has a wrong offset!");
static_assert(offsetof(AGCNL_RollingEffects_Parent_C, SoundAssetSmall) == 0x0008D0, "Member 'AGCNL_RollingEffects_Parent_C::SoundAssetSmall' has a wrong offset!");
static_assert(offsetof(AGCNL_RollingEffects_Parent_C, SoundAssetMedium) == 0x0008D8, "Member 'AGCNL_RollingEffects_Parent_C::SoundAssetMedium' has a wrong offset!");
static_assert(offsetof(AGCNL_RollingEffects_Parent_C, SoundAssetLarge) == 0x0008E0, "Member 'AGCNL_RollingEffects_Parent_C::SoundAssetLarge' has a wrong offset!");

}

