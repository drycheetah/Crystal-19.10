#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HermesPlaysetsUI

#include "Basic.hpp"

#include "HermesPlaysetsUI_structs.hpp"


namespace SDK::Params
{

// Function HermesPlaysetsUI.DownloadEntryScreen.HandleDownloadLinkCodeChanged
// 0x0018 (0x0018 - 0x0000)
struct DownloadEntryScreen_HandleDownloadLinkCodeChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadEntryScreen_HandleDownloadLinkCodeChanged) == 0x000008, "Wrong alignment on DownloadEntryScreen_HandleDownloadLinkCodeChanged");
static_assert(sizeof(DownloadEntryScreen_HandleDownloadLinkCodeChanged) == 0x000018, "Wrong size on DownloadEntryScreen_HandleDownloadLinkCodeChanged");
static_assert(offsetof(DownloadEntryScreen_HandleDownloadLinkCodeChanged, Text) == 0x000000, "Member 'DownloadEntryScreen_HandleDownloadLinkCodeChanged::Text' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.CanAddProject
// 0x0001 (0x0001 - 0x0000)
struct DownloadOnDemandDirector_CanAddProject final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_CanAddProject) == 0x000001, "Wrong alignment on DownloadOnDemandDirector_CanAddProject");
static_assert(sizeof(DownloadOnDemandDirector_CanAddProject) == 0x000001, "Wrong size on DownloadOnDemandDirector_CanAddProject");
static_assert(offsetof(DownloadOnDemandDirector_CanAddProject, ReturnValue) == 0x000000, "Member 'DownloadOnDemandDirector_CanAddProject::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.CanRemoveProject
// 0x0001 (0x0001 - 0x0000)
struct DownloadOnDemandDirector_CanRemoveProject final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_CanRemoveProject) == 0x000001, "Wrong alignment on DownloadOnDemandDirector_CanRemoveProject");
static_assert(sizeof(DownloadOnDemandDirector_CanRemoveProject) == 0x000001, "Wrong size on DownloadOnDemandDirector_CanRemoveProject");
static_assert(offsetof(DownloadOnDemandDirector_CanRemoveProject, ReturnValue) == 0x000000, "Member 'DownloadOnDemandDirector_CanRemoveProject::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.HandlePlaysetDownloadedSuccess
// 0x0001 (0x0001 - 0x0000)
struct DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess) == 0x000001, "Wrong alignment on DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess");
static_assert(sizeof(DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess) == 0x000001, "Wrong size on DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess");
static_assert(offsetof(DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess, bSuccess) == 0x000000, "Member 'DownloadOnDemandDirector_HandlePlaysetDownloadedSuccess::bSuccess' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.HermesPlaysetDownloadedOnServer
// 0x0028 (0x0028 - 0x0000)
struct DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer final
{
public:
	class FString                                 InLinkCode;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorMessage;                                      // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer");
static_assert(sizeof(DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer) == 0x000028, "Wrong size on DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer, InLinkCode) == 0x000000, "Member 'DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer::InLinkCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer, bSuccess) == 0x000010, "Member 'DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer::bSuccess' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer, ErrorMessage) == 0x000018, "Member 'DownloadOnDemandDirector_HermesPlaysetDownloadedOnServer::ErrorMessage' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.HermesPlaysetLinkCodeResolved
// 0x0028 (0x0028 - 0x0000)
struct DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved final
{
public:
	class FString                                 InLinkCode;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InProjectId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved");
static_assert(sizeof(DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved) == 0x000028, "Wrong size on DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved, InLinkCode) == 0x000000, "Member 'DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved::InLinkCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved, InProjectId) == 0x000010, "Member 'DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved::InProjectId' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved, bSuccess) == 0x000020, "Member 'DownloadOnDemandDirector_HermesPlaysetLinkCodeResolved::bSuccess' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.IsUsingDynamicHUDForUI
// 0x0001 (0x0001 - 0x0000)
struct DownloadOnDemandDirector_IsUsingDynamicHUDForUI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_IsUsingDynamicHUDForUI) == 0x000001, "Wrong alignment on DownloadOnDemandDirector_IsUsingDynamicHUDForUI");
static_assert(sizeof(DownloadOnDemandDirector_IsUsingDynamicHUDForUI) == 0x000001, "Wrong size on DownloadOnDemandDirector_IsUsingDynamicHUDForUI");
static_assert(offsetof(DownloadOnDemandDirector_IsUsingDynamicHUDForUI, ReturnValue) == 0x000000, "Member 'DownloadOnDemandDirector_IsUsingDynamicHUDForUI::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.LinkCodeMetaDataLoaded
// 0x0030 (0x0030 - 0x0000)
struct DownloadOnDemandDirector_LinkCodeMetaDataLoaded final
{
public:
	class FString                                 InLinkCode;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InProjectId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InTitleString;                                     // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_LinkCodeMetaDataLoaded) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_LinkCodeMetaDataLoaded");
static_assert(sizeof(DownloadOnDemandDirector_LinkCodeMetaDataLoaded) == 0x000030, "Wrong size on DownloadOnDemandDirector_LinkCodeMetaDataLoaded");
static_assert(offsetof(DownloadOnDemandDirector_LinkCodeMetaDataLoaded, InLinkCode) == 0x000000, "Member 'DownloadOnDemandDirector_LinkCodeMetaDataLoaded::InLinkCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_LinkCodeMetaDataLoaded, InProjectId) == 0x000010, "Member 'DownloadOnDemandDirector_LinkCodeMetaDataLoaded::InProjectId' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_LinkCodeMetaDataLoaded, InTitleString) == 0x000020, "Member 'DownloadOnDemandDirector_LinkCodeMetaDataLoaded::InTitleString' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.LinkCodeMetaDataPreviewTextureLoaded
// 0x0008 (0x0008 - 0x0000)
struct DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded final
{
public:
	class UTexture2DDynamic*                      InPreviewTexture;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded");
static_assert(sizeof(DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded) == 0x000008, "Wrong size on DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded");
static_assert(offsetof(DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded, InPreviewTexture) == 0x000000, "Member 'DownloadOnDemandDirector_LinkCodeMetaDataPreviewTextureLoaded::InPreviewTexture' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.LoadLinkCodeMetaData
// 0x0028 (0x0028 - 0x0000)
struct DownloadOnDemandDirector_LoadLinkCodeMetaData final
{
public:
	class FString                                 InLinkMnemonic;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InLinkVersion;                                     // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerAthena*            InFortPlayerControllerAthena;                      // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DownloadOnDemandDirector_LoadLinkCodeMetaData) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_LoadLinkCodeMetaData");
static_assert(sizeof(DownloadOnDemandDirector_LoadLinkCodeMetaData) == 0x000028, "Wrong size on DownloadOnDemandDirector_LoadLinkCodeMetaData");
static_assert(offsetof(DownloadOnDemandDirector_LoadLinkCodeMetaData, InLinkMnemonic) == 0x000000, "Member 'DownloadOnDemandDirector_LoadLinkCodeMetaData::InLinkMnemonic' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_LoadLinkCodeMetaData, InLinkVersion) == 0x000010, "Member 'DownloadOnDemandDirector_LoadLinkCodeMetaData::InLinkVersion' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_LoadLinkCodeMetaData, InFortPlayerControllerAthena) == 0x000018, "Member 'DownloadOnDemandDirector_LoadLinkCodeMetaData::InFortPlayerControllerAthena' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_LoadLinkCodeMetaData, ReturnValue) == 0x000020, "Member 'DownloadOnDemandDirector_LoadLinkCodeMetaData::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.OnLinkPreviewImageDownloaded
// 0x0010 (0x0010 - 0x0000)
struct DownloadOnDemandDirector_OnLinkPreviewImageDownloaded final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2DDynamic*                      InPreviewTexture;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_OnLinkPreviewImageDownloaded) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_OnLinkPreviewImageDownloaded");
static_assert(sizeof(DownloadOnDemandDirector_OnLinkPreviewImageDownloaded) == 0x000010, "Wrong size on DownloadOnDemandDirector_OnLinkPreviewImageDownloaded");
static_assert(offsetof(DownloadOnDemandDirector_OnLinkPreviewImageDownloaded, bSuccess) == 0x000000, "Member 'DownloadOnDemandDirector_OnLinkPreviewImageDownloaded::bSuccess' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_OnLinkPreviewImageDownloaded, InPreviewTexture) == 0x000008, "Member 'DownloadOnDemandDirector_OnLinkPreviewImageDownloaded::InPreviewTexture' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.OnNewLinkCodeChanged
// 0x0010 (0x0010 - 0x0000)
struct DownloadOnDemandDirector_OnNewLinkCodeChanged final
{
public:
	TArray<class FString>                         UpdatedLinkCodes;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_OnNewLinkCodeChanged) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_OnNewLinkCodeChanged");
static_assert(sizeof(DownloadOnDemandDirector_OnNewLinkCodeChanged) == 0x000010, "Wrong size on DownloadOnDemandDirector_OnNewLinkCodeChanged");
static_assert(offsetof(DownloadOnDemandDirector_OnNewLinkCodeChanged, UpdatedLinkCodes) == 0x000000, "Member 'DownloadOnDemandDirector_OnNewLinkCodeChanged::UpdatedLinkCodes' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.RequestLinkCodePreviewFromCode
// 0x0020 (0x0020 - 0x0000)
struct DownloadOnDemandDirector_RequestLinkCodePreviewFromCode final
{
public:
	class FString                                 InCode;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerControllerAthena*            InFortPlayerControllerAthena;                      // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DownloadOnDemandDirector_RequestLinkCodePreviewFromCode) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_RequestLinkCodePreviewFromCode");
static_assert(sizeof(DownloadOnDemandDirector_RequestLinkCodePreviewFromCode) == 0x000020, "Wrong size on DownloadOnDemandDirector_RequestLinkCodePreviewFromCode");
static_assert(offsetof(DownloadOnDemandDirector_RequestLinkCodePreviewFromCode, InCode) == 0x000000, "Member 'DownloadOnDemandDirector_RequestLinkCodePreviewFromCode::InCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestLinkCodePreviewFromCode, InFortPlayerControllerAthena) == 0x000010, "Member 'DownloadOnDemandDirector_RequestLinkCodePreviewFromCode::InFortPlayerControllerAthena' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestLinkCodePreviewFromCode, ReturnValue) == 0x000018, "Member 'DownloadOnDemandDirector_RequestLinkCodePreviewFromCode::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.RequestPlaysetFromCode
// 0x0040 (0x0040 - 0x0000)
struct DownloadOnDemandDirector_RequestPlaysetFromCode final
{
public:
	class FString                                 InCode;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InProjectId;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InTitleName;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerControllerAthena*            InFortPlayerControllerAthena;                      // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DownloadOnDemandDirector_RequestPlaysetFromCode) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_RequestPlaysetFromCode");
static_assert(sizeof(DownloadOnDemandDirector_RequestPlaysetFromCode) == 0x000040, "Wrong size on DownloadOnDemandDirector_RequestPlaysetFromCode");
static_assert(offsetof(DownloadOnDemandDirector_RequestPlaysetFromCode, InCode) == 0x000000, "Member 'DownloadOnDemandDirector_RequestPlaysetFromCode::InCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestPlaysetFromCode, InProjectId) == 0x000010, "Member 'DownloadOnDemandDirector_RequestPlaysetFromCode::InProjectId' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestPlaysetFromCode, InTitleName) == 0x000020, "Member 'DownloadOnDemandDirector_RequestPlaysetFromCode::InTitleName' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestPlaysetFromCode, InFortPlayerControllerAthena) == 0x000030, "Member 'DownloadOnDemandDirector_RequestPlaysetFromCode::InFortPlayerControllerAthena' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_RequestPlaysetFromCode, ReturnValue) == 0x000038, "Member 'DownloadOnDemandDirector_RequestPlaysetFromCode::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.ShowDownloadOnDemandError
// 0x0028 (0x0028 - 0x0000)
struct DownloadOnDemandDirector_ShowDownloadOnDemandError final
{
public:
	EDownloadOnDemandErrorMessage                 DownloadOnDemandErrorMessage;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InLinkCode;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ErrorMessage;                                      // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_ShowDownloadOnDemandError) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_ShowDownloadOnDemandError");
static_assert(sizeof(DownloadOnDemandDirector_ShowDownloadOnDemandError) == 0x000028, "Wrong size on DownloadOnDemandDirector_ShowDownloadOnDemandError");
static_assert(offsetof(DownloadOnDemandDirector_ShowDownloadOnDemandError, DownloadOnDemandErrorMessage) == 0x000000, "Member 'DownloadOnDemandDirector_ShowDownloadOnDemandError::DownloadOnDemandErrorMessage' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_ShowDownloadOnDemandError, InLinkCode) == 0x000008, "Member 'DownloadOnDemandDirector_ShowDownloadOnDemandError::InLinkCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_ShowDownloadOnDemandError, ErrorMessage) == 0x000018, "Member 'DownloadOnDemandDirector_ShowDownloadOnDemandError::ErrorMessage' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.ShowDownloadOnDemandModal
// 0x0010 (0x0010 - 0x0000)
struct DownloadOnDemandDirector_ShowDownloadOnDemandModal final
{
public:
	class UCommonActivatableWidget*               ParentWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidget*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_ShowDownloadOnDemandModal) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_ShowDownloadOnDemandModal");
static_assert(sizeof(DownloadOnDemandDirector_ShowDownloadOnDemandModal) == 0x000010, "Wrong size on DownloadOnDemandDirector_ShowDownloadOnDemandModal");
static_assert(offsetof(DownloadOnDemandDirector_ShowDownloadOnDemandModal, ParentWidget) == 0x000000, "Member 'DownloadOnDemandDirector_ShowDownloadOnDemandModal::ParentWidget' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_ShowDownloadOnDemandModal, ReturnValue) == 0x000008, "Member 'DownloadOnDemandDirector_ShowDownloadOnDemandModal::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.ShowErrorMessageModal
// 0x0010 (0x0010 - 0x0000)
struct DownloadOnDemandDirector_ShowErrorMessageModal final
{
public:
	class UCommonActivatableWidget*               ParentWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidget*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DownloadOnDemandDirector_ShowErrorMessageModal) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_ShowErrorMessageModal");
static_assert(sizeof(DownloadOnDemandDirector_ShowErrorMessageModal) == 0x000010, "Wrong size on DownloadOnDemandDirector_ShowErrorMessageModal");
static_assert(offsetof(DownloadOnDemandDirector_ShowErrorMessageModal, ParentWidget) == 0x000000, "Member 'DownloadOnDemandDirector_ShowErrorMessageModal::ParentWidget' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_ShowErrorMessageModal, ReturnValue) == 0x000008, "Member 'DownloadOnDemandDirector_ShowErrorMessageModal::ReturnValue' has a wrong offset!");

// Function HermesPlaysetsUI.DownloadOnDemandDirector.CanAddLinkCode
// 0x0018 (0x0018 - 0x0000)
struct DownloadOnDemandDirector_CanAddLinkCode final
{
public:
	class FString                                 InLinkCode;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DownloadOnDemandDirector_CanAddLinkCode) == 0x000008, "Wrong alignment on DownloadOnDemandDirector_CanAddLinkCode");
static_assert(sizeof(DownloadOnDemandDirector_CanAddLinkCode) == 0x000018, "Wrong size on DownloadOnDemandDirector_CanAddLinkCode");
static_assert(offsetof(DownloadOnDemandDirector_CanAddLinkCode, InLinkCode) == 0x000000, "Member 'DownloadOnDemandDirector_CanAddLinkCode::InLinkCode' has a wrong offset!");
static_assert(offsetof(DownloadOnDemandDirector_CanAddLinkCode, ReturnValue) == 0x000010, "Member 'DownloadOnDemandDirector_CanAddLinkCode::ReturnValue' has a wrong offset!");

}

