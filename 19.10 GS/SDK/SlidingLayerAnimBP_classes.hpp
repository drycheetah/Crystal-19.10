#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlidingLayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlidingLayerAnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass SlidingLayerAnimBP.SlidingLayerAnimBP_C
// 0x19A0 (0x1DC0 - 0x0420)
class USlidingLayerAnimBP_C final : public UFortSlidingLayerAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct SlidingLayerAnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0428(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0468(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0470(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0478(0x00C8)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_5;            // 0x0540(0x00D0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x0610(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x06D8(0x0118)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x07F0(0x0088)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0878(0x0010)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0888(0x0118)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_4;            // 0x09A0(0x00D0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0A70(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0A90(0x00C8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x0B58(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0BF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0C20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0C48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0C70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0C98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0CC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0D10(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0D38(0x0088)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_3;            // 0x0DC0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0E90(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0ED0(0x0118)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_2;            // 0x0FE8(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x10B8(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x11D0(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1210(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1230(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1348(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x1368(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1438(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1478(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1590(0x0020)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x15B0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1680(0x0040)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x16C0(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x17D8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x17F8(0x00B8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x18B0(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x19B8(0x0088)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1A40(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1A68(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x1A90(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1B30(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x1B50(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1C18(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1CE0(0x0040)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1D20(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1D40(0x0020)()
	bool                                          IsKneeSliding;                                     // 0x1D60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          b_KneeSlideNote_bTransition_FullBody_Sprinting;    // 0x1D61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D62[0x2];                                     // 0x1D62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               KneeSlideLowerBodyInitialRot_0;                    // 0x1D64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               KneeSlideLowerBodyInitialRot_Smooth;               // 0x1D70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D7C[0x4];                                     // 0x1D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x1D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                Fort_Player_Anim_Instance;                         // 0x1D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_;                                       // 0x1D90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideLowerBodyYawOffset;                       // 0x1D94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideRootYawOffset_0;                          // 0x1D98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VelocityAimYawDelta_0;                             // 0x1D9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeAngle_0;                             // 0x1DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeYaw_0;                               // 0x1DA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KneeSlideSlopeYawMinusRootRot_0;                   // 0x1DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TransitionToKneeSlide;                             // 0x1DAC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAD[0x3];                                     // 0x1DAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KneeSlideForwardVectorVelocityDelta_0;             // 0x1DB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitiatedSlideUpHill;                              // 0x1DB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bypass_Entry;                                      // 0x1DB5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB6[0x2];                                     // 0x1DB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpineTweakLean_0;                                  // 0x1DB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	struct FRotator Correct_Yaw_Value(const struct FRotator& InRot);
	void ExecuteUbergraph_SlidingLayerAnimBP(int32 EntryPoint);
	void MovementMode_LocomotionUpperBodyAdditive(const struct FPoseLink& InPose_0, const struct FPoseLink& IdleAdditive_CachedPose, struct FPoseLink* MovementMode_LocomotionUpperBodyAdditive_0);
	void MovementMode_LowerBodyOverride(const struct FPoseLink& InPose, struct FPoseLink* MovementMode_LowerBodyOverride_0);
	void MovementMode_UpperBodyPose(const struct FPoseLink& UppperBodyPose_BasePose, const struct FPoseLink& UpperBodyPose_AdditiveIdentityPose, struct FPoseLink* MovementMode_UpperBodyPose_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SlidingLayerAnimBP_C">();
	}
	static class USlidingLayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USlidingLayerAnimBP_C>();
	}
};
static_assert(alignof(USlidingLayerAnimBP_C) == 0x000010, "Wrong alignment on USlidingLayerAnimBP_C");
static_assert(sizeof(USlidingLayerAnimBP_C) == 0x001DC0, "Wrong size on USlidingLayerAnimBP_C");
static_assert(offsetof(USlidingLayerAnimBP_C, UberGraphFrame) == 0x000420, "Member 'USlidingLayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, __AnimBlueprintMutables) == 0x000428, "Member 'USlidingLayerAnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000468, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimBlueprintExtension_Base) == 0x000470, "Member 'USlidingLayerAnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_4) == 0x000478, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_5) == 0x000540, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_3) == 0x000610, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_6) == 0x0006D8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0007F0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_IdentityPose) == 0x000878, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000888, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_4) == 0x0009A0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_3) == 0x000A70, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_2) == 0x000A90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone_1) == 0x000B58, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000BF8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x000C20, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000C48, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000C70, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000C98, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000CC0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000CE8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x000D10, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000D38, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_3) == 0x000DC0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000E90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000ED0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_2) == 0x000FE8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0010B8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0011D0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x001210, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001230, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x001348, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x001368, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001438, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001478, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x001590, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x0015B0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001680, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0016C0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateResult) == 0x0017D8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_StateMachine) == 0x0017F8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x0018B0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_BlendListByBool) == 0x0019B8, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001A40, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001A68, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_RotateRootBone) == 0x001A90, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_2) == 0x001B30, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose_1) == 0x001B50, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_LinkedInputPose) == 0x001C18, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x001CE0, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root_1) == 0x001D20, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, AnimGraphNode_Root) == 0x001D40, "Member 'USlidingLayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, IsKneeSliding) == 0x001D60, "Member 'USlidingLayerAnimBP_C::IsKneeSliding' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, b_KneeSlideNote_bTransition_FullBody_Sprinting) == 0x001D61, "Member 'USlidingLayerAnimBP_C::b_KneeSlideNote_bTransition_FullBody_Sprinting' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRot_0) == 0x001D64, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyInitialRot_Smooth) == 0x001D70, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyInitialRot_Smooth' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, FortPlayerPawn) == 0x001D80, "Member 'USlidingLayerAnimBP_C::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Fort_Player_Anim_Instance) == 0x001D88, "Member 'USlidingLayerAnimBP_C::Fort_Player_Anim_Instance' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Delta_Time_) == 0x001D90, "Member 'USlidingLayerAnimBP_C::Delta_Time_' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideLowerBodyYawOffset) == 0x001D94, "Member 'USlidingLayerAnimBP_C::KneeSlideLowerBodyYawOffset' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideRootYawOffset_0) == 0x001D98, "Member 'USlidingLayerAnimBP_C::KneeSlideRootYawOffset_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, VelocityAimYawDelta_0) == 0x001D9C, "Member 'USlidingLayerAnimBP_C::VelocityAimYawDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeAngle_0) == 0x001DA0, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeAngle_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYaw_0) == 0x001DA4, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYaw_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideSlopeYawMinusRootRot_0) == 0x001DA8, "Member 'USlidingLayerAnimBP_C::KneeSlideSlopeYawMinusRootRot_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, TransitionToKneeSlide) == 0x001DAC, "Member 'USlidingLayerAnimBP_C::TransitionToKneeSlide' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, KneeSlideForwardVectorVelocityDelta_0) == 0x001DB0, "Member 'USlidingLayerAnimBP_C::KneeSlideForwardVectorVelocityDelta_0' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, InitiatedSlideUpHill) == 0x001DB4, "Member 'USlidingLayerAnimBP_C::InitiatedSlideUpHill' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, Bypass_Entry) == 0x001DB5, "Member 'USlidingLayerAnimBP_C::Bypass_Entry' has a wrong offset!");
static_assert(offsetof(USlidingLayerAnimBP_C, SpineTweakLean_0) == 0x001DB8, "Member 'USlidingLayerAnimBP_C::SpineTweakLean_0' has a wrong offset!");

}

