#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioExtensions

#include "Basic.hpp"

#include "AudioExtensions_classes.hpp"
#include "AudioExtensions_parameters.hpp"


namespace SDK
{

// Function AudioExtensions.AudioParameterInterface.ResetParameters
// (Native, Public, BlueprintCallable)

void IAudioParameterInterface::ResetParameters()
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("ResetParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AudioExtensions.AudioParameterInterface.SetBoolArrayParameter
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetBoolArrayParameter(class FName InName, const TArray<bool>& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBoolArrayParameter");

	Params::AudioParameterInterface_SetBoolArrayParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetBoolParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InBool                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetBoolParameter(class FName InName, bool InBool)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetBoolParameter");

	Params::AudioParameterInterface_SetBoolParameter Parms{};

	Parms.InName = InName;
	Parms.InBool = InBool;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetFloatArrayParameter
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetFloatArrayParameter(class FName InName, const TArray<float>& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFloatArrayParameter");

	Params::AudioParameterInterface_SetFloatArrayParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetFloatParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetFloatParameter(class FName InName, float InFloat)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetFloatParameter");

	Params::AudioParameterInterface_SetFloatParameter Parms{};

	Parms.InName = InName;
	Parms.InFloat = InFloat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetIntArrayParameter
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetIntArrayParameter(class FName InName, const TArray<int32>& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIntArrayParameter");

	Params::AudioParameterInterface_SetIntArrayParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetIntParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   inInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetIntParameter(class FName InName, int32 inInt)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetIntParameter");

	Params::AudioParameterInterface_SetIntParameter Parms{};

	Parms.InName = InName;
	Parms.inInt = inInt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetObjectArrayParameter
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetObjectArrayParameter(class FName InName, const TArray<class UObject*>& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetObjectArrayParameter");

	Params::AudioParameterInterface_SetObjectArrayParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetObjectParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetObjectParameter(class FName InName, class UObject* InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetObjectParameter");

	Params::AudioParameterInterface_SetObjectParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetStringArrayParameter
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   InValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetStringArrayParameter(class FName InName, const TArray<class FString>& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStringArrayParameter");

	Params::AudioParameterInterface_SetStringArrayParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetStringParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InValue                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetStringParameter(class FName InName, const class FString& InValue)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetStringParameter");

	Params::AudioParameterInterface_SetStringParameter Parms{};

	Parms.InName = InName;
	Parms.InValue = std::move(InValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AudioExtensions.AudioParameterInterface.SetTriggerParameter
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IAudioParameterInterface::SetTriggerParameter(class FName InName)
{
	static class UFunction* Func = nullptr;
	
	if (Func == nullptr)
		Func = Class->FindFunction("SetTriggerParameter");

	Params::AudioParameterInterface_SetTriggerParameter Parms{};

	Parms.InName = InName;

	UObject::ProcessEvent(Func, &Parms);
}

}

