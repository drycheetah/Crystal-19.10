#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventsSimpleButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUILegacy_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventsSimpleButton.EventsSimpleButton_C
// 0x00E0 (0x0FE0 - 0x0F00)
class UEventsSimpleButton_C final : public UCommonButtonLegacy
{
public:
	uint8                                         Pad_EF8[0x8];                                      // 0x0EF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Pressed;                                           // 0x0F08(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0F10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x0F18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_VariablePadding;                      // 0x0F20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ButtonTop;                                   // 0x0F28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shadow;                                      // 0x0F30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ButtonBG;                                  // 0x0F38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ToUpper;                                           // 0x0F40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          XL;                                                // 0x0F41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F42[0x6];                                      // 0x0F42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonNameText;                                    // 0x0F48(0x0018)(Edit, BlueprintVisible)
	TMap<class FString, struct FLinearColor>      Color;                                             // 0x0F60(0x0050)(Edit, BlueprintVisible)
	struct FLinearColor                           GamepadButtonTextColor;                            // 0x0FB0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTextColor;                                  // 0x0FC0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ButtonPadding;                                     // 0x0FD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CommonActionWidgetAction_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void BP_OnClicked();
	void BP_OnHovered();
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_EventsSimpleButton(int32 EntryPoint);
	void InputTypeChanged(bool bUsingGamepad);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PreConstruct(bool IsDesignTime);
	void UpdateColor(const class FString& ParameterName, const struct FLinearColor& New_Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventsSimpleButton_C">();
	}
	static class UEventsSimpleButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventsSimpleButton_C>();
	}
};
static_assert(alignof(UEventsSimpleButton_C) == 0x000010, "Wrong alignment on UEventsSimpleButton_C");
static_assert(sizeof(UEventsSimpleButton_C) == 0x000FE0, "Wrong size on UEventsSimpleButton_C");
static_assert(offsetof(UEventsSimpleButton_C, UberGraphFrame) == 0x000F00, "Member 'UEventsSimpleButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Pressed) == 0x000F08, "Member 'UEventsSimpleButton_C::Pressed' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Hover) == 0x000F10, "Member 'UEventsSimpleButton_C::Hover' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, CenterButtonTextWidget) == 0x000F18, "Member 'UEventsSimpleButton_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, CommonBorder_VariablePadding) == 0x000F20, "Member 'UEventsSimpleButton_C::CommonBorder_VariablePadding' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Image_ButtonTop) == 0x000F28, "Member 'UEventsSimpleButton_C::Image_ButtonTop' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Image_Shadow) == 0x000F30, "Member 'UEventsSimpleButton_C::Image_Shadow' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Overlay_ButtonBG) == 0x000F38, "Member 'UEventsSimpleButton_C::Overlay_ButtonBG' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, ToUpper) == 0x000F40, "Member 'UEventsSimpleButton_C::ToUpper' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, XL) == 0x000F41, "Member 'UEventsSimpleButton_C::XL' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, ButtonNameText) == 0x000F48, "Member 'UEventsSimpleButton_C::ButtonNameText' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, Color) == 0x000F60, "Member 'UEventsSimpleButton_C::Color' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, GamepadButtonTextColor) == 0x000FB0, "Member 'UEventsSimpleButton_C::GamepadButtonTextColor' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, DefaultTextColor) == 0x000FC0, "Member 'UEventsSimpleButton_C::DefaultTextColor' has a wrong offset!");
static_assert(offsetof(UEventsSimpleButton_C, ButtonPadding) == 0x000FD0, "Member 'UEventsSimpleButton_C::ButtonPadding' has a wrong offset!");

}

