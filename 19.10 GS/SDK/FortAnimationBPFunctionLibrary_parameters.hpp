#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortAnimationBPFunctionLibrary

#include "Basic.hpp"

#include "WindGustLocalSettingStruct_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GravityOverrideSettingStruct_structs.hpp"
#include "GravityOverrideParamsStruct_structs.hpp"
#include "WindGustSettingStruct_structs.hpp"
#include "ClothSettingStruct_structs.hpp"
#include "ClothCoreSettingStruct_structs.hpp"
#include "ClothParamsStruct_structs.hpp"
#include "WindGustParamsStruct_structs.hpp"


namespace SDK::Params
{

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Adjust Emote Vehicle Wheel Rotation
// 0x0050 (0x0050 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation final
{
public:
	class AActor*                                 Owning_Actor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWheelRotation;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentActorRotation;                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewActorRotation;                                  // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewWheelRotation;                                  // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation) == 0x000050, "Wrong size on FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, Owning_Actor) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::Owning_Actor' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CurrentWheelRotation) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CurrentWheelRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, DeltaTime) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CurrentActorRotation) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CurrentActorRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, __WorldContext) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, NewActorRotation) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::NewActorRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, NewWheelRotation) == 0x000024, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::NewWheelRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation, CallFunc_FInterpTo_ReturnValue) == 0x00004C, "Member 'FortAnimationBPFunctionLibrary_C_Adjust_Emote_Vehicle_Wheel_Rotation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Clear Transformation Montage
// 0x0010 (0x0010 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage) == 0x000010, "Wrong size on FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage, FortPlayerPawn) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage, __WorldContext) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Clear_Transformation_Montage::__WorldContext' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Function
// 0x12B8 (0x12B8 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ClothingAssetName;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FClothParamsStruct                     Cloth_Paramaters;                                  // 0x0018(0x0230)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothCoreSettingStruct                Cloth_Core_Settings;                               // 0x0248(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ClothUpAxis;                                       // 0x0290(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnGround_Moving_SpeedLimit;                        // 0x029C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnGround_Moving_AngularVel_Max;                    // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnGround_Moving_FictitiousVel_Max;                 // 0x02A4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x02A8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x02AC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustParamsStruct                  WindGustsParams;                                   // 0x02B0(0x0348)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            WindGustLocalSettings;                             // 0x05F8(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentStateOut;                                   // 0x0618(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    Cloth_Settings_Out;                                // 0x0628(0x0038)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothCoreSettingStruct                Cloth_Core_Settings_Out;                           // 0x0660(0x0048)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustSettingStruct                 WindGustSettings_Out;                              // 0x06A8(0x0054)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            WindGustLocalSettings_Out;                         // 0x06FC(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GustStrength___WindVelocityOut;                    // 0x0710(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OnGroundMoving_LiftCoefficientLocal;               // 0x071C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OnGroundMoving_DragCoefficientLocal;               // 0x0724(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentState;                                      // 0x0730(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FWindGustSettingStruct                 WindGustSettingsLocal;                             // 0x0740(0x0054)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustParamsStruct                  WindGustsParamsLocal;                              // 0x0794(0x0348)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementLinearVelVector_Local;                     // 0x0ADC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ClothUpAxis_Local;                                 // 0x0AE8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GustStrength___WindVelocityLocal;                  // 0x0AF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            WindGustLocalSettings_Local;                       // 0x0B00(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSecondsLocal;                            // 0x0B14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeLocal;                                    // 0x0B18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnGround_Moving_FictitiousVel;                     // 0x0B1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OnGround_Moving_AngularVel;                        // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothCoreSettingStruct                Cloth_Core_Settings_Local;                         // 0x0B24(0x0048)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    Cloth_Settings_Local;                              // 0x0B6C(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothParamsStruct                     Cloth_Params_Local;                                // 0x0BA4(0x0230)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD4[0x4];                                      // 0x0DD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ClothingAssetName_Local;                           // 0x0DD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         Player_Forward_Vector_scaled_for_jump_Local;       // 0x0DE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Player_Forward_Vector_Local;                       // 0x0DEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChaosClothingInteractor*               ChaosClothingInteractor;                           // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstanceLocal;                    // 0x0DF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    K2Node_MakeStruct_ClothSettingStruct;              // 0x0E00(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Player_Movement_Function_X_Movement;      // 0x0E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Player_Movement_Function_Y_Movement;      // 0x0E3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Player_Movement_Function_Z_Movement;      // 0x0E40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E44[0x4];                                      // 0x0E44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0E48(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E54[0x4];                                      // 0x0E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClothingSimulationInteractor*          CallFunc_GetClothingSimulationInteractor_ReturnValue; // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0E64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0E71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E72[0x2];                                      // 0x0E72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0E9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0EA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0EA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortPlayerAnimInstance*                CallFunc_GetOwnerFortPlayerAnimInstance_ReturnValue; // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0EBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0EC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0EC4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out; // 0x0ED4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut; // 0x0EE0(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0EF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_1; // 0x0EFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_1; // 0x0F08(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_2; // 0x0F1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_2; // 0x0F28(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_3; // 0x0F3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_3; // 0x0F48(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out; // 0x0F5C(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_1; // 0x0F94(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_2; // 0x0FCC(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_3; // 0x1004(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_4; // 0x103C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_4; // 0x1048(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_5; // 0x105C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_5; // 0x1068(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_6; // 0x107C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_6; // 0x1088(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_7; // 0x109C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_7; // 0x10A8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_4; // 0x10BC(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_5; // 0x10F4(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_6; // 0x112C(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_7; // 0x1164(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_8; // 0x119C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_8; // 0x11A8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_8; // 0x11BC(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11F4[0x4];                                     // 0x11F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClothingInteractor*                    CallFunc_GetClothingInteractor_ReturnValue;        // 0x11F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChaosClothingInteractor*               K2Node_DynamicCast_AsChaos_Clothing_Interactor;    // 0x1200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x1209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_120A[0x2];                                     // 0x120A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x120C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x1210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x1214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x1218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x121C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x121D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x121E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121F[0x1];                                     // 0x121F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FClothSettingStruct                    K2Node_MakeStruct_ClothSettingStruct_1;            // 0x1220(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_9; // 0x1258(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1291[0x3];                                     // 0x1291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x1294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x129C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x12A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function) == 0x0012B8, "Wrong size on FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, ClothingAssetName) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::ClothingAssetName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Paramaters) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Paramaters' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Core_Settings) == 0x000248, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Core_Settings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, ClothUpAxis) == 0x000290, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::ClothUpAxis' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGround_Moving_SpeedLimit) == 0x00029C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGround_Moving_SpeedLimit' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGround_Moving_AngularVel_Max) == 0x0002A0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGround_Moving_AngularVel_Max' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGround_Moving_FictitiousVel_Max) == 0x0002A4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGround_Moving_FictitiousVel_Max' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, DeltaTime) == 0x0002A8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, GameTimeInSeconds) == 0x0002AC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustsParams) == 0x0002B0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustsParams' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustLocalSettings) == 0x0005F8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustLocalSettings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, __WorldContext) == 0x000610, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CurrentStateOut) == 0x000618, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CurrentStateOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Settings_Out) == 0x000628, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Settings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Core_Settings_Out) == 0x000660, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Core_Settings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustSettings_Out) == 0x0006A8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustSettings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustLocalSettings_Out) == 0x0006FC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustLocalSettings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, GustStrength___WindVelocityOut) == 0x000710, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::GustStrength___WindVelocityOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGroundMoving_LiftCoefficientLocal) == 0x00071C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGroundMoving_LiftCoefficientLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGroundMoving_DragCoefficientLocal) == 0x000724, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGroundMoving_DragCoefficientLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CurrentState) == 0x000730, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CurrentState' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustSettingsLocal) == 0x000740, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustSettingsLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustsParamsLocal) == 0x000794, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustsParamsLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, MovementLinearVelVector_Local) == 0x000ADC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::MovementLinearVelVector_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, ClothUpAxis_Local) == 0x000AE8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::ClothUpAxis_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, GustStrength___WindVelocityLocal) == 0x000AF4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::GustStrength___WindVelocityLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, WindGustLocalSettings_Local) == 0x000B00, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::WindGustLocalSettings_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, GameTimeInSecondsLocal) == 0x000B14, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::GameTimeInSecondsLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, DeltaTimeLocal) == 0x000B18, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::DeltaTimeLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGround_Moving_FictitiousVel) == 0x000B1C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGround_Moving_FictitiousVel' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, OnGround_Moving_AngularVel) == 0x000B20, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::OnGround_Moving_AngularVel' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Core_Settings_Local) == 0x000B24, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Core_Settings_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Settings_Local) == 0x000B6C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Settings_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Cloth_Params_Local) == 0x000BA4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Cloth_Params_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, ClothingAssetName_Local) == 0x000DD8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::ClothingAssetName_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Player_Forward_Vector_scaled_for_jump_Local) == 0x000DE8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Player_Forward_Vector_scaled_for_jump_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, Player_Forward_Vector_Local) == 0x000DEC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::Player_Forward_Vector_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, ChaosClothingInteractor) == 0x000DF0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::ChaosClothingInteractor' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CharacterPartAnimInstanceLocal) == 0x000DF8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CharacterPartAnimInstanceLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, K2Node_MakeStruct_ClothSettingStruct) == 0x000E00, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::K2Node_MakeStruct_ClothSettingStruct' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Player_Movement_Function_X_Movement) == 0x000E38, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Player_Movement_Function_X_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Player_Movement_Function_Y_Movement) == 0x000E3C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Player_Movement_Function_Y_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Player_Movement_Function_Z_Movement) == 0x000E40, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Player_Movement_Function_Z_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_GetOwningComponent_ReturnValue) == 0x000E48, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MapRangeClamped_ReturnValue) == 0x000E50, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_GetClothingSimulationInteractor_ReturnValue) == 0x000E58, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_GetClothingSimulationInteractor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000E60, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_X) == 0x000E64, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Y) == 0x000E68, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Z) == 0x000E6C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000E70, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000E71, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector2D_X) == 0x000E74, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector2D_Y) == 0x000E78, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector2D_X_1) == 0x000E7C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector2D_Y_1) == 0x000E80, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_X_1) == 0x000E84, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Y_1) == 0x000E88, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Z_1) == 0x000E8C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_X_2) == 0x000E90, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Y_2) == 0x000E94, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakVector_Z_2) == 0x000E98, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000E9C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000EA0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MakeVector_ReturnValue) == 0x000EA4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_GetOwnerFortPlayerAnimInstance_ReturnValue) == 0x000EB0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_GetOwnerFortPlayerAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000EB8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000EBC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000EC0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MakeVector2D_ReturnValue) == 0x000EC4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000ECC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000ED0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out) == 0x000ED4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut) == 0x000EE0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MakeVector2D_ReturnValue_1) == 0x000EF4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_1) == 0x000EFC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_1) == 0x000F08, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_2) == 0x000F1C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_2) == 0x000F28, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_3) == 0x000F3C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_3) == 0x000F48, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out) == 0x000F5C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_1) == 0x000F94, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_2) == 0x000FCC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_3) == 0x001004, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_4) == 0x00103C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_4) == 0x001048, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_5) == 0x00105C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_5) == 0x001068, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_6) == 0x00107C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_6) == 0x001088, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_7) == 0x00109C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_7) == 0x0010A8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_4) == 0x0010BC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_5) == 0x0010F4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_6) == 0x00112C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_7) == 0x001164, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_8) == 0x00119C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_GustStrengthWindVelocity_Out_8' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_8) == 0x0011A8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Wind_Gust_Control_Function_WindGustLocalSettingsOut_8' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_8) == 0x0011BC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_8' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_GetClothingInteractor_ReturnValue) == 0x0011F8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_GetClothingInteractor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, K2Node_DynamicCast_AsChaos_Clothing_Interactor) == 0x001200, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::K2Node_DynamicCast_AsChaos_Clothing_Interactor' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, K2Node_DynamicCast_bSuccess) == 0x001208, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x001209, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakRotator_Roll) == 0x00120C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakRotator_Pitch) == 0x001210, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BreakRotator_Yaw) == 0x001214, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Abs_ReturnValue) == 0x001218, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00121C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_BooleanOR_ReturnValue) == 0x00121D, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x00121E, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, K2Node_MakeStruct_ClothSettingStruct_1) == 0x001220, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::K2Node_MakeStruct_ClothSettingStruct_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_9) == 0x001258, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Cloth_Controller_Setter_Function_Cloth_Settings_Out_9' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x001290, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x001294, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x001298, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_MakeVector_ReturnValue_1) == 0x00129C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0012A8, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Function::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Cloth Controller Setter Function
// 0x00F8 (0x00F8 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    Cloth_Settings;                                    // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    Cloth_Settings_Out;                                // 0x0048(0x0038)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Lift_Coefficient_Local;                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Drag_Coefficient_Local;                            // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Gravity_Override_Local;                            // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fictitious_Angular_Scale_Local;                    // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angular_Velocity_Scale_Local;                      // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Linear_Velocity_Scale_Local;                       // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AlignVectorWithJoint_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FClothSettingStruct                    K2Node_MakeStruct_ClothSettingStruct;              // 0x00BC(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function) == 0x0000F8, "Wrong size on FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Cloth_Settings) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Cloth_Settings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, __WorldContext) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Cloth_Settings_Out) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Cloth_Settings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Lift_Coefficient_Local) == 0x000080, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Lift_Coefficient_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Drag_Coefficient_Local) == 0x000088, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Drag_Coefficient_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Gravity_Override_Local) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Gravity_Override_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Fictitious_Angular_Scale_Local) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Fictitious_Angular_Scale_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Angular_Velocity_Scale_Local) == 0x0000A0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Angular_Velocity_Scale_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, Linear_Velocity_Scale_Local) == 0x0000A4, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::Linear_Velocity_Scale_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, CallFunc_AlignVectorWithJoint_ReturnValue) == 0x0000B0, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::CallFunc_AlignVectorWithJoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function, K2Node_MakeStruct_ClothSettingStruct) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_Cloth_Controller_Setter_Function::K2Node_MakeStruct_ClothSettingStruct' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.ComplexSimSpaceFunction
// 0x00F8 (0x00F8 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeedMax;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PawnSpeedMax;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RInterpErrorTolerance;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDraw;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               sim_space_rotation_in;                             // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          inComponentSpaceIn;                                // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inComponentSpaceLastFrameIn;                       // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          lockedOnSimSpaceIn;                                // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpSpeedIn;                                     // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               sim_space_rotation;                                // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          inComponentSpaceOut;                               // 0x0044(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          inComponentSpaceLastFrameOut;                      // 0x0045(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          lockedOnSimSpaceOut;                               // 0x0046(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpSpeedOut;                                    // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RootLocation;                                      // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interpolating_Out;                                 // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingComponentSpace_Out;                           // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SimSpaceRotation_Out;                              // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction) == 0x0000F8, "Wrong size on FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, InterpSpeedMax) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::InterpSpeedMax' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, PawnSpeedMax) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::PawnSpeedMax' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, RInterpErrorTolerance) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::RInterpErrorTolerance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, DeltaTime) == 0x000014, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, DebugDraw) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::DebugDraw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, sim_space_rotation_in) == 0x00001C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::sim_space_rotation_in' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, inComponentSpaceIn) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::inComponentSpaceIn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, inComponentSpaceLastFrameIn) == 0x000029, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::inComponentSpaceLastFrameIn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, lockedOnSimSpaceIn) == 0x00002A, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::lockedOnSimSpaceIn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, InterpSpeedIn) == 0x00002C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::InterpSpeedIn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, __WorldContext) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, sim_space_rotation) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::sim_space_rotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, inComponentSpaceOut) == 0x000044, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::inComponentSpaceOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, inComponentSpaceLastFrameOut) == 0x000045, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::inComponentSpaceLastFrameOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, lockedOnSimSpaceOut) == 0x000046, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::lockedOnSimSpaceOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, InterpSpeedOut) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::InterpSpeedOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, RootLocation) == 0x00004C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::RootLocation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, Interpolating_Out) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::Interpolating_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, UsingComponentSpace_Out) == 0x000059, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::UsingComponentSpace_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, SimSpaceRotation_Out) == 0x00005C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::SimSpaceRotation_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue) == 0x000070, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_GetOwningActor_ReturnValue) == 0x000078, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_GetActorForwardVector_ReturnValue) == 0x000084, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_GetSocketLocation_ReturnValue) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000CC, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0000D8, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_GetSocketRotation_ReturnValue) == 0x0000E4, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F0, "Member 'FortAnimationBPFunctionLibrary_C_ComplexSimSpaceFunction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawJointDebugFunction
// 0x00A8 (0x00A8 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JointOffset;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           JointName;                                         // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Scale;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDraw;                                         // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstanceLocal;                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetPartSkeletalMeshComponent_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction) == 0x0000A8, "Wrong size on FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, JointOffset) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::JointOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, JointName) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::JointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, Scale) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::Scale' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, Duration) == 0x00002C, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::Duration' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, Thickness) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::Thickness' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, DebugDraw) == 0x000034, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::DebugDraw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, __WorldContext) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CharacterPartAnimInstanceLocal) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CharacterPartAnimInstanceLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, Temp_int_Array_Index_Variable) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Array_Get_Item) == 0x00005C, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_GetPartSkeletalMeshComponent_ReturnValue) == 0x000068, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_GetPartSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_GetSocketRotation_ReturnValue) == 0x000084, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_GetSocketLocation_ReturnValue) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_DrawJointDebugFunction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.DrawVectorFromJointFunction
// 0x0078 (0x0078 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LineEnd;                                           // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                JointOffset;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction) == 0x000078, "Wrong size on FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, JointName) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::JointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, LineEnd) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::LineEnd' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, JointOffset) == 0x00001C, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::JointOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, LineColor) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::LineColor' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, Thickness) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::Thickness' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, __WorldContext) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CallFunc_GetSocketLocation_ReturnValue) == 0x000050, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00006C, "Member 'FortAnimationBPFunctionLibrary_C_DrawVectorFromJointFunction::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.FN_PSDPoseReaderFNC
// 0x00C0 (0x00C0 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC final
{
public:
	class FString                                 startJnt;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 endJnt;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 poseJnt;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         pose_output;                                       // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         psd_alpha;                                         // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_DirectionBetweenSockets_ReturnValue;   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_DirectionBetweenSockets_ReturnValue_1; // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC) == 0x0000C0, "Wrong size on FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, startJnt) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::startJnt' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, endJnt) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::endJnt' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, poseJnt) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::poseJnt' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, Angle) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::Angle' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, Debug) == 0x000034, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::Debug' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, SkeletalMeshComponent) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, __WorldContext) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, pose_output) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::pose_output' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, psd_alpha) == 0x00004C, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::psd_alpha' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue) == 0x000050, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_GetSocketLocation_ReturnValue) == 0x000060, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue_2) == 0x00006C, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue_3) == 0x000074, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue_4) == 0x00007C, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000084, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_K2_DirectionBetweenSockets_ReturnValue) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_K2_DirectionBetweenSockets_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Conv_StringToName_ReturnValue_5) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_K2_DirectionBetweenSockets_ReturnValue_1) == 0x0000A4, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_K2_DirectionBetweenSockets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_) == 0x0000B0, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B4, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B8, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_FN_PSDPoseReaderFNC::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Function
// 0x0368 (0x0368 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Gravity_Override_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindFreq;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindAmp;                                           // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindOffset;                                        // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GoingUpGravityOverride;                            // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ComingDownGravityOverride;                         // 0x003C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DivingDownGravityOverride;                         // 0x0048(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParachuteOpenedGravityOverride;                    // 0x0054(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundWindFreq;                                    // 0x0060(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundWindAmp;                                     // 0x006C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundWindOffset;                                  // 0x0078(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnGroundGravityOverride;                           // 0x0084(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SwimmingGravityOverride;                           // 0x0090(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointName;                                         // 0x009C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00A8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityOverride;                                   // 0x00B0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DivingDownGravityOverrideLocal;                    // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SwimmingGravityOverrideLocal;                      // 0x00C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnGroundGravityOverrideLocal;                      // 0x00D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParachuteOpenedGravityOverrideLocal;               // 0x00E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ComingDownGravityOverrideLocal;                    // 0x00EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GoingUpGravOverrideLocal;                          // 0x00F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstanceLocal;                    // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomVectorFunction_VectorOut;           // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomVectorFunction_VectorOut_1;         // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_10;      // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_11;      // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_12;      // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_13;      // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_14;      // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_15;      // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_16;      // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_17;      // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_17;          // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Gravity_Override_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function) == 0x000368, "Wrong size on FortAnimationBPFunctionLibrary_C_Gravity_Override_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GameTimeInSeconds) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, WindFreq) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::WindFreq' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, WindAmp) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::WindAmp' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, WindOffset) == 0x000024, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::WindOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GoingUpGravityOverride) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GoingUpGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, ComingDownGravityOverride) == 0x00003C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::ComingDownGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, DivingDownGravityOverride) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::DivingDownGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, ParachuteOpenedGravityOverride) == 0x000054, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::ParachuteOpenedGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GroundWindFreq) == 0x000060, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GroundWindFreq' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GroundWindAmp) == 0x00006C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GroundWindAmp' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GroundWindOffset) == 0x000078, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GroundWindOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, OnGroundGravityOverride) == 0x000084, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::OnGroundGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, SwimmingGravityOverride) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::SwimmingGravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, JointName) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::JointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, __WorldContext) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GravityOverride) == 0x0000B0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, DivingDownGravityOverrideLocal) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::DivingDownGravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, SwimmingGravityOverrideLocal) == 0x0000C8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::SwimmingGravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, OnGroundGravityOverrideLocal) == 0x0000D4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::OnGroundGravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, ParachuteOpenedGravityOverrideLocal) == 0x0000E0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::ParachuteOpenedGravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, ComingDownGravityOverrideLocal) == 0x0000EC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::ComingDownGravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, GoingUpGravOverrideLocal) == 0x0000F8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::GoingUpGravOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CharacterPartAnimInstanceLocal) == 0x000108, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CharacterPartAnimInstanceLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X) == 0x000110, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y) == 0x000114, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z) == 0x000118, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X_1) == 0x00011C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y_1) == 0x000120, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z_1) == 0x000124, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X_2) == 0x000128, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y_2) == 0x00012C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z_2) == 0x000130, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X_3) == 0x000134, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y_3) == 0x000138, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z_3) == 0x00013C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X_4) == 0x000140, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y_4) == 0x000144, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z_4) == 0x000148, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_X_5) == 0x00014C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Y_5) == 0x000150, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_BreakVector_Z_5) == 0x000154, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000158, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue) == 0x000160, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_RandomVectorFunction_VectorOut) == 0x00016C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_RandomVectorFunction_VectorOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_RandomVectorFunction_VectorOut_1) == 0x000178, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_RandomVectorFunction_VectorOut_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_GetSocketRotation_ReturnValue) == 0x000184, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_GetForwardVector_ReturnValue) == 0x000190, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_GetUpVector_ReturnValue) == 0x00019C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001C0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0001CC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0001D8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0001E4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x0001F0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x0001FC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x000208, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x000214, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_10) == 0x000220, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_11) == 0x00022C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_GetRightVector_ReturnValue) == 0x000238, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_12) == 0x000244, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_13) == 0x000250, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue) == 0x00025C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000268, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000274, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000280, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_4) == 0x00028C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000298, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_14) == 0x0002A4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_15) == 0x0002B0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0002BC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0002C8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_8) == 0x0002D4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_9) == 0x0002E0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_10) == 0x0002EC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_11) == 0x0002F8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_16) == 0x000304, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Multiply_VectorFloat_ReturnValue_17) == 0x000310, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Multiply_VectorFloat_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_12) == 0x00031C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_13) == 0x000328, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_14) == 0x000334, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_15) == 0x000340, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_16) == 0x00034C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Function, CallFunc_Add_VectorVector_ReturnValue_17) == 0x000358, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Function::CallFunc_Add_VectorVector_ReturnValue_17' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override Setter Function
// 0x0100 (0x0100 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideSettingStruct          GravityOverride_Settings;                          // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideSettingStruct          GravityOverride_Settings_Out;                      // 0x0050(0x0038)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityOverride_Out;                               // 0x0088(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideSettingStruct          GravityOverrideSettings_Local;                     // 0x0094(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Gravity_Override_Local;                            // 0x00CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AlignVectorWithJoint_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomVectorFunction_VectorOut;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function) == 0x000100, "Wrong size on FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, GravityOverride_Settings) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::GravityOverride_Settings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, GameTimeInSeconds) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, __WorldContext) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, GravityOverride_Settings_Out) == 0x000050, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::GravityOverride_Settings_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, GravityOverride_Out) == 0x000088, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::GravityOverride_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, GravityOverrideSettings_Local) == 0x000094, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::GravityOverrideSettings_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, Gravity_Override_Local) == 0x0000CC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::Gravity_Override_Local' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, CallFunc_AlignVectorWithJoint_ReturnValue) == 0x0000D8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::CallFunc_AlignVectorWithJoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, CallFunc_RandomVectorFunction_VectorOut) == 0x0000E4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::CallFunc_RandomVectorFunction_VectorOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_Setter_Function::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Gravity Override State Function
// 0x0300 (0x0300 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideParamsStruct           GravityOverrideParams;                             // 0x000C(0x01F8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDraw;                                         // 0x0204(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DebugJointName;                                    // 0x0208(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0210(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityOverride;                                   // 0x0218(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentStateOut;                                   // 0x0228(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FGravityOverrideSettingStruct          GravityOverrideSettingsOut;                        // 0x0238(0x0038)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravityOverrideLocal;                              // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGravityOverrideSettingStruct          GravityOverrideSettingsLocal;                      // 0x027C(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentState;                                      // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x02C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB[0x1];                                      // 0x02DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_AlignVectorWithJoint_ReturnValue;         // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomVectorFunction_VectorOut;           // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function) == 0x000300, "Wrong size on FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GameTimeInSeconds) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GravityOverrideParams) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GravityOverrideParams' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, DebugDraw) == 0x000204, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::DebugDraw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, DebugJointName) == 0x000208, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::DebugJointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, __WorldContext) == 0x000210, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GravityOverride) == 0x000218, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GravityOverride' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CurrentStateOut) == 0x000228, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CurrentStateOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GravityOverrideSettingsOut) == 0x000238, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GravityOverrideSettingsOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GravityOverrideLocal) == 0x000270, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GravityOverrideLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, GravityOverrideSettingsLocal) == 0x00027C, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::GravityOverrideSettingsLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CurrentState) == 0x0002B8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CurrentState' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, K2Node_MakeArray_Array) == 0x0002C8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002D8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_BooleanOR_ReturnValue) == 0x0002D9, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0002DA, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_AlignVectorWithJoint_ReturnValue) == 0x0002DC, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_AlignVectorWithJoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_RandomVectorFunction_VectorOut) == 0x0002E8, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_RandomVectorFunction_VectorOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F4, "Member 'FortAnimationBPFunctionLibrary_C_Gravity_Override_State_Function::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Play Transformation Montage
// 0x0028 (0x0028 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage) == 0x000028, "Wrong size on FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, FortPlayerPawn) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, __WorldContext) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, CallFunc_Montage_Play_ReturnValue) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage, CallFunc_IsValid_ReturnValue_2) == 0x000024, "Member 'FortAnimationBPFunctionLibrary_C_Play_Transformation_Montage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Player Movement Function
// 0x0120 (0x0120 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Player_Movement_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Dot_Product;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Dot_Product;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z_Dot_Product;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebug;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Debug_Scalar;                                      // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X_Movement;                                        // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y_Movement;                                        // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z_Movement;                                        // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDrawLocal;                                    // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        Pawn;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_TryGetFortPawn_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Player_Movement_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function) == 0x000120, "Wrong size on FortAnimationBPFunctionLibrary_C_Player_Movement_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, X_Dot_Product) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::X_Dot_Product' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Y_Dot_Product) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Y_Dot_Product' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Z_Dot_Product) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Z_Dot_Product' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, DrawDebug) == 0x000014, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::DrawDebug' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Debug_Scalar) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Debug_Scalar' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, __WorldContext) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, X_Movement) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::X_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Y_Movement) == 0x00002C, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Y_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Z_Movement) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Z_Movement' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, DebugDrawLocal) == 0x000034, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::DebugDrawLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, Pawn) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::Pawn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_GetActorUpVector_ReturnValue) == 0x00004C, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_GetActorForwardVector_ReturnValue) == 0x000064, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_GetActorRightVector_ReturnValue) == 0x000070, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_TryGetFortPawn_ReturnValue) == 0x000080, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_TryGetFortPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000098, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A4, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C8, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000D8, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000DC, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E0, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x0000EC, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000F0, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000FC, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000100, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00010C, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Player_Movement_Function, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000110, "Member 'FortAnimationBPFunctionLibrary_C_Player_Movement_Function::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.RandomRotatorFunction
// 0x0060 (0x0060 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_RandomRotatorFunction final
{
public:
	float                                         GameTimeInSeconds;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PerlinScale;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Frequency;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Amplitude;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Offset;                                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         TimeOffset;                                        // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RandomRotator;                                     // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         PerlinScaleLocal;                                  // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HairRotator_01;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetRandomWindRotator_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_RandomRotatorFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction) == 0x000060, "Wrong size on FortAnimationBPFunctionLibrary_C_RandomRotatorFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, GameTimeInSeconds) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, PerlinScale) == 0x000004, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::PerlinScale' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, Frequency) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::Frequency' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, Amplitude) == 0x000014, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::Amplitude' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, Offset) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::Offset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, TimeOffset) == 0x00002C, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::TimeOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, __WorldContext) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, RandomRotator) == 0x000038, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::RandomRotator' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, PerlinScaleLocal) == 0x000044, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::PerlinScaleLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, HairRotator_01) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::HairRotator_01' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomRotatorFunction, CallFunc_GetRandomWindRotator_ReturnValue) == 0x000054, "Member 'FortAnimationBPFunctionLibrary_C_RandomRotatorFunction::CallFunc_GetRandomWindRotator_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.RandomVectorFunction
// 0x00A8 (0x00A8 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_RandomVectorFunction final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeOffset;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PerlinScale;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Frequency;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Amplitude;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorOut;                                         // 0x0048(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorOut_Code;                                    // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PerlinScaleLocal;                                  // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVectorLocal;                                     // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVectorLocal;                                  // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVectorLocal;                                // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointNameLocal;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomWindVector_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AlignVectorWithJoint_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_RandomVectorFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction) == 0x0000A8, "Wrong size on FortAnimationBPFunctionLibrary_C_RandomVectorFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, JointName) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::JointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, GameTimeInSeconds) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, TimeOffset) == 0x000014, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::TimeOffset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, PerlinScale) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::PerlinScale' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, Frequency) == 0x00001C, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::Frequency' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, Amplitude) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::Amplitude' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, Offset) == 0x000034, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::Offset' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, __WorldContext) == 0x000040, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, VectorOut) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::VectorOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, VectorOut_Code) == 0x000054, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::VectorOut_Code' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, PerlinScaleLocal) == 0x000060, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::PerlinScaleLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, UpVectorLocal) == 0x000064, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::UpVectorLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, RightVectorLocal) == 0x000070, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::RightVectorLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, ForwardVectorLocal) == 0x00007C, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::ForwardVectorLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, JointNameLocal) == 0x000088, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::JointNameLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, CallFunc_GetRandomWindVector_ReturnValue) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::CallFunc_GetRandomWindVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_RandomVectorFunction, CallFunc_AlignVectorWithJoint_ReturnValue) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_RandomVectorFunction::CallFunc_AlignVectorWithJoint_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Scale Joint Rotation Function
// 0x00E0 (0x00E0 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Scale;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   TargetBone;                                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReferenceBone;                                     // 0x001C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalRotation;                                     // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               OriginalRotation;                                  // 0x003C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetDeltaTransformFromRefPose_ReturnValue; // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function) == 0x000010, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function) == 0x0000E0, "Wrong size on FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, Scale) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::Scale' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, TargetBone) == 0x000014, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::TargetBone' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, ReferenceBone) == 0x00001C, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::ReferenceBone' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, __WorldContext) == 0x000028, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, FinalRotation) == 0x000030, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::FinalRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, OriginalRotation) == 0x00003C, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::OriginalRotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue) == 0x000048, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_GetOwnerSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_GetDeltaTransformFromRefPose_ReturnValue) == 0x000060, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_GetDeltaTransformFromRefPose_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakTransform_Location) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Roll_1) == 0x0000B4, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Pitch_1) == 0x0000B8, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_BreakRotator_Yaw_1) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000C8, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function, CallFunc_MakeRotator_ReturnValue) == 0x0000CC, "Member 'FortAnimationBPFunctionLibrary_C_Scale_Joint_Rotation_Function::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Set Transformation Montage
// 0x0028 (0x0028 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage final
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage) == 0x000028, "Wrong size on FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage, FortPlayerPawn) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage::FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage, Montage) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage::Montage' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage, StartTime) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage::StartTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage, __WorldContext) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'FortAnimationBPFunctionLibrary_C_Set_Transformation_Montage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.Wind Gust Control Function
// 0x0138 (0x0138 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function final
{
public:
	class UCustomCharacterPartAnimInstance*       CharacterPartAnimInstance;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTimeInSeconds;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JointName;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustSettingStruct                 WindGustSettings;                                  // 0x0018(0x0054)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            WindGustLocalSettings;                             // 0x006C(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GustStrengthWindVelocity_Out;                      // 0x0088(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            WindGustLocalSettingsOut;                          // 0x0094(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GustStrength___WindVelocityLocal;                  // 0x00A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustSettingStruct                 K2Node_MakeStruct_WindGustSettingStruct;           // 0x00B4(0x0054)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomVectorFunction_VectorOut;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WindGustGeneratorFunction_GustStrength___WindVelocity; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            CallFunc_WindGustGeneratorFunction_ClothGustLocalSettingsOut; // 0x0118(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function) == 0x000138, "Wrong size on FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, CharacterPartAnimInstance) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::CharacterPartAnimInstance' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, DeltaTime) == 0x000008, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, GameTimeInSeconds) == 0x00000C, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::GameTimeInSeconds' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, JointName) == 0x000010, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::JointName' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, WindGustSettings) == 0x000018, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::WindGustSettings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, WindGustLocalSettings) == 0x00006C, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::WindGustLocalSettings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, __WorldContext) == 0x000080, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, GustStrengthWindVelocity_Out) == 0x000088, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::GustStrengthWindVelocity_Out' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, WindGustLocalSettingsOut) == 0x000094, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::WindGustLocalSettingsOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, GustStrength___WindVelocityLocal) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::GustStrength___WindVelocityLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, K2Node_MakeStruct_WindGustSettingStruct) == 0x0000B4, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::K2Node_MakeStruct_WindGustSettingStruct' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, CallFunc_RandomVectorFunction_VectorOut) == 0x000108, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::CallFunc_RandomVectorFunction_VectorOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, CallFunc_WindGustGeneratorFunction_GustStrength___WindVelocity) == 0x000114, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::CallFunc_WindGustGeneratorFunction_GustStrength___WindVelocity' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, CallFunc_WindGustGeneratorFunction_ClothGustLocalSettingsOut) == 0x000118, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::CallFunc_WindGustGeneratorFunction_ClothGustLocalSettingsOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00012C, "Member 'FortAnimationBPFunctionLibrary_C_Wind_Gust_Control_Function::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function FortAnimationBPFunctionLibrary.FortAnimationBPFunctionLibrary_C.WindGustGeneratorFunction
// 0x0130 (0x0130 - 0x0000)
struct FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustSettingStruct                 GustSettings;                                      // 0x0004(0x0054)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            ClothGustLocalSettings;                            // 0x0058(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GustStrength___WindVelocity;                       // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            ClothGustLocalSettingsOut;                         // 0x007C(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GustDirectionWeightLocal;                          // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeLocal;                                  // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalGustStrengthLocal;                            // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GustDurationLocal;                                 // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GustStrengthLocal;                                 // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeBetweenGustsLocal;                             // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeLocal;                                    // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue_1;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_UnclampedLerp_Return_Value;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWindGustLocalSettingStruct            K2Node_MakeStruct_WindGustLocalSettingStruct;      // 0x00F8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_3;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UnclampedLerp_Return_Value_1;             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UnclampedLerp_Return_Value_2;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction) == 0x000008, "Wrong alignment on FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction");
static_assert(sizeof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction) == 0x000130, "Wrong size on FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, DeltaTime) == 0x000000, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::DeltaTime' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, GustSettings) == 0x000004, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::GustSettings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, ClothGustLocalSettings) == 0x000058, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::ClothGustLocalSettings' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, __WorldContext) == 0x000070, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, GustStrength___WindVelocity) == 0x000078, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::GustStrength___WindVelocity' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, ClothGustLocalSettingsOut) == 0x00007C, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::ClothGustLocalSettingsOut' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, GustDirectionWeightLocal) == 0x000090, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::GustDirectionWeightLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, ElapsedTimeLocal) == 0x00009C, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::ElapsedTimeLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, FinalGustStrengthLocal) == 0x0000A0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::FinalGustStrengthLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, GustDurationLocal) == 0x0000A4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::GustDurationLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, GustStrengthLocal) == 0x0000A8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::GustStrengthLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, TimeBetweenGustsLocal) == 0x0000AC, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::TimeBetweenGustsLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, DeltaTimeLocal) == 0x0000B0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::DeltaTimeLocal' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000B4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_PerlinNoise1D_ReturnValue) == 0x0000B8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000BC, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_PerlinNoise1D_ReturnValue_1) == 0x0000C0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_PerlinNoise1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000C8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000CC, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000D0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000D8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_FInterpTo_ReturnValue) == 0x0000DC, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_FClamp_ReturnValue) == 0x0000E4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_RandomFloat_ReturnValue) == 0x0000E8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_UnclampedLerp_Return_Value) == 0x0000F0, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_UnclampedLerp_Return_Value' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F4, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, K2Node_MakeStruct_WindGustLocalSettingStruct) == 0x0000F8, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::K2Node_MakeStruct_WindGustLocalSettingStruct' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_FInterpTo_ReturnValue_1) == 0x00010C, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_FInterpTo_ReturnValue_2) == 0x000110, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_FInterpTo_ReturnValue_3) == 0x000114, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_RandomFloat_ReturnValue_1) == 0x000118, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_UnclampedLerp_Return_Value_1) == 0x00011C, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_UnclampedLerp_Return_Value_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000120, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_RandomFloat_ReturnValue_2) == 0x000124, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction, CallFunc_UnclampedLerp_Return_Value_2) == 0x000128, "Member 'FortAnimationBPFunctionLibrary_C_WindGustGeneratorFunction::CallFunc_UnclampedLerp_Return_Value_2' has a wrong offset!");

}

