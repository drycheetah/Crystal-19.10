#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressiveCosmeticUI

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"


namespace SDK::Params
{

// Function ProgressiveCosmeticUI.FortProgressiveItemScreen.OnContainerTabVisibilityUpdated
// 0x0008 (0x0008 - 0x0000)
struct FortProgressiveItemScreen_OnContainerTabVisibilityUpdated final
{
public:
	bool                                          bTabsVisible;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingAdjustmentForTabs;                          // 0x0004(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveItemScreen_OnContainerTabVisibilityUpdated) == 0x000004, "Wrong alignment on FortProgressiveItemScreen_OnContainerTabVisibilityUpdated");
static_assert(sizeof(FortProgressiveItemScreen_OnContainerTabVisibilityUpdated) == 0x000008, "Wrong size on FortProgressiveItemScreen_OnContainerTabVisibilityUpdated");
static_assert(offsetof(FortProgressiveItemScreen_OnContainerTabVisibilityUpdated, bTabsVisible) == 0x000000, "Member 'FortProgressiveItemScreen_OnContainerTabVisibilityUpdated::bTabsVisible' has a wrong offset!");
static_assert(offsetof(FortProgressiveItemScreen_OnContainerTabVisibilityUpdated, SpacingAdjustmentForTabs) == 0x000004, "Member 'FortProgressiveItemScreen_OnContainerTabVisibilityUpdated::SpacingAdjustmentForTabs' has a wrong offset!");

// Function ProgressiveCosmeticUI.FortProgressiveItemWidget.OnPeekStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortProgressiveItemWidget_OnPeekStateChanged final
{
public:
	bool                                          bIsInPeekState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveItemWidget_OnPeekStateChanged) == 0x000001, "Wrong alignment on FortProgressiveItemWidget_OnPeekStateChanged");
static_assert(sizeof(FortProgressiveItemWidget_OnPeekStateChanged) == 0x000001, "Wrong size on FortProgressiveItemWidget_OnPeekStateChanged");
static_assert(offsetof(FortProgressiveItemWidget_OnPeekStateChanged, bIsInPeekState) == 0x000000, "Member 'FortProgressiveItemWidget_OnPeekStateChanged::bIsInPeekState' has a wrong offset!");

// Function ProgressiveCosmeticUI.FortProgressiveItemWidget.OnStageItemChanged
// 0x0040 (0x0040 - 0x0000)
struct FortProgressiveItemWidget_OnStageItemChanged final
{
public:
	struct FProgressiveStageItemInfo              InStageItemInfo;                                   // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveItemWidget_OnStageItemChanged) == 0x000008, "Wrong alignment on FortProgressiveItemWidget_OnStageItemChanged");
static_assert(sizeof(FortProgressiveItemWidget_OnStageItemChanged) == 0x000040, "Wrong size on FortProgressiveItemWidget_OnStageItemChanged");
static_assert(offsetof(FortProgressiveItemWidget_OnStageItemChanged, InStageItemInfo) == 0x000000, "Member 'FortProgressiveItemWidget_OnStageItemChanged::InStageItemInfo' has a wrong offset!");

// Function ProgressiveCosmeticUI.FortProgressiveStageList.AddStageWidget
// 0x0008 (0x0008 - 0x0000)
struct FortProgressiveStageList_AddStageWidget final
{
public:
	class UFortProgressiveStageWidget*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveStageList_AddStageWidget) == 0x000008, "Wrong alignment on FortProgressiveStageList_AddStageWidget");
static_assert(sizeof(FortProgressiveStageList_AddStageWidget) == 0x000008, "Wrong size on FortProgressiveStageList_AddStageWidget");
static_assert(offsetof(FortProgressiveStageList_AddStageWidget, ReturnValue) == 0x000000, "Member 'FortProgressiveStageList_AddStageWidget::ReturnValue' has a wrong offset!");

// Function ProgressiveCosmeticUI.FortProgressiveStageWidget.AddStageItemWidget
// 0x0008 (0x0008 - 0x0000)
struct FortProgressiveStageWidget_AddStageItemWidget final
{
public:
	class UFortProgressiveItemWidget*             ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveStageWidget_AddStageItemWidget) == 0x000008, "Wrong alignment on FortProgressiveStageWidget_AddStageItemWidget");
static_assert(sizeof(FortProgressiveStageWidget_AddStageItemWidget) == 0x000008, "Wrong size on FortProgressiveStageWidget_AddStageItemWidget");
static_assert(offsetof(FortProgressiveStageWidget_AddStageItemWidget, ReturnValue) == 0x000000, "Member 'FortProgressiveStageWidget_AddStageItemWidget::ReturnValue' has a wrong offset!");

// Function ProgressiveCosmeticUI.FortProgressiveStageWidget.OnPeekStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortProgressiveStageWidget_OnPeekStateChanged final
{
public:
	bool                                          bIsInPeekState;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortProgressiveStageWidget_OnPeekStateChanged) == 0x000001, "Wrong alignment on FortProgressiveStageWidget_OnPeekStateChanged");
static_assert(sizeof(FortProgressiveStageWidget_OnPeekStateChanged) == 0x000001, "Wrong size on FortProgressiveStageWidget_OnPeekStateChanged");
static_assert(offsetof(FortProgressiveStageWidget_OnPeekStateChanged, bIsInPeekState) == 0x000000, "Member 'FortProgressiveStageWidget_OnPeekStateChanged::bIsInPeekState' has a wrong offset!");

}

